{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/exercise_log.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Spinner, Accordion, Button, Card } from 'react-bootstrap';\n\nconst ExercisesLog = ({\n  ex,\n  spinner,\n  title\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ques = _useState2[0],\n        setQues = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        quesSpinner = _useState4[0],\n        setQuesSpinner = _useState4[1];\n\n  const getQuestions = e => {\n    const id = e.target.id;\n    setQuesSpinner(true);\n    axios.get(`http://localhost:5000/question/${id}`).then(res => {\n      setQues(res.data);\n      setQuesSpinner(false);\n    }).catch(err => console.log(err));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    style: {\n      padding: '5px',\n      height: '800px',\n      overflow: 'scroll',\n      marginRight: '20px'\n    },\n    className: \"col col-lg-5 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, title), spinner ? React.createElement(Spinner, {\n    animation: \"grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, ex.map(data => {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      onClick: getQuestions,\n      variant: \"link\",\n      id: data._id,\n      eventKey: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, data.title, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      style: {\n        fontSize: '13px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Duration: \", data.duration, \" Min\"))), React.createElement(Accordion.Collapse, {\n      eventKey: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: '#97BA10',\n        fontStyle: 'italic'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Number of Questions: \", ques.length), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), quesSpinner ? React.createElement(Spinner, {\n      size: \"sm\",\n      animation: \"grow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }) : ques.map(q => {\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        style: {\n          color: '#E8943F'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, q.question), React.createElement(\"span\", {\n        style: {\n          color: '#E8943F',\n          fontStyle: 'italic'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Options\")), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, q.options.map(op => {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, op);\n      })), React.createElement(\"span\", {\n        style: {\n          color: '#97BA10'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"correct answer: \" + q.correct_ans), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: '#97BA10'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, q.score + \" marks\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }))));\n  }))));\n};\n\nexport default ExercisesLog;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/exercise_log.js"],"names":["React","useState","useEffect","axios","Spinner","Accordion","Button","Card","ExercisesLog","ex","spinner","title","ques","setQues","quesSpinner","setQuesSpinner","getQuestions","e","id","target","get","then","res","data","catch","err","console","log","padding","height","overflow","marginRight","textAlign","map","_id","fontSize","duration","color","fontStyle","length","q","question","options","op","correct_ans","score"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Spinner, Accordion, Button, Card } from 'react-bootstrap';\n\n\n\n\n\nconst ExercisesLog = ({ ex, spinner, title }) => {\n\n    const [ques, setQues] = useState([]);\n    const [quesSpinner, setQuesSpinner] = useState(false)\n    \n\n    const getQuestions = (e) => {\n\n        const id = e.target.id;\n        setQuesSpinner(true)\n\n        axios.get(`http://localhost:5000/question/${id}`)\n            .then(res => {\n                setQues(res.data)\n                setQuesSpinner(false)\n\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    return (\n        <>\n            <Card style={{ padding: '5px', height: '800px', overflow: 'scroll', marginRight: '20px' }} className=\"col col-lg-5 col-sm-6\">\n                <h6 style={{ textAlign: 'center' }}>{title}</h6>\n                {spinner ? <Spinner animation=\"grow\" /> :\n                    <Accordion defaultActiveKey=\"0\">\n                        {ex.map(data => {\n                            return (\n                                <Card>\n                                    <Card.Header>\n                                        <Accordion.Toggle as={Button} onClick={getQuestions} variant=\"link\" id={data._id} eventKey={data._id}>\n                                            {data.title}<br /><small style={{ fontSize: '13px' }}>Duration: {data.duration} Min</small>\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={data._id}>\n                                        <Card.Body>\n                                            <span style={{ color: '#97BA10', fontStyle:'italic' }}>Number of Questions: {ques.length}</span>\n                                            <hr />\n                                            {quesSpinner ? <Spinner size=\"sm\" animation=\"grow\" />\n                                                :\n                                                ques.map(q => {\n                                                    return (\n                                                        <>\n                                                            <p style={{ color: '#E8943F' }}>{q.question}</p>\n\n                                                            <span style={{ color: '#E8943F', fontStyle: 'italic' }}><u>Options</u></span>\n\n                                                            <ul>\n                                                                {q.options.map(op => {\n                                                                    return (\n                                                                        <li>{op}</li>\n                                                                    );\n                                                                })}\n                                                            </ul>\n                                                            <span style={{ color: '#97BA10'}}>{\"correct answer: \" + q.correct_ans}</span>\n                                                            <br />\n                                                            <span style={{ color: '#97BA10' }}>{q.score + \" marks\"}</span>\n                                                            <hr />\n                                                        </>\n                                                    );\n                                                })\n                                            }\n\n                                        </Card.Body>\n\n                                    </Accordion.Collapse>\n                                </Card>\n                            )\n                        })}\n                    </Accordion>}\n            </Card>\n        </>\n    );\n}\n\nexport default ExercisesLog;"]},"metadata":{},"sourceType":"module"}
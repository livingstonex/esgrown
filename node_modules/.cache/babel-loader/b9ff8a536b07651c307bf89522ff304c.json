{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/navbar.js\";\nimport React, { Component, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../img/esgrown.png\";\nimport { Image } from 'react-bootstrap';\nimport { AuthContext } from '../AuthContext';\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false,\n      isLogged_I: false,\n      name: '',\n      status: '',\n      //Corporate auth params\n      isLogged_C: false,\n      org_name: ''\n    };\n  }\n\n  componentDidMount() {\n    const i = JSON.parse(sessionStorage.getItem(\"key\"));\n    const c = JSON.parse(sessionStorage.getItem(\"corp_key\"));\n    console.log(i); // console.log(c);\n\n    if (i) {\n      this.setState({\n        isLogged: i.isLogged,\n        isLogged_I: i.isLogged,\n        name: i.name,\n        status: i.status\n      });\n    } else {\n      this.setState({\n        isLogged: false,\n        isLogged_I: false\n      });\n    } //Check for Corporate User\n\n\n    if (c) {\n      this.setState({\n        isLogged_C: c.isLogged,\n        org_name: c.cname\n      });\n    } else {\n      this.setState({\n        isLogged_C: false\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(AuthContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, context => // navbar-light bg-light static-top\n    React.createElement(\"nav\", {\n      class: \"navbar navbar-expand-lg\",\n      style: {\n        background: 'transparent'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex justify-content-center align-items-center\",\n      style: {\n        backgroundColor: '',\n        borderRadius: '50%',\n        width: '70px',\n        height: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      height: \"65\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      class: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarResponsive\",\n      \"aria-controls\": \"navbarResponsive\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"navbar-toggler-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"collapse navbar-collapse\",\n      id: \"navbarResponsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"navbar-nav ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"nav-item \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      className: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"li\", {\n      class: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.isLogged == true ? React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Logout\") : ''), React.createElement(\"li\", {\n      class: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.isLogged_C == true ? React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Logout\") : ''), React.createElement(\"li\", {\n      class: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.isLogged == true ? React.createElement(Link, {\n      to: \"/frontier\",\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Welcome: \", this.state.name) : ''), React.createElement(\"li\", {\n      class: \"nav-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"nav-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.isLogged_C == true ? `Welcome: ${this.state.org_name}` : '')))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/navbar.js"],"names":["React","Component","useContext","Link","logo","Image","AuthContext","Navbar","constructor","props","state","isLogged","isLogged_I","name","status","isLogged_C","org_name","componentDidMount","i","JSON","parse","sessionStorage","getItem","c","console","log","setState","cname","render","context","background","backgroundColor","borderRadius","width","height"],"mappings":"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","sourcesContent":["import React, {Component, useContext} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport logo from \"../img/esgrown.png\";\nimport {Image} from 'react-bootstrap';\n\nimport {AuthContext} from '../AuthContext'\n\nexport default class Navbar extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      isLogged: false,\n      isLogged_I: false,\n      name: '',\n      status: '',\n      //Corporate auth params\n      isLogged_C: false,\n      org_name: ''\n    }\n  }\n\n  componentDidMount(){\n    const i = JSON.parse(sessionStorage.getItem(\"key\"));\n    const c = JSON.parse(sessionStorage.getItem(\"corp_key\"));\n\n    console.log(i);\n    // console.log(c);\n\n    if(i){\n      this.setState({\n        isLogged: i.isLogged,\n        isLogged_I: i.isLogged,\n        name: i.name,\n        status: i.status\n      });\n    }else{\n      this.setState({\n        isLogged: false,\n        isLogged_I:false\n      })\n    }\n\n    //Check for Corporate User\n    if(c){\n      this.setState({\n        isLogged_C: c.isLogged,\n        org_name: c.cname\n      });\n    }else{\n      this.setState({\n        isLogged_C:false\n      })\n    }\n\n  }\n    render(){  \n        return(\n          <AuthContext.Consumer>\n                    {\n                        (context) => (\n                          // navbar-light bg-light static-top\n                                      <nav class=\"navbar navbar-expand-lg\" style={{background:'transparent'}}>\n                                      <div class=\"container\">\n                                        <div class=\"d-flex justify-content-center align-items-center\" style={{backgroundColor:'', borderRadius:'50%', width:'70px', height:'70px',}}>\n                                          <img src={logo}  height=\"65\"/>\n                                        </div>\n                                        {/* <a class=\"navbar-brand\" style={{backgroundColor:'white', borderRadius:'50%'}} href=\"/\"><img src={logo} width=\"60%\"/></a> */}\n                                        {/* <Image src={logo}  width=\"70\" height=\"70\"/> */}\n                                        {/* <p style={{color:'red'}}>Esgrown</p> */}\n                                            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                              <span class=\"navbar-toggler-icon\"></span>\n                                            </button>\n                                        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                                          <ul class=\"navbar-nav ml-auto\">\n                                            <li class=\"nav-item \">\n                                            </li>\n                                            <li className=\"nav-item\">\n                                            {\n                                              // (this.state.isLogged == true)? \"\":<Link className=\"nav-link\" to=\"/about\">About</Link>\n                                            }                                      \n                                            </li>                                         \n                                            <li class=\"nav-item\">\n                                            {\n                                              (this.state.isLogged == true)?<Link className=\"nav-link\" to=\"/logout\">Logout</Link>:''\n                                            }\n                                            </li>\n                                            <li class=\"nav-item\">\n                                            {\n                                              (this.state.isLogged_C == true)?<Link className=\"nav-link\" to=\"/logout\">Logout</Link>:''\n                                            }\n                                            </li>\n                                            <li class=\"nav-item\">\n                                             \n                                                {\n                                                  (this.state.isLogged == true)? <Link to=\"/frontier\" className=\"nav-link\"> Welcome: {this.state.name}</Link> : ''\n                                                }\n                                              \n                                            </li>\n                                            <li class=\"nav-item\">\n                                              <Link className=\"nav-link\">\n                                                {\n                                                  (this.state.isLogged_C == true)? `Welcome: ${this.state.org_name}` : ''\n                                                }\n                                              </Link>\n                                            </li>\n                                          </ul>\n                                        </div>\n                                      </div>\n                                    </nav>\n                    )}\n          </AuthContext.Consumer>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';import{Spinner,Accordion,Button,Card}from'react-bootstrap';var Contentlog=function Contentlog(props){var data=props.data,spinner=props.spinner;return React.createElement(React.Fragment,null,React.createElement(Card,{style:{padding:'5px',height:'800px',overflow:'scroll',marginRight:'20px'},className:\"col col-lg-5 col-sm-6\"},React.createElement(\"h6\",{style:{textAlign:'center'}},props.title),spinner?React.createElement(Spinner,{animation:\"grow\"}):data.length===0?React.createElement(\"div\",{className:\"d-flex justify-content-center\",style:{fontSize:'25px',fontFamily:'quicksand',color:'grey'}},\"No Content Yet\"):React.createElement(Accordion,{defaultActiveKey:\"0\"},data.map(function(data){return React.createElement(Card,null,React.createElement(Card.Header,null,React.createElement(Accordion.Toggle,{as:Button,variant:\"link\",eventKey:data._id},data.title,React.createElement(\"br\",null),React.createElement(\"small\",{style:{fontSize:'13px'}},\"Published: \",data.is_published?\"true\":\"false\"))),React.createElement(Accordion.Collapse,{eventKey:data._id},React.createElement(Card.Body,null,data.content,data.media?data.media.split(';')[0].split(':')[1].split('/')[0]==\"image\"?React.createElement(\"img\",{src:data.media,style:{height:'100px'}}):React.createElement(\"video\",{src:data.media,controls:true,style:{height:'100px'}}):'')));}))));};export default Contentlog;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/admin/services/components/content_log.js"],"names":["React","Spinner","Accordion","Button","Card","Contentlog","props","data","spinner","padding","height","overflow","marginRight","textAlign","title","length","fontSize","fontFamily","color","map","_id","is_published","content","media","split"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,SAAlB,CAA6BC,MAA7B,CAAqCC,IAArC,KAAiD,iBAAjD,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,IAElBC,CAAAA,IAFkB,CAEAD,KAFA,CAElBC,IAFkB,CAEZC,OAFY,CAEAF,KAFA,CAEZE,OAFY,CAI1B,MACI,yCACI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,OAAO,CAAE,KAAX,CAAkBC,MAAM,CAAE,OAA1B,CAAmCC,QAAQ,CAAE,QAA7C,CAAuDC,WAAW,CAAE,MAApE,CAAb,CAA2F,SAAS,CAAC,uBAArG,EACI,0BAAI,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAX,EAAqCP,KAAK,CAACQ,KAA3C,CADJ,CAEKN,OAAO,CAAG,oBAAC,OAAD,EAAS,SAAS,CAAC,MAAnB,EAAH,CAAkCD,IAAI,CAACQ,MAAL,GAAgB,CAAhB,CAAoB,2BAAK,SAAS,CAAC,+BAAf,CAA+C,KAAK,CAAE,CAACC,QAAQ,CAAC,MAAV,CAAiBC,UAAU,CAAE,WAA7B,CAAyCC,KAAK,CAAC,MAA/C,CAAtD,mBAApB,CACtC,oBAAC,SAAD,EAAW,gBAAgB,CAAC,GAA5B,EACKX,IAAI,CAACY,GAAL,CAAS,SAAAZ,IAAI,CAAI,CACd,MACI,qBAAC,IAAD,MACI,oBAAC,IAAD,CAAM,MAAN,MACI,oBAAC,SAAD,CAAW,MAAX,EAAkB,EAAE,CAAEJ,MAAtB,CAA8B,OAAO,CAAC,MAAtC,CAA6C,QAAQ,CAAEI,IAAI,CAACa,GAA5D,EACKb,IAAI,CAACO,KADV,CACgB,8BADhB,CACsB,6BAAO,KAAK,CAAE,CAAEE,QAAQ,CAAE,MAAZ,CAAd,gBAAgDT,IAAI,CAACc,YAAL,CAAoB,MAApB,CAA6B,OAA7E,CADtB,CADJ,CADJ,CAMI,oBAAC,SAAD,CAAW,QAAX,EAAoB,QAAQ,CAAEd,IAAI,CAACa,GAAnC,EACI,oBAAC,IAAD,CAAM,IAAN,MACKb,IAAI,CAACe,OADV,CAGQf,IAAI,CAACgB,KAAL,CAAahB,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyBA,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCA,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,GAAwD,OAAxD,CAAkE,2BAAK,GAAG,CAAEjB,IAAI,CAACgB,KAAf,CAAsB,KAAK,CAAE,CAAEb,MAAM,CAAE,OAAV,CAA7B,EAAlE,CAAyH,6BAAO,GAAG,CAAEH,IAAI,CAACgB,KAAjB,CAAwB,QAAQ,KAAhC,CAAiC,KAAK,CAAE,CAAEb,MAAM,CAAE,OAAV,CAAxC,EAAtI,CAA8M,EAHtN,CADJ,CANJ,CADJ,CAkBH,CAnBA,CADL,CAHR,CADJ,CADJ,CAgCH,CApCD,CAqCA,cAAeL,CAAAA,UAAf","sourcesContent":["import React from 'react';\nimport { Spinner, Accordion, Button, Card } from 'react-bootstrap';\n\n\n\n\nconst Contentlog = (props) => {\n\n    const { data, spinner } = props\n\n    return (\n        <>\n            <Card style={{ padding: '5px', height: '800px', overflow: 'scroll', marginRight: '20px' }} className=\"col col-lg-5 col-sm-6\">\n                <h6 style={{ textAlign: 'center' }}>{props.title}</h6>\n                {spinner ? <Spinner animation=\"grow\" /> : data.length === 0 ? <div className=\"d-flex justify-content-center\" style={{fontSize:'25px',fontFamily: 'quicksand',color:'grey'}}>No Content Yet</div> :\n                    <Accordion defaultActiveKey=\"0\">\n                        {data.map(data => {\n                            return (\n                                <Card>\n                                    <Card.Header>\n                                        <Accordion.Toggle as={Button} variant=\"link\" eventKey={data._id}>\n                                            {data.title}<br /><small style={{ fontSize: '13px' }}>Published: {data.is_published ? \"true\" : \"false\"}</small>\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={data._id}>\n                                        <Card.Body>\n                                            {data.content}\n                                            {\n                                                data.media ? data.media.split(';')[0].split(':')[1].split('/')[0] == \"image\" ? <img src={data.media} style={{ height: '100px' }} /> : <video src={data.media} controls style={{ height: '100px' }}></video> : ''\n                                            }\n                                        </Card.Body>\n\n                                    </Accordion.Collapse>\n                                </Card>\n                            )\n                        })}\n                    </Accordion>\n                    \n                }\n            </Card>\n        </>\n    );\n}\nexport default Contentlog;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/new_exercise.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport { set } from 'mongoose';\n\nconst NewExercises = ({\n  service,\n  refreshContentLog,\n  title\n}) => {\n  const exUrl = `http://localhost:5000/excercise/add`;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinner = _useState4[0],\n        setSpinner = _useState4[1]; //Exercises\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        extitle = _useState6[0],\n        setExTitle = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        exduration = _useState8[0],\n        setExDuration = _useState8[1]; //questions\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        exId = _useState10[0],\n        setExId = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        question = _useState12[0],\n        setQuestion = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        options = _useState14[0],\n        setOptions = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ans = _useState16[0],\n        setAns = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        score = _useState18[0],\n        setScore = _useState18[1];\n\n  const _useState19 = useState(0),\n        _useState20 = _slicedToArray(_useState19, 2),\n        totalQ = _useState20[0],\n        setTotalQ = _useState20[1]; //admin creating this exercise\n\n\n  const _useState21 = useState(),\n        _useState22 = _slicedToArray(_useState21, 2),\n        admin = _useState22[0],\n        setAdmin = _useState22[1];\n\n  const _useState23 = useState(),\n        _useState24 = _slicedToArray(_useState23, 2),\n        corpId = _useState24[0],\n        setCorpId = _useState24[1];\n\n  const _useState25 = useState(''),\n        _useState26 = _slicedToArray(_useState25, 2),\n        jobId = _useState26[0],\n        setJobId = _useState26[1]; // List of all jobs returned from api\n\n\n  const _useState27 = useState([]),\n        _useState28 = _slicedToArray(_useState27, 2),\n        jobs = _useState28[0],\n        setJobs = _useState28[1]; //get logged in Admin\n\n\n  useEffect(() => {\n    const admin = JSON.parse(sessionStorage.getItem(\"key\"));\n    admin.status == 'corporate' ? setCorpId(admin.id) : setAdmin(admin.id);\n    getAllJobs(admin.id);\n  }, []); // question functions\n\n  const handleOptions = e => {\n    setOptions(e.target.value);\n  };\n\n  const handleAns = e => {\n    setAns(e.target.value);\n  };\n\n  const handleQuestion = e => {\n    setQuestion(e.target.value);\n  };\n\n  const handleScore = e => {\n    const value = e.target.value;\n    setScore(value);\n  };\n\n  const createQuestion = () => {\n    setSpinner(true);\n    const splitOptions = options.split(',');\n    const splitAns = ans.split(',');\n    const questionData = {\n      excercise_id: exId,\n      question: question,\n      options: splitOptions,\n      correct_ans: splitAns,\n      score: score\n    };\n    axios.post(`http://localhost:5000/question/add`, questionData).then(res => {\n      console.log(res.data);\n      setSpinner(false);\n      setAns('');\n      setQuestion('');\n      setOptions('');\n      setScore('');\n      setExId(res.data.excercise_id); //get number of questions and display\n\n      axios.post(`http://localhost:5000/question/${res.data.excercise_id}`).then(res => setTotalQ(res.data.length)).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n    console.log(questionData);\n  }; //exercise functions\n\n\n  const handleExTitle = e => {\n    const value = e.target.value;\n    setExTitle(value);\n  };\n\n  const handleExDuration = e => {\n    const value = e.target.value;\n    setExDuration(value);\n  };\n\n  const createExercise = () => {\n    const exData = {\n      title: extitle,\n      duration: exduration,\n      service: service,\n      admin_id: admin ? admin : null,\n      corp_id: corpId ? corpId : null,\n      job_id: jobId\n    }; // if (extitle == \"\") {\n    //     return\n    // }\n    // if (exduration == \"\") {\n    //     return\n    // }\n    // if (jobId == \"\") {\n    //     alert('you need to choose a job')\n    //     return;\n    // } \n\n    setSpinner(true);\n    axios.post(exUrl, exData).then(res => {\n      setExId(res.data._id);\n      setSpinner(false);\n      setPage(2);\n      refreshContentLog();\n      console.log(res.data);\n    }).catch(err => {\n      alert('oops ' + err);\n    });\n    console.log(exData);\n  }; //page display logic\n\n\n  const setExForm = () => {\n    setPage(1);\n  };\n\n  const setQuesForm = () => {\n    setPage(2);\n  }; // onChange Job\n\n\n  const onChangeJob = e => {\n    const job_id = e.target.value;\n    setJobId(job_id);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    className: \"col col-lg-6 col-sm-6\",\n    style: {\n      overflow: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, title), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), page == 0 ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      height: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn font-weight-bold mt-3 py-2 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: setExForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Create Exercise\")) : page == 1 ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Select Job\"), React.createElement(\"select\", {\n    onChange: onChangeJob,\n    className: \"form-control text-small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Select Job this exercise is for\"), mapJobs()))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Exercise Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: extitle,\n    onChange: handleExTitle,\n    placeholder: \"Exercise Title\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Exercise Duration\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    value: exduration,\n    onChange: handleExDuration,\n    placeholder: \"Time Allowed for this Exercise Eg 20\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn font-weight-light mt-3 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: createExercise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }) : \"Create New Exercise\")))) : page == 2 ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"Exercise: \", extitle)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"Number of questions: \", totalQ)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: question,\n    onChange: handleQuestion,\n    placeholder: \"Question\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Options\"), React.createElement(\"textarea\", {\n    cols: \"5\",\n    rows: \"3\",\n    value: options,\n    onChange: handleOptions,\n    className: \"form-control\",\n    placeholder: \"Eg rice,beans,garri\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"Corrects Answer / Answers\"), React.createElement(\"textarea\", {\n    cols: \"5\",\n    rows: \"3\",\n    value: ans,\n    className: \"form-control\",\n    onChange: handleAns,\n    placeholder: \"Eg rice,beans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, \"Score\"), React.createElement(\"input\", {\n    type: \"number\",\n    value: score,\n    onChange: handleScore,\n    className: \"form-control\",\n    placeholder: \"Eg 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn font-weight-light mt-3 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: createQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }) : \"Create Question\")))) : \"\"))); // Get all jobs by corpid\n\n  function getAllJobs(corpid) {\n    try {\n      axios.get(`http://localhost:5000/jobs/${corpid}`).then(jobs => {\n        // console.log(jobs.data[0].jobs);\n        setJobs(jobs.data[0].jobs);\n      }).catch(err => console.log('Error: ' + err));\n    } catch (error) {}\n  } // Map through all the jobs\n\n\n  function mapJobs() {\n    return jobs.map(item => React.createElement(\"option\", {\n      value: item.job_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, item.title));\n  }\n};\n\nexport default NewExercises;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/new_exercise.js"],"names":["React","useState","useEffect","axios","Card","CardContent","Spinner","set","NewExercises","service","refreshContentLog","title","exUrl","page","setPage","spinner","setSpinner","extitle","setExTitle","exduration","setExDuration","exId","setExId","question","setQuestion","options","setOptions","ans","setAns","score","setScore","totalQ","setTotalQ","admin","setAdmin","corpId","setCorpId","jobId","setJobId","jobs","setJobs","JSON","parse","sessionStorage","getItem","status","id","getAllJobs","handleOptions","e","target","value","handleAns","handleQuestion","handleScore","createQuestion","splitOptions","split","splitAns","questionData","excercise_id","correct_ans","post","then","res","console","log","data","length","catch","err","handleExTitle","handleExDuration","createExercise","exData","duration","admin_id","corp_id","job_id","_id","alert","setExForm","setQuesForm","onChangeJob","overflow","textAlign","height","background","color","fontWeight","mapJobs","corpid","get","error","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,GAAT,QAAoB,UAApB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA;AAA9B,CAAD,KAA0C;AAE3D,QAAMC,KAAK,GAAI,qCAAf;;AAF2D,oBAInCX,QAAQ,CAAC,CAAD,CAJ2B;AAAA;AAAA,QAIpDY,IAJoD;AAAA,QAI9CC,OAJ8C;;AAAA,qBAO7Bb,QAAQ,CAAC,KAAD,CAPqB;AAAA;AAAA,QAOpDc,OAPoD;AAAA,QAO3CC,UAP2C,kBAS3D;;;AAT2D,qBAU7Bf,QAAQ,CAAC,EAAD,CAVqB;AAAA;AAAA,QAUpDgB,OAVoD;AAAA,QAU3CC,UAV2C;;AAAA,qBAWvBjB,QAAQ,CAAC,EAAD,CAXe;AAAA;AAAA,QAWpDkB,UAXoD;AAAA,QAWxCC,aAXwC,kBAa3D;;;AAb2D,qBAcnCnB,QAAQ,CAAC,EAAD,CAd2B;AAAA;AAAA,QAcpDoB,IAdoD;AAAA,QAc9CC,OAd8C;;AAAA,sBAe3BrB,QAAQ,CAAC,EAAD,CAfmB;AAAA;AAAA,QAepDsB,QAfoD;AAAA,QAe1CC,WAf0C;;AAAA,sBAgB7BvB,QAAQ,CAAC,EAAD,CAhBqB;AAAA;AAAA,QAgBpDwB,OAhBoD;AAAA,QAgB3CC,UAhB2C;;AAAA,sBAiBrCzB,QAAQ,CAAC,EAAD,CAjB6B;AAAA;AAAA,QAiBpD0B,GAjBoD;AAAA,QAiB/CC,MAjB+C;;AAAA,sBAkBjC3B,QAAQ,CAAC,EAAD,CAlByB;AAAA;AAAA,QAkBpD4B,KAlBoD;AAAA,QAkB7CC,QAlB6C;;AAAA,sBAmB/B7B,QAAQ,CAAC,CAAD,CAnBuB;AAAA;AAAA,QAmBpD8B,MAnBoD;AAAA,QAmB5CC,SAnB4C,mBAqB3D;;;AArB2D,sBAsBjC/B,QAAQ,EAtByB;AAAA;AAAA,QAsBpDgC,KAtBoD;AAAA,QAsB7CC,QAtB6C;;AAAA,sBAuB/BjC,QAAQ,EAvBuB;AAAA;AAAA,QAuBpDkC,MAvBoD;AAAA,QAuB5CC,SAvB4C;;AAAA,sBAwBjCnC,QAAQ,CAAC,EAAD,CAxByB;AAAA;AAAA,QAwBpDoC,KAxBoD;AAAA,QAwB7CC,QAxB6C,mBA0B3D;;;AA1B2D,sBA2BnCrC,QAAQ,CAAC,EAAD,CA3B2B;AAAA;AAAA,QA2BpDsC,IA3BoD;AAAA,QA2B9CC,OA3B8C,mBA8B3D;;;AACAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+B,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAAd;AAEAX,IAAAA,KAAK,CAACY,MAAN,IAAgB,WAAhB,GAA8BT,SAAS,CAACH,KAAK,CAACa,EAAP,CAAvC,GAAoDZ,QAAQ,CAACD,KAAK,CAACa,EAAP,CAA5D;AACAC,IAAAA,UAAU,CAACd,KAAK,CAACa,EAAP,CAAV;AACH,GALQ,EAKN,EALM,CAAT,CA/B2D,CAuC3D;;AACA,QAAME,aAAa,GAAIC,CAAD,IAAO;AAEzBvB,IAAAA,UAAU,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAHD;;AAIA,QAAMC,SAAS,GAAIH,CAAD,IAAO;AACrBrB,IAAAA,MAAM,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAIA,QAAME,cAAc,GAAIJ,CAAD,IAAO;AAC1BzB,IAAAA,WAAW,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAGA,QAAMG,WAAW,GAAIL,CAAD,IAAO;AACvB,UAAME,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAAvB;AAEArB,IAAAA,QAAQ,CAACqB,KAAD,CAAR;AACH,GAJD;;AAMA,QAAMI,cAAc,GAAG,MAAM;AAGrBvC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMwC,YAAY,GAAG/B,OAAO,CAACgC,KAAR,CAAc,GAAd,CAArB;AAEA,UAAMC,QAAQ,GAAG/B,GAAG,CAAC8B,KAAJ,CAAU,GAAV,CAAjB;AAEA,UAAME,YAAY,GAAG;AACjBC,MAAAA,YAAY,EAAEvC,IADG;AAEjBE,MAAAA,QAAQ,EAAEA,QAFO;AAGjBE,MAAAA,OAAO,EAAE+B,YAHQ;AAIjBK,MAAAA,WAAW,EAAEH,QAJI;AAKjB7B,MAAAA,KAAK,EAAEA;AALU,KAArB;AAQA1B,IAAAA,KAAK,CAAC2D,IAAN,CAAY,oCAAZ,EAAiDH,YAAjD,EACKI,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAnD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAY,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAR,MAAAA,OAAO,CAAC0C,GAAG,CAACG,IAAJ,CAASP,YAAV,CAAP,CAPS,CAST;;AACAzD,MAAAA,KAAK,CAAC2D,IAAN,CAAY,kCAAiCE,GAAG,CAACG,IAAJ,CAASP,YAAa,EAAnE,EACKG,IADL,CACUC,GAAG,IAAIhC,SAAS,CAACgC,GAAG,CAACG,IAAJ,CAASC,MAAV,CAD1B,EAEKC,KAFL,CAEWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAFlB;AAIH,KAfL,EAgBKD,KAhBL,CAgBWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAhBlB;AAkBAL,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACP,GApCD,CAzD2D,CAiG3D;;;AACA,QAAMY,aAAa,GAAItB,CAAD,IAAO;AACzB,UAAME,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAAvB;AAEAjC,IAAAA,UAAU,CAACiC,KAAD,CAAV;AACH,GAJD;;AAMA,QAAMqB,gBAAgB,GAAIvB,CAAD,IAAO;AAE5B,UAAME,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASC,KAAvB;AAEA/B,IAAAA,aAAa,CAAC+B,KAAD,CAAb;AACH,GALD;;AAQA,QAAMsB,cAAc,GAAG,MAAM;AAEzB,UAAMC,MAAM,GAAG;AACX/D,MAAAA,KAAK,EAAEM,OADI;AAEX0D,MAAAA,QAAQ,EAAExD,UAFC;AAGXV,MAAAA,OAAO,EAAEA,OAHE;AAIXmE,MAAAA,QAAQ,EAAE3C,KAAK,GAAGA,KAAH,GAAW,IAJf;AAKX4C,MAAAA,OAAO,EAAE1C,MAAM,GAAGA,MAAH,GAAY,IALhB;AAMX2C,MAAAA,MAAM,EAAEzC;AANG,KAAf,CAFyB,CAWzB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEArB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEIb,IAAAA,KAAK,CAAC2D,IAAN,CAAWlD,KAAX,EAAkB8D,MAAlB,EACKX,IADL,CACUC,GAAG,IAAI;AACT1C,MAAAA,OAAO,CAAC0C,GAAG,CAACG,IAAJ,CAASY,GAAV,CAAP;AACA/D,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAAC,CAAD,CAAP;AACAJ,MAAAA,iBAAiB;AACjBuD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACH,KAPL,EAQKE,KARL,CAQWC,GAAG,IAAI;AACVU,MAAAA,KAAK,CAAC,UAAUV,GAAX,CAAL;AACH,KAVL;AAYJL,IAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AAEH,GAzCD,CAhH2D,CA2J3D;;;AACA,QAAMO,SAAS,GAAG,MAAM;AACpBnE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAFD;;AAGA,QAAMoE,WAAW,GAAG,MAAM;AACtBpE,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAFD,CA/J2D,CAmK3D;;;AACA,QAAMqE,WAAW,GAAIlC,CAAD,IAAO;AACvB,UAAM6B,MAAM,GAAG7B,CAAC,CAACC,MAAF,CAASC,KAAxB;AACAb,IAAAA,QAAQ,CAACwC,MAAD,CAAR;AACH,GAHD;;AAKA,SACI,0CACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAwC,IAAA,KAAK,EAAE;AAAEM,MAAAA,QAAQ,EAAE;AAAZ,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC1E,KAArC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKSE,IAAI,IAAI,CAAT,GACI,0CACI;AAAK,IAAA,KAAK,EAAE;AAAEyE,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AACI,IAAA,SAAS,EAAC,+CADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAFX;AAGI,IAAA,OAAO,EAAEP,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,CADJ,GAWOpE,IAAI,IAAI,CAAT,GACE,0CAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAE4E,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,IAAA,QAAQ,EAAEN,WAAlB;AAA+B,IAAA,SAAS,EAAC,yBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADJ,EAEKO,OAAO,EAFZ,CAFJ,CADJ,CAFJ,EAWI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAED,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAExE,OAAvC;AAAgD,IAAA,QAAQ,EAAEsD,aAA1D;AAAyE,IAAA,WAAW,EAAC,gBAArF;AAAsG,IAAA,SAAS,EAAC,cAAhH;AAA+H,IAAA,QAAQ,MAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAXJ,EAkBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAEkB,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,UAA1B;AAAqC,IAAA,KAAK,EAAEtE,UAA5C;AAAwD,IAAA,QAAQ,EAAEqD,gBAAlE;AAAoF,IAAA,WAAW,EAAC,sCAAhG;AAAuI,IAAA,SAAS,EAAC,cAAjJ;AAAgK,IAAA,QAAQ,MAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAlBJ,EAwBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,2CADd;AAEI,IAAA,KAAK,EAAE;AAAEe,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAFX;AAGI,IAAA,OAAO,EAAEf,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK1D,OAAO,GAAG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAA4D,mBAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuF,qBALnG,CADJ,CADJ,CAxBJ,CADF,GAqCGF,IAAI,IAAI,CAAT,GAEI,0CACI;AAAM,IAAA,KAAK,EAAE;AAAE4E,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcxE,OAAd,CAArC,CADJ,EAC0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1E,EAEI;AAAM,IAAA,KAAK,EAAE;AAAEwE,MAAAA,UAAU,EAAE;AAAd,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAyB1D,MAAzB,CAArC,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAE0D,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAElE,QAAvC;AAAiD,IAAA,QAAQ,EAAE8B,cAA3D;AAA2E,IAAA,WAAW,EAAC,UAAvF;AAAkG,IAAA,SAAS,EAAC,cAA5G;AAA2H,IAAA,QAAQ,MAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAJJ,EAWI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAEoC,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,GAAxB;AAA4B,IAAA,KAAK,EAAEhE,OAAnC;AAA4C,IAAA,QAAQ,EAAEuB,aAAtD;AAAqE,IAAA,SAAS,EAAC,cAA/E;AAA8F,IAAA,WAAW,EAAC,qBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAXJ,EAiBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAEyC,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAU,IAAA,IAAI,EAAC,GAAf;AAAmB,IAAA,IAAI,EAAC,GAAxB;AAA4B,IAAA,KAAK,EAAE9D,GAAnC;AAAwC,IAAA,SAAS,EAAC,cAAlD;AAAiE,IAAA,QAAQ,EAAEyB,SAA3E;AAAsF,IAAA,WAAW,EAAC,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAjBJ,EAwBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAE;AAAEqC,MAAAA,UAAU,EAAE;AAAd,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAE5D,KAA5B;AAAmC,IAAA,QAAQ,EAAEyB,WAA7C;AAA0D,IAAA,SAAS,EAAC,cAApE;AAAmF,IAAA,WAAW,EAAC,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAxBJ,EA+BI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,2CADd;AAEI,IAAA,KAAK,EAAE;AAAEiC,MAAAA,UAAU,EAAE,SAAd;AAAyBC,MAAAA,KAAK,EAAE;AAAhC,KAFX;AAGI,IAAA,OAAO,EAAEjC,cAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKxC,OAAO,GAAG,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAA4D,mBAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAuF,iBALnG,CADJ,CADJ,CA/BJ,CAFJ,GA6CM,EAlGtB,CADJ,CADJ,CADJ,CAzK2D,CAwR3D;;AACA,WAASgC,UAAT,CAAoB4C,MAApB,EAA4B;AACxB,QAAI;AACAxF,MAAAA,KAAK,CAACyF,GAAN,CAAW,8BAA6BD,MAAO,EAA/C,EACK5B,IADL,CACUxB,IAAI,IAAI;AACV;AACAC,QAAAA,OAAO,CAACD,IAAI,CAAC4B,IAAL,CAAU,CAAV,EAAa5B,IAAd,CAAP;AACH,OAJL,EAKK8B,KALL,CAKWC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAY,YAAYI,GAAxB,CALlB;AAMH,KAPD,CAOE,OAAOuB,KAAP,EAAc,CAEf;AACJ,GApS0D,CAsS3D;;;AACA,WAASH,OAAT,GAAmB;AACf,WAAOnD,IAAI,CAACuD,GAAL,CAASC,IAAI,IAChB;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACjB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BiB,IAAI,CAACpF,KAAlC,CADG,CAAP;AAGH;AAGJ,CA9SD;;AAgTA,eAAeH,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport { set } from 'mongoose';\n\n\n\nconst NewExercises = ({ service, refreshContentLog, title}) => {\n\n    const exUrl = `http://localhost:5000/excercise/add`;\n\n    const [page, setPage] = useState(0)\n\n\n    const [spinner, setSpinner] = useState(false);\n\n    //Exercises\n    const [extitle, setExTitle] = useState('');\n    const [exduration, setExDuration] = useState('');\n\n    //questions\n    const [exId, setExId] = useState('');\n    const [question, setQuestion] = useState('');\n    const [options, setOptions] = useState([]);\n    const [ans, setAns] = useState([]);\n    const [score, setScore] = useState('');\n    const [totalQ, setTotalQ] = useState(0);\n\n    //admin creating this exercise\n    const [admin, setAdmin] = useState();\n    const [corpId, setCorpId] = useState();\n    const [jobId, setJobId] = useState('');\n\n    // List of all jobs returned from api\n    const [jobs, setJobs] = useState([]);\n\n\n    //get logged in Admin\n    useEffect(() => {\n        const admin = JSON.parse(sessionStorage.getItem(\"key\"));\n\n        admin.status == 'corporate' ? setCorpId(admin.id) : setAdmin(admin.id);\n        getAllJobs(admin.id);\n    }, []);\n\n\n    // question functions\n    const handleOptions = (e) => {\n\n        setOptions(e.target.value)\n    }\n    const handleAns = (e) => {\n        setAns(e.target.value)\n    }\n\n    const handleQuestion = (e) => {\n        setQuestion(e.target.value);\n    }\n    const handleScore = (e) => {\n        const value = e.target.value;\n\n        setScore(value);\n    }\n\n    const createQuestion = () => {\n\n\n            setSpinner(true);\n\n            const splitOptions = options.split(',');\n\n            const splitAns = ans.split(',');\n\n            const questionData = {\n                excercise_id: exId,\n                question: question,\n                options: splitOptions,\n                correct_ans: splitAns,\n                score: score\n            }\n\n            axios.post(`http://localhost:5000/question/add`, questionData)\n                .then(res => {\n                    console.log(res.data);\n                    setSpinner(false);\n                    setAns('');\n                    setQuestion('')\n                    setOptions('')\n                    setScore('')\n                    setExId(res.data.excercise_id);\n\n                    //get number of questions and display\n                    axios.post(`http://localhost:5000/question/${res.data.excercise_id}`)\n                        .then(res => setTotalQ(res.data.length))\n                        .catch(err => console.log(err))\n\n                })\n                .catch(err => console.log(err));\n\n            console.log(questionData);\n    }\n\n\n\n    //exercise functions\n    const handleExTitle = (e) => {\n        const value = e.target.value;\n\n        setExTitle(value);\n    }\n\n    const handleExDuration = (e) => {\n\n        const value = e.target.value;\n\n        setExDuration(value);\n    }\n\n\n    const createExercise = () => {\n\n        const exData = {\n            title: extitle,\n            duration: exduration,\n            service: service,\n            admin_id: admin ? admin : null,\n            corp_id: corpId ? corpId : null,\n            job_id: jobId\n        }\n\n        // if (extitle == \"\") {\n        //     return\n\n        // }\n        // if (exduration == \"\") {\n        //     return\n\n        // }\n        // if (jobId == \"\") {\n        //     alert('you need to choose a job')\n        //     return;\n\n        // } \n    \n        setSpinner(true);\n\n            axios.post(exUrl, exData)\n                .then(res => {\n                    setExId(res.data._id);\n                    setSpinner(false);\n                    setPage(2)\n                    refreshContentLog();\n                    console.log(res.data)\n                })\n                .catch(err => {\n                    alert('oops ' + err);\n                })\n\n        console.log(exData)\n\n    }\n\n    //page display logic\n    const setExForm = () => {\n        setPage(1)\n    }\n    const setQuesForm = () => {\n        setPage(2)\n    }\n\n    // onChange Job\n    const onChangeJob = (e) => {\n        const job_id = e.target.value;\n        setJobId(job_id);\n    }\n\n    return (\n        <>\n            <Card className=\"col col-lg-6 col-sm-6\" style={{ overflow: 'scroll' }}>\n                <CardContent>\n                    <h6 style={{ textAlign: 'center' }}>{title}</h6>\n                    <hr />\n\n                    {\n                        (page == 0) ?\n                            <>\n                                <div style={{ height: '100px' }}></div>\n                                <button\n                                    className=\"btn font-weight-bold mt-3 py-2 w-100 border-0\"\n                                    style={{ background: '#21A5E7', color: 'white' }}\n                                    onClick={setExForm}\n                                >\n                                    Create Exercise\n                            </button>\n                            </>\n                            : (page == 1) ?\n                                <>\n                                    {/* jobs dropdown */}\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <label style={{ fontWeight: 'bold' }}>Select Job</label>\n                                            <select onChange={onChangeJob} className=\"form-control text-small\">\n                                                <option>Select Job this exercise is for</option>\n                                                {mapJobs()}\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <label style={{ fontWeight: 'bold' }}>Exercise Title</label>\n                                            <input type=\"text\" name=\"title\" value={extitle} onChange={handleExTitle} placeholder=\"Exercise Title\" className=\"form-control\" required />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <label style={{ fontWeight: 'bold' }}>Exercise Duration</label>\n                                            <input type=\"number\" name=\"duration\" value={exduration} onChange={handleExDuration} placeholder=\"Time Allowed for this Exercise Eg 20\" className=\"form-control\" required />\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <button\n                                                className=\"btn font-weight-light mt-3 w-100 border-0\"\n                                                style={{ background: '#21A5E7', color: 'white' }}\n                                                onClick={createExercise}\n                                            >\n                                                {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Create New Exercise\"}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </> :\n                                (page == 2)\n                                    ?\n                                    <>\n                                        <span style={{ fontWeight: 'bold' }}><u>Exercise: {extitle}</u></span><br />\n                                        <span style={{ fontWeight: 'bold' }}><u>Number of questions: {totalQ}</u></span>\n                                        <hr />\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Question</label>\n                                                <input type=\"text\" name=\"title\" value={question} onChange={handleQuestion} placeholder=\"Question\" className=\"form-control\" required />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Options</label>\n                                                <textarea cols=\"5\" rows=\"3\" value={options} onChange={handleOptions} className=\"form-control\" placeholder=\"Eg rice,beans,garri\"></textarea>\n                                            </div>\n                                        </div>\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Corrects Answer / Answers</label>\n                                                <textarea cols=\"5\" rows=\"3\" value={ans} className=\"form-control\" onChange={handleAns} placeholder=\"Eg rice,beans\"></textarea>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Score</label>\n                                                <input type=\"number\" value={score} onChange={handleScore} className=\"form-control\" placeholder=\"Eg 10\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <button\n                                                    className=\"btn font-weight-light mt-3 w-100 border-0\"\n                                                    style={{ background: '#21A5E7', color: 'white' }}\n                                                    onClick={createQuestion}\n                                                >\n                                                    {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Create Question\"}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </>\n                                    : \"\"\n\n                    }\n\n                </CardContent>\n            </Card>\n\n        </>\n    );\n\n    // Get all jobs by corpid\n    function getAllJobs(corpid) {\n        try {\n            axios.get(`http://localhost:5000/jobs/${corpid}`)\n                .then(jobs => {\n                    // console.log(jobs.data[0].jobs);\n                    setJobs(jobs.data[0].jobs);\n                })\n                .catch(err => console.log('Error: ' + err));\n        } catch (error) {\n\n        }\n    }\n\n    // Map through all the jobs\n    function mapJobs() {\n        return jobs.map(item => (\n            <option value={item.job_id}>{item.title}</option>\n        ))\n    }\n\n\n}\n\nexport default NewExercises;"]},"metadata":{},"sourceType":"module"}
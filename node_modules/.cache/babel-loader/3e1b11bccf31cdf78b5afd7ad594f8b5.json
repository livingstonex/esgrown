{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import{Spinner}from'react-bootstrap';import Quiz from'./quiz';import SubmitBtn from'./submitbtn';import StartBtn from'./startbtn';var userAnswer=[];var QuestionsComponent=/*#__PURE__*/function(_Component){_inherits(QuestionsComponent,_Component);//userAnswer = [];\nfunction QuestionsComponent(props){var _this;_classCallCheck(this,QuestionsComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuestionsComponent).call(this,props));_this.setStart=function(){_this.setState({page:2});// this.startTimer()\n};_this.setPage=function(){_this.setState({page:3});};_this.handelUserAns=function(e){//check if user ans is correct ie user ans should be equal to question correct ans. if correct user score is equal to quetion.score else 0. add user score to the posted object\nif(e.target.type=='radio'){var q=e.target.parentNode.parentNode.parentNode.firstChild.value;var a=e.target.value;var score=e.target.getAttribute('data-score');var correctAns=e.target.getAttribute('data-ans');var userScore;if(a===correctAns){userScore=parseInt(score);}else{userScore=0;}if(userAnswer.length>0){var fnd=userAnswer.find(function(x){return x.question==q;});if(!fnd){userAnswer.push({question:q,ans:a,userScore:userScore});}else{userAnswer.splice(userAnswer.findIndex(function(item){return item.question===q;}),1);userAnswer.push({question:q,ans:a,userScore:userScore});}}else{userAnswer.push({question:q,ans:a,userScore:userScore});}}else{}_this.setState({userAns:userAnswer});};_this.submitAns=function(){//attache corp id along with ans\nvar userData=JSON.parse(sessionStorage.getItem('key'));var name=userData.name,email=userData.email;var _this$props=_this.props,exerciseId=_this$props.exerciseId,service=_this$props.service,corpExerciseOwner=_this$props.corpExerciseOwner;var data={user_id:userData.id,corp_id:corpExerciseOwner,excercise_id:exerciseId,// job_id: jobID,\nservice:service,name:name,email:email,answers:_this.state.userAns};//send to db\naxios.post(\"http://localhost:5000/answer/add\",data).then(function(res){return console.log(res);}).catch(function(err){return console.log(err);});_this.setState({page:0});};_this.state={currentCount:_this.props.duration+1,activeStep:0,userAns:[],page:1,spinner:true};return _this;}// timer() {\n//     this.setState({\n//         currentCount: this.state.currentCount - 1\n//     })\n//     if (this.state.currentCount < 1) {\n//         clearInterval(this.intervalId);\n//         this.setState({ page: 3 })\n//     }\n// }\n// startTimer() {\n//     this.setState({ currentCount: this.props.duration * 60 });\n//     setInterval(this.timer.bind(this), 1000);\n// }\n_createClass(QuestionsComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// this.intervalId = setInterval(this.timer.bind(this), 1000);\n//get questions\naxios.post(\"http://localhost:5000/question/\".concat(this.props.exerciseId)).then(function(res){if(res.data.length>0){_this2.setState({question:res.data,spinner:false});}}).catch(function(err){return console.log(err);});if(this.state.spinner==false){this.setState({page:1});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.intervalId);}},{key:\"render\",value:function render(){var _this$state=this.state,question=_this$state.question,spinner=_this$state.spinner;return React.createElement(React.Fragment,null,this.state.page==1?React.createElement(StartBtn,{setStart:this.setStart,duration:this.props.duration}):this.state.page==2?React.createElement(Quiz,{question:question,submitAns:this.submitAns,handelUserAns:this.handelUserAns,duration:this.props.duration,setPage:this.setPage}):this.state.page==3?React.createElement(SubmitBtn,{submitAns:this.submitAns}):this.state.page==0?\"\":\"\");}}]);return QuestionsComponent;}(Component);export default QuestionsComponent;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/ind_dashboard_components/exercises/questionscomponent.js"],"names":["React","Component","axios","Spinner","Quiz","SubmitBtn","StartBtn","userAnswer","QuestionsComponent","props","setStart","setState","page","setPage","handelUserAns","e","target","type","q","parentNode","firstChild","value","a","score","getAttribute","correctAns","userScore","parseInt","length","fnd","find","x","question","push","ans","splice","findIndex","item","userAns","submitAns","userData","JSON","parse","sessionStorage","getItem","name","email","exerciseId","service","corpExerciseOwner","data","user_id","id","corp_id","excercise_id","answers","state","post","then","res","console","log","catch","err","currentCount","duration","activeStep","spinner","clearInterval","intervalId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Spinner } from 'react-bootstrap';\nimport Quiz from './quiz';\nimport SubmitBtn from './submitbtn';\nimport StartBtn from './startbtn';\n\n\n\nlet userAnswer = [];\n\n\nclass QuestionsComponent extends Component {\n    //userAnswer = [];\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            currentCount: this.props.duration + 1,\n            activeStep: 0,\n            userAns: [],\n            page: 1,\n            spinner: true,\n        }\n\n    }\n\n\n    // timer() {\n    //     this.setState({\n    //         currentCount: this.state.currentCount - 1\n    //     })\n    //     if (this.state.currentCount < 1) {\n    //         clearInterval(this.intervalId);\n    //         this.setState({ page: 3 })\n    //     }\n    // }\n\n    // startTimer() {\n    //     this.setState({ currentCount: this.props.duration * 60 });\n    //     setInterval(this.timer.bind(this), 1000);\n    // }\n\n    componentDidMount() {\n        // this.intervalId = setInterval(this.timer.bind(this), 1000);\n\n\n        //get questions\n        axios.post(`http://localhost:5000/question/${this.props.exerciseId}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    this.setState({\n                        question: res.data,\n                        spinner: false\n                    })\n                }\n            })\n            .catch(err => console.log(err));\n\n        if (this.state.spinner == false) {\n            this.setState({ page: 1 })\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n\n    setStart = () => {\n        this.setState({ page: 2 })\n        // this.startTimer()\n    }\n\n    setPage = () => {\n        this.setState({page: 3})\n    }\n\n    handelUserAns = (e) => {\n        //check if user ans is correct ie user ans should be equal to question correct ans. if correct user score is equal to quetion.score else 0. add user score to the posted object\n        if (e.target.type == 'radio') {\n            const q = e.target.parentNode.parentNode.parentNode.firstChild.value;\n            const a = e.target.value;\n            const score = e.target.getAttribute('data-score');\n            const correctAns = e.target.getAttribute('data-ans')\n            let userScore;\n\n            if (a === correctAns) {\n                userScore = parseInt(score)\n            } else {\n                userScore = 0;\n            }\n\n            if (userAnswer.length > 0) {\n                const fnd = userAnswer.find(x => x.question == q);\n                if (!fnd) {\n                    userAnswer.push({\n                        question: q,\n                        ans: a,\n                        userScore\n                    })\n                } else {\n                    userAnswer.splice(userAnswer.findIndex(item => item.question === q), 1)\n                    userAnswer.push(\n                        {\n                            question: q,\n                            ans: a,\n                            userScore\n\n                        }\n                    )\n                }\n            } else {\n                userAnswer.push({\n                    question: q,\n                    ans: a,\n                    userScore\n\n                })\n\n            }\n        } else {\n\n        }\n\n        this.setState({ userAns: userAnswer });\n\n    }\n\n\n\n\n    submitAns = () => {\n        //attache corp id along with ans\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n        const { name, email } = userData;\n\n        const { exerciseId, service, corpExerciseOwner } = this.props;\n\n        const data = {\n            user_id: userData.id,\n            corp_id: corpExerciseOwner,\n            excercise_id: exerciseId,\n            // job_id: jobID,\n            service: service,\n            name: name,\n            email: email,\n            answers: this.state.userAns\n\n        }\n\n        //send to db\n        axios.post(`http://localhost:5000/answer/add`, data)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n\n\n        this.setState({ page: 0 })\n\n    }\n\n\n    render() {\n\n        const { question, spinner } = this.state\n\n\n        return (\n            <>\n                {\n                    (this.state.page == 1) ? <StartBtn setStart={this.setStart} duration={this.props.duration} /> : (this.state.page == 2) ? <Quiz question={question} submitAns={this.submitAns} handelUserAns={this.handelUserAns} duration={this.props.duration} setPage={this.setPage} /> : (this.state.page == 3) ? <SubmitBtn submitAns={this.submitAns} /> : (this.state.page == 0) ? \"\" : \"\"\n                }\n            </>\n        );\n\n    }\n\n}\nexport default QuestionsComponent;"]},"metadata":{},"sourceType":"module"}
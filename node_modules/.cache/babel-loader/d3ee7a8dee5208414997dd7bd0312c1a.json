{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/AuthContext.js\";\nimport React, { Component } from 'react'; //First we will make a context\n\nexport const AuthContext = React.createContext(); //Then Create a provider Component\n\nexport class AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLogged: false\n    };\n  }\n\n  render() {\n    // localStorage.setItem(\"key\", JSON.stringify(this.GlobalUser)); \n    // console.log(JSON.parse(localStorage.getItem(\"key\")) );  \n    const logedinData = JSON.parse(sessionStorage.getItem(\"key\"));\n    const corp_data = JSON.parse(sessionStorage.getItem(\"corp_key\"));\n    return React.createElement(AuthContext.Provider, {\n      value: {\n        state: this.state,\n        setUserAuthData: isLogged => {\n          this.setState({\n            isLogged: isLogged\n          });\n        },\n        data: logedinData //c_data: corp_data\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/AuthContext.js"],"names":["React","Component","AuthContext","createContext","AuthProvider","state","isLogged","render","logedinData","JSON","parse","sessionStorage","getItem","corp_data","setUserAuthData","setState","data","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,EAApB,C,CAEP;;AACA,OAAO,MAAMC,YAAN,SAA2BH,SAA3B,CAAoC;AAAA;AAAA;AAAA,SACvCI,KADuC,GAC/B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD+B;AAAA;;AAKvCC,EAAAA,MAAM,GAAE;AAEJ;AACA;AACA,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAApB;AACA,UAAMC,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAlB;AACA,WACQ,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AACzBP,QAAAA,KAAK,EAAE,KAAKA,KADa;AAEzBS,QAAAA,eAAe,EAAGR,QAAD,IAAc;AAAC,eAAKS,QAAL,CAAc;AAC1CT,YAAAA,QAAQ,EAAEA;AADgC,WAAd;AAGnC,SAL4B;AAM7BU,QAAAA,IAAI,EAAER,WANuB,CAO1B;;AAP0B,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASK,KAAKS,KAAL,CAAWC,QAThB,CADR;AAaH;;AAxBsC","sourcesContent":["import React, {Component} from 'react';\n\n//First we will make a context\nexport const AuthContext = React.createContext();\n\n//Then Create a provider Component\nexport class AuthProvider extends Component{\n    state = {\n        isLogged: false,\n    }\n    \n    render(){  \n\n        // localStorage.setItem(\"key\", JSON.stringify(this.GlobalUser)); \n        // console.log(JSON.parse(localStorage.getItem(\"key\")) );  \n        const logedinData = JSON.parse(sessionStorage.getItem(\"key\"));   \n        const corp_data = JSON.parse(sessionStorage.getItem(\"corp_key\"));                      \n        return(\n                <AuthContext.Provider value={{\n                    state: this.state,\n                    setUserAuthData: (isLogged) => {this.setState({\n                        isLogged: isLogged,\n                    })\n                },\n                data: logedinData,\n                   //c_data: corp_data\n                }}> \n                    {this.props.children}\n                </AuthContext.Provider>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
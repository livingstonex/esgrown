{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/services-components/service-cards/rmservice.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport GenServiceCard from './gen_service_card';\n\nconst RMService = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        jobs = _useState8[0],\n        setJobs = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        page = _useState10[0],\n        setPage = _useState10[1]; //get data from api\n\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n    setUser(user);\n    console.log(user);\n\n    if (user.sub_status_rm === 'active') {\n      setJobs(user.jobs);\n    } // axios.get(`http://localhost:5000/servicecontentrm/`)\n    //     .then(res => {\n    //         if (user.status === \"individual\" && user.org_type === \"school\" && user.sub_status === \"active\") {\n    //             const teacherData = res.data.filter(d => {\n    //                 return d.user_class === 'teacher'\n    //             })\n    //             setData(teacherData);\n    //         } else if (user.status === 'individual' && user.org_type === \"company\" && user.sub_status === \"active\") {\n    //             const staffData = res.data.filter(d => {\n    //                 return d.user_class === 'company-staff'\n    //             })\n    //             setData(staffData);\n    //         } else if (user.status === 'individual' && user.org_type === null) {\n    //             const indiv = res.data.filter(d => {\n    //                 return d.user_class === 'individual'\n    //             })\n    //             setData(indiv);\n    //         }\n    //         setSpinner(false);\n    //     })\n    //     .catch(err => console.log(err))\n\n  }, []);\n  return (// <div className=\"container\">\n    //     <div className=\"row\">\n    //         <div className=\"col col-lg-12 col-sm-6\" style={{ width: '100%', height: 500, boxShadow: '0px 0px 5px 5px rgba(0,0,0,0.15)', background: '#ffffff', padding: '20px', borderRadius: '10px', overflow: 'scroll' }}>\n    //             <div className=\"\">\n    //                 <div>\n    //                     {spinner ? <Spinner animation=\"grow\" /> : data.map((data) => {\n    //                         return (\n    //                             <div className=\"container\">\n    //                                 <div className=\"row\">\n    //                                     <div className=\"col-md-8 offset-md-2\" >\n    //                                         <div className=\"card\" style={{ fontFamily: 'Roboto,sans-serif', boxShadow: '0px 0px 5px 5px rgba(0,0,0,0.15)', marginBottom: '10px' }}>\n    //                                             <div className=\"card-content\" style={{ padding: '10px' }}>\n    //                                                 {/* <img className=\"img-responsive\" src=\"http://lorempixel.com/555/300/sports\" alt=\"placeholder\" style={{ width: '100%' }} /> */}\n    //                                                 {\n    //                                                     data.media ? data.media.split('/')[0] === \"data:image\" ? <img src={data.media} style={{ width: '100%' }} alt=\"\" /> : <video src={data.media} controls style={{ width: '100%' }}></video> : ''\n    //                                                 }\n    //                                                 <h6>{data.title}</h6>\n    //                                                 <p>{data.body}</p>\n    //                                             </div>\n    //                                         </div>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         )\n    //                     })}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n    // </div>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, // spinner ? <div className=\"d-flex justify-content-center\"><i className=\"fa fa-spinner fa-spin\"></i></div> : data.map((data) => {\n    //         return (\n    //             <GenServiceCard data={data}/>\n    //         )})\n    page === 0 ? jobs.length === 0 ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"you have not applied for any jobs yet\") : jobs.map(item => {\n      return React.createElement(Card, {\n        className: \"mt-5\",\n        style: {\n          width: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, item.job_title), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn btn-info bt-sm\",\n        onClick: getContent(item.job_id),\n        disabled: loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"View Content \", loading ? React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : \"\")))), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    }) : page === 1 ? React.createElement(GenServiceCard, {\n      data: data,\n      goBack: goBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : 'default empty')\n  );\n\n  function getContent(id) {\n    // get contents from rm service content endpoint, based on job id\n    try {\n      setLoading(true);\n      axios.get(`http://localhost:5000/corpservicecontent/${id}`).then(res => {\n        setLoading(false);\n        setData(res.data);\n        setPage(1);\n      }).catch(err => {\n        console.log(err);\n        setLoading(false);\n      });\n    } catch (error) {}\n  }\n\n  function goBack() {\n    setPage(0);\n  }\n};\n\nexport default RMService;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/services-components/service-cards/rmservice.js"],"names":["React","useEffect","useState","Spinner","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","axios","GenServiceCard","RMService","loading","setLoading","data","setData","user","setUser","jobs","setJobs","page","setPage","JSON","parse","sessionStorage","getItem","console","log","sub_status_rm","length","map","item","width","job_title","getContent","job_id","goBack","id","get","then","res","catch","err","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport GenServiceCard from './gen_service_card';\n\n\n\n\nconst RMService = () => {\n\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [user, setUser] = useState('');\n    const [jobs, setJobs] = useState([]);\n    const [page, setPage] = useState(0);\n\n\n\n    //get data from api\n    useEffect(() => {\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        setUser(user);\n        console.log(user)\n\n        if (user.sub_status_rm === 'active') {\n            setJobs(user.jobs);\n        }\n            \n\n        // axios.get(`http://localhost:5000/servicecontentrm/`)\n        //     .then(res => {\n        //         if (user.status === \"individual\" && user.org_type === \"school\" && user.sub_status === \"active\") {\n\n        //             const teacherData = res.data.filter(d => {\n        //                 return d.user_class === 'teacher'\n        //             })\n        //             setData(teacherData);\n\n        //         } else if (user.status === 'individual' && user.org_type === \"company\" && user.sub_status === \"active\") {\n\n        //             const staffData = res.data.filter(d => {\n        //                 return d.user_class === 'company-staff'\n        //             })\n        //             setData(staffData);\n\n        //         } else if (user.status === 'individual' && user.org_type === null) {\n\n        //             const indiv = res.data.filter(d => {\n        //                 return d.user_class === 'individual'\n        //             })\n        //             setData(indiv);\n        //         }\n        //         setSpinner(false);\n        //     })\n        //     .catch(err => console.log(err))\n    }, []);\n\n\n\n    return (\n        // <div className=\"container\">\n        //     <div className=\"row\">\n        //         <div className=\"col col-lg-12 col-sm-6\" style={{ width: '100%', height: 500, boxShadow: '0px 0px 5px 5px rgba(0,0,0,0.15)', background: '#ffffff', padding: '20px', borderRadius: '10px', overflow: 'scroll' }}>\n        //             <div className=\"\">\n        //                 <div>\n        //                     {spinner ? <Spinner animation=\"grow\" /> : data.map((data) => {\n\n        //                         return (\n        //                             <div className=\"container\">\n        //                                 <div className=\"row\">\n        //                                     <div className=\"col-md-8 offset-md-2\" >\n        //                                         <div className=\"card\" style={{ fontFamily: 'Roboto,sans-serif', boxShadow: '0px 0px 5px 5px rgba(0,0,0,0.15)', marginBottom: '10px' }}>\n        //                                             <div className=\"card-content\" style={{ padding: '10px' }}>\n        //                                                 {/* <img className=\"img-responsive\" src=\"http://lorempixel.com/555/300/sports\" alt=\"placeholder\" style={{ width: '100%' }} /> */}\n        //                                                 {\n        //                                                     data.media ? data.media.split('/')[0] === \"data:image\" ? <img src={data.media} style={{ width: '100%' }} alt=\"\" /> : <video src={data.media} controls style={{ width: '100%' }}></video> : ''\n        //                                                 }\n        //                                                 <h6>{data.title}</h6>\n        //                                                 <p>{data.body}</p>\n        //                                             </div>\n        //                                         </div>\n\n        //                                     </div>\n        //                                 </div>\n        //                             </div>\n        //                         )\n        //                     })}\n        //                 </div>\n        //             </div>\n        //         </div>\n        //     </div>\n        // </div>\n\n        <div>\n            {\n                // spinner ? <div className=\"d-flex justify-content-center\"><i className=\"fa fa-spinner fa-spin\"></i></div> : data.map((data) => {\n                //         return (\n                //             <GenServiceCard data={data}/>\n                //         )})\n                (page === 0) ? \n                (jobs.length === 0) ? <p>you have not applied for any jobs yet</p>\n                    :\n                    jobs.map(item => {              \n                        return (\n                            <Card className=\"mt-5\" style={{width:'50%'}}>\n                                <CardActionArea>\n                                    <CardContent >\n                                        <Typography gutterBottom variant=\"\" component=\"p\">\n                                            {item.job_title}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                            <div className=\"btn btn-info bt-sm\" onClick={getContent(item.job_id)} disabled={loading}>View Content {loading ? <i className=\"fa fa-spinner fa-spin\"></i>:\"\" }</div>\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                                <CardActions>\n                                </CardActions>\n                            </Card>\n                        );\n                    }) : \n                    (page === 1) ? \n                        <GenServiceCard data={data} goBack={goBack()}/>\n                        :'default empty'\n                \n            }\n        </div>\n\n    );\n\n    function getContent(id) {\n        // get contents from rm service content endpoint, based on job id\n        try {\n            setLoading(true);\n            axios.get(`http://localhost:5000/corpservicecontent/${id}`)\n                .then(res => { \n                    setLoading(false);\n                    setData(res.data);\n                    setPage(1)\n                })\n                .catch(err => {\n                    console.log(err);\n                    setLoading(false);\n                })\n        } catch (error) {\n            \n        }\n    }\n\n    function goBack() {\n        setPage(0);\n    }\n}\n\nexport default RMService;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/efa/efa.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EFAlog from '../components/content_log';\nimport EFAnewContent from '../components/new_content';\n\nconst EAS = () => {\n  const title = \"EFA Service Content Log\";\n  const contentTitle = \"Create New EFA Content\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        efalog = _useState2[0],\n        setEfalog = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinner = _useState4[0],\n        setSpinner = _useState4[1];\n\n  const newContentUrl = `http://localhost:5000/servicecontentefa/add`;\n  useEffect(() => {\n    axios.get(`http://localhost:5000/servicecontentefa/`).then(res => {\n      if (res.data.length > 0) {\n        setEfalog(res.data);\n        setSpinner(false);\n      }\n    }).catch(err => alert('oops ' + err));\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(EFAlog, {\n    title: title,\n    data: efalog,\n    spinner: spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(EFAnewContent, {\n    url: newContentUrl,\n    title: contentTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))));\n};\n\nexport default EAS;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/efa/efa.js"],"names":["React","useEffect","useState","axios","EFAlog","EFAnewContent","EAS","title","contentTitle","efalog","setEfalog","spinner","setSpinner","newContentUrl","get","then","res","data","length","catch","err","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAGd,QAAMC,KAAK,GAAG,yBAAd;AACA,QAAMC,YAAY,GAAG,wBAArB;;AAJc,oBAKcN,QAAQ,CAAC,EAAD,CALtB;AAAA;AAAA,QAKPO,MALO;AAAA,QAKCC,SALD;;AAAA,qBAMgBR,QAAQ,CAAC,IAAD,CANxB;AAAA;AAAA,QAMPS,OANO;AAAA,QAMEC,UANF;;AAQd,QAAMC,aAAa,GAAI,6CAAvB;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,KAAK,CAACW,GAAN,CAAW,0CAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAkB,CAAtB,EAAyB;AACrBR,QAAAA,SAAS,CAACM,GAAG,CAACC,IAAL,CAAT;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEH;AACJ,KAPL,EAOOO,KAPP,CAOaC,GAAG,IAAIC,KAAK,CAAC,UAAUD,GAAX,CAPzB;AAQH,GAVQ,EAUN,EAVM,CAAT;AAYA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEb,KAAf;AAAsB,IAAA,IAAI,EAAEE,MAA5B;AAAoC,IAAA,OAAO,EAAEE,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEE,aAApB;AAAmC,IAAA,KAAK,EAAEL,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ;AAUH,CAlCD;;AAmCA,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EFAlog from '../components/content_log';\nimport EFAnewContent from '../components/new_content';\n\n\n\nconst EAS = () => {\n\n\n    const title = \"EFA Service Content Log\";\n    const contentTitle = \"Create New EFA Content\"\n    const [efalog, setEfalog] = useState([]);\n    const [spinner, setSpinner] = useState(true);\n\n    const newContentUrl = `http://localhost:5000/servicecontentefa/add`;\n\n\n\n    useEffect(() => {\n\n        axios.get(`http://localhost:5000/servicecontentefa/`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    setEfalog(res.data);\n                    setSpinner(false)\n\n                }\n            }).catch(err => alert('oops ' + err))\n    }, [])\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <EFAlog title={title} data={efalog} spinner={spinner} />\n                    <EFAnewContent url={newContentUrl} title={contentTitle} />\n                </div>\n            </div>\n        </>\n    );\n}\nexport default EAS;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/questionscomponent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Spinner } from 'react-bootstrap';\nimport Quiz from './quiz';\nimport SubmitBtn from './submitbtn';\nimport StartBtn from './startbtn';\nlet userAnswer = [];\n\nclass QuestionsComponent extends Component {\n  //userAnswer = [];\n  constructor(props) {\n    super(props);\n\n    this.setStart = () => {\n      this.setState({\n        page: 2\n      });\n      this.startTimer();\n    };\n\n    this.handelUserAns = e => {\n      if (e.target.type == 'radio') {\n        const q = e.target.parentNode.parentNode.parentNode.firstChild.value;\n        const a = e.target.value;\n\n        if (userAnswer.length > 0) {\n          const fnd = userAnswer.find(x => x.question == q);\n\n          if (!fnd) {\n            userAnswer.push({\n              question: q,\n              ans: a\n            });\n          } else {\n            userAnswer.splice(userAnswer.findIndex(item => item.question === q), 1);\n            userAnswer.push({\n              question: q,\n              ans: a\n            });\n          }\n        } else {\n          userAnswer.push({\n            question: q,\n            ans: a\n          });\n        }\n      } else {}\n\n      this.setState({\n        userAns: userAnswer\n      });\n    };\n\n    this.submitAns = () => {\n      const userData = JSON.parse(sessionStorage.getItem('key'));\n      const name = userData.name,\n            email = userData.email;\n      const _this$props = this.props,\n            exerciseId = _this$props.exerciseId,\n            service = _this$props.service;\n      const data = {\n        user_id: userData.id,\n        excercise_id: exerciseId,\n        service: service,\n        name: name,\n        email: email,\n        answers: this.state.userAns\n      }; //send to db\n\n      axios.post(`http://localhost:5000/answer/add`, data).then(res => console.log(res)).catch(err => console.log(err));\n      this.setState({\n        page: 0\n      });\n    };\n\n    this.state = {\n      currentCount: '',\n      activeStep: 0,\n      userAns: [],\n      page: 1,\n      spinner: true\n    };\n  }\n\n  timer() {\n    this.setState({\n      currentCount: this.state.currentCount - 1\n    });\n\n    if (this.state.currentCount < 1) {\n      clearInterval(this.intervalId);\n      this.setState({\n        page: 3\n      });\n    }\n  }\n\n  startTimer() {\n    this.setState({\n      currentCount: this.props.duration\n    });\n    setInterval(this.timer.bind(this), 1000);\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(this.timer.bind(this), 1000); //get questions\n\n    axios.post(`http://localhost:5000/question/${this.props.exerciseId}`).then(res => {\n      if (res.data.length > 0) {\n        this.setState({\n          question: res.data,\n          spinner: false\n        });\n      }\n    }).catch(err => console.log(err));\n\n    if (this.state.spinner == false) {\n      this.setState({\n        page: 1\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const _this$state = this.state,\n          question = _this$state.question,\n          spinner = _this$state.spinner;\n    return React.createElement(React.Fragment, null, this.state.page == 1 ? React.createElement(StartBtn, {\n      setStart: this.setStart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : this.state.page == 2 ? React.createElement(Quiz, {\n      question: question,\n      submitAns: this.submitAns,\n      handelUserAns: this.handelUserAns,\n      countDown: this.state.currentCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : this.state.page == 3 ? React.createElement(SubmitBtn, {\n      submitAns: this.submitAns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }) : this.state.page == 0 ? \"\" : \"\");\n  }\n\n}\n\nexport default QuestionsComponent;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/questionscomponent.js"],"names":["React","Component","axios","Spinner","Quiz","SubmitBtn","StartBtn","userAnswer","QuestionsComponent","constructor","props","setStart","setState","page","startTimer","handelUserAns","e","target","type","q","parentNode","firstChild","value","a","length","fnd","find","x","question","push","ans","splice","findIndex","item","userAns","submitAns","userData","JSON","parse","sessionStorage","getItem","name","email","exerciseId","service","data","user_id","id","excercise_id","answers","state","post","then","res","console","log","catch","err","currentCount","activeStep","spinner","timer","clearInterval","intervalId","duration","setInterval","bind","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Spinner } from 'react-bootstrap';\nimport Quiz from './quiz';\nimport SubmitBtn from './submitbtn';\nimport StartBtn from './startbtn';\n\n\n\nlet userAnswer = [];\n\n\nclass QuestionsComponent extends Component {\n    //userAnswer = [];\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            currentCount: '',\n            activeStep: 0,\n            userAns: [],\n            page: 1,\n            spinner: true\n\n        }\n\n    }\n\n\n    timer() {\n        this.setState({\n            currentCount: this.state.currentCount - 1\n        })\n        if (this.state.currentCount < 1) {\n            clearInterval(this.intervalId);\n            this.setState({ page: 3 })\n        }\n    }\n\n    startTimer() {\n        this.setState({ currentCount: this.props.duration });\n        setInterval(this.timer.bind(this), 1000);\n    }\n\n    componentDidMount() {\n        this.intervalId = setInterval(this.timer.bind(this), 1000);\n\n        //get questions\n        axios.post(`http://localhost:5000/question/${this.props.exerciseId}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    this.setState({\n                        question: res.data,\n                        spinner: false\n                    })\n                }\n            })\n            .catch(err => console.log(err));\n\n        if (this.state.spinner == false) {\n            this.setState({ page: 1 })\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n\n    setStart = () => {\n        this.setState({ page: 2 })\n        this.startTimer()\n\n    }\n\n    handelUserAns = (e) => {\n\n        if (e.target.type == 'radio') {\n            const q = e.target.parentNode.parentNode.parentNode.firstChild.value;\n            const a = e.target.value;\n\n            if (userAnswer.length > 0) {\n                const fnd = userAnswer.find(x => x.question == q);\n                if (!fnd) {\n                    userAnswer.push({\n                        question: q,\n                        ans: a\n                    })\n                } else {\n                    userAnswer.splice(userAnswer.findIndex(item => item.question === q), 1)\n                    userAnswer.push(\n                        {\n                            question: q,\n                            ans: a\n                        }\n                    )\n                }\n            } else {\n                userAnswer.push({\n                    question: q,\n                    ans: a\n                })\n\n            }\n        } else {\n\n        }\n\n        this.setState({ userAns: userAnswer });\n\n    }\n\n\n\n\n    submitAns = () => {\n\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n        const { name, email } = userData;\n\n        const { exerciseId, service } = this.props;\n\n        const data = {\n            user_id: userData.id,\n            excercise_id: exerciseId,\n            service: service,\n            name: name,\n            email: email,\n            answers: this.state.userAns\n\n        }\n\n        //send to db\n        axios.post(`http://localhost:5000/answer/add`, data)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n\n\n        this.setState({ page: 0 })\n\n    }\n\n\n    render() {\n\n        const { question, spinner } = this.state\n\n\n\n\n        return (\n            <>\n                {\n                    (this.state.page == 1) ? <StartBtn setStart={this.setStart} /> : (this.state.page == 2) ? <Quiz question={question} submitAns={this.submitAns} handelUserAns={this.handelUserAns} countDown={this.state.currentCount} /> : (this.state.page == 3) ? <SubmitBtn submitAns={this.submitAns} /> : (this.state.page == 0) ? \"\" : \"\"\n                }\n\n\n\n            </>\n        );\n\n    }\n\n}\nexport default QuestionsComponent;"]},"metadata":{},"sourceType":"module"}
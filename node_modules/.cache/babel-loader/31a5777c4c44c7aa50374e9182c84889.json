{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/dashboards/tutor/components/content_log.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, CardHeader, CardActionArea, CardMedia, Typography, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Spinner } from 'react-bootstrap';\n\nconst ContentLog = props => {\n  const subject = props.subject;\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 345\n    }\n  });\n  const classes = useStyles();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        spinner = _useState2[0],\n        setSpinner = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        contentLog = _useState4[0],\n        setContentLog = _useState4[1];\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n    const level = user.tutor_level.toLowerCase();\n    axios.get(`http://localhost:5000/${level}/${subject}/${user.id}`).then(res => {\n      if (res.data) {\n        setSpinner(false);\n        setContentLog(res.data);\n      }\n    }).catch(err => console.log(err));\n  }, [subject]);\n  return React.createElement(React.Fragment, null, spinner ? React.createElement(Spinner, {\n    animation: \"grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, contentLog.map(data => {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      className: \"col col-lg-4 col-sm-6 mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, data.media ? data.media.split('/')[0] === \"data:image\" ? React.createElement(\"img\", {\n      src: data.media,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(\"video\", {\n      src: data.media,\n      controls: true,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : '', React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, data.title), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, data.content.substring(0, 200))))));\n  }))));\n};\n\nexport default ContentLog;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/dashboards/tutor/components/content_log.js"],"names":["React","useEffect","useState","axios","Card","CardContent","CardHeader","CardActionArea","CardMedia","Typography","CardActions","makeStyles","Spinner","ContentLog","props","subject","useStyles","root","maxWidth","classes","spinner","setSpinner","contentLog","setContentLog","user","JSON","parse","sessionStorage","getItem","level","tutor_level","toLowerCase","get","id","then","res","data","catch","err","console","log","map","media","split","width","title","content","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, CardHeader, CardActionArea, CardMedia, Typography, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Spinner } from 'react-bootstrap';\n\n\n\nconst ContentLog = (props) => {\n\n    const { subject } = props;\n\n\n\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: 345,\n        },\n    });\n\n    const classes = useStyles();\n\n    const [spinner, setSpinner] = useState(true);\n    const [contentLog, setContentLog] = useState([])\n\n\n\n    useEffect(() => {\n\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        const level = user.tutor_level.toLowerCase();\n\n\n        axios.get(`http://localhost:5000/${level}/${subject}/${user.id}`)\n            .then(res => {\n                if (res.data) {\n                    setSpinner(false)\n                    setContentLog(res.data);\n                }\n            })\n            .catch(err => console.log(err));\n    }, [subject]);\n\n    return (\n        <>\n            {\n                spinner ? <Spinner animation=\"grow\" /> :\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            {\n                                contentLog.map(data => {\n                                    return (\n                                        <>\n\n                                            <Card className=\"col col-lg-4 col-sm-6 mr-3\">\n                                                <br/>\n                                                <CardActionArea>\n                                                    {\n                                                        data.media ? data.media.split('/')[0] === \"data:image\" ? <img src={data.media} style={{ width: '100%' }} /> : <video src={data.media} controls style={{ width: '100%' }}></video> : ''\n                                                    }\n                                                    <CardContent>\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                                            {data.title}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                            {data.content.substring(0,200)}\n                                                        </Typography>\n                                                    </CardContent>\n                                                </CardActionArea>\n                                            </Card>\n\n                                        </>\n\n                                    );\n                                })\n                            }\n                        </div>\n                    </div>\n            }\n        </>\n    );\n}\nexport default ContentLog;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/new_exercise.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport { set } from 'mongoose';\n\nconst NewExercises = props => {\n  const exUrl = `http://localhost:5000/excercise/add`;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        page = _useState2[0],\n        setPage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinner = _useState4[0],\n        setSpinner = _useState4[1]; //Exercises\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        extitle = _useState6[0],\n        setExTitle = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        exduration = _useState8[0],\n        setExDuration = _useState8[1]; //questions\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        exId = _useState10[0],\n        setExId = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        question = _useState12[0],\n        setQuestion = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        options = _useState14[0],\n        setOptions = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        ans = _useState16[0],\n        setAns = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        score = _useState18[0],\n        setScore = _useState18[1];\n\n  const _useState19 = useState(0),\n        _useState20 = _slicedToArray(_useState19, 2),\n        totalQ = _useState20[0],\n        setTotalQ = _useState20[1]; //admin createing this exercise\n\n\n  const _useState21 = useState(),\n        _useState22 = _slicedToArray(_useState21, 2),\n        admin = _useState22[0],\n        setAdmin = _useState22[1]; //get logged in Admin\n\n\n  useEffect(() => {\n    const admin = JSON.parse(sessionStorage.getItem(\"key\"));\n    setAdmin(admin.id);\n  }, []); // question functions\n\n  const handleOptions = e => {\n    setOptions(e.target.value);\n  };\n\n  const handleAns = e => {\n    setAns(e.target.value);\n  };\n\n  const handleQuestion = e => {\n    setQuestion(e.target.value);\n  };\n\n  const handleScore = e => {\n    const value = e.target.value;\n    setScore(value);\n  };\n\n  const createQuestion = () => {\n    if (ans !== \"\" && options !== \"\" && score !== \"\" && question !== \"\") {\n      setSpinner(true);\n      const splitOptions = options.split(',');\n      const splitAns = ans.split(',');\n      const questionData = {\n        excercise_id: exId,\n        question: question,\n        options: splitOptions,\n        correct_ans: splitAns,\n        score: score\n      };\n      axios.post(`http://localhost:5000/question/add`, questionData).then(res => {\n        console.log(res.data);\n        setSpinner(false);\n        setAns('');\n        setQuestion('');\n        setOptions('');\n        setScore('');\n        setExId(res.data.excercise_id); //get number of questions and display\n\n        axios.post(`http://localhost:5000/question/${res.data.excercise_id}`).then(res => setTotalQ(res.data.length)).catch(err => console.log(err));\n      }).catch(err => console.log(err));\n      console.log(questionData);\n    }\n  }; //exercise functions\n\n\n  const handleExTitle = e => {\n    const value = e.target.value;\n    setExTitle(value);\n  };\n\n  const handleExDuration = e => {\n    const value = e.target.value;\n    setExDuration(value);\n  };\n\n  const createExercise = () => {\n    const exData = {\n      title: extitle,\n      duration: exduration,\n      service: props.service,\n      admin_id: admin\n    };\n\n    if (extitle == \"\") {\n      return;\n    } else if (exduration == \"\") {\n      return;\n    } else {\n      setSpinner(true);\n      axios.post(exUrl, exData).then(res => {\n        setExId(res.data._id);\n        setSpinner(false);\n        setPage(2);\n        props.refreshContentLog();\n        console.log(res.data);\n      }).catch(err => {\n        alert('oops ' + err);\n      });\n    }\n\n    console.log(exData);\n  }; //page display logic\n\n\n  const setExForm = () => {\n    setPage(1);\n  };\n\n  const setQuesForm = () => {\n    setPage(2);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    className: \"col col-lg-6 col-sm-6\",\n    style: {\n      overflow: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, props.title), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), page == 0 ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    style: {\n      height: '100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn font-weight-bold mt-3 py-2 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: setExForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Create Exercise\")) : page == 1 ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Exercise Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: extitle,\n    onChange: handleExTitle,\n    placeholder: \"Exercise Title\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Exercise Duration\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    value: exduration,\n    onChange: handleExDuration,\n    placeholder: \"Time Allowed for this Exercise Eg 20\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn font-weight-light mt-3 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: createExercise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }) : \"Create New Exercise\")))) : page == 2 ? React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Exercise: \", extitle)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"u\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Number of questions: \", totalQ)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: question,\n    onChange: handleQuestion,\n    placeholder: \"Question\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Options\"), React.createElement(\"textarea\", {\n    cols: \"5\",\n    rows: \"3\",\n    value: options,\n    onChange: handleOptions,\n    className: \"form-control\",\n    placeholder: \"Eg rice,beans,garri\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Corrects Answer / Answers\"), React.createElement(\"textarea\", {\n    cols: \"5\",\n    rows: \"3\",\n    value: ans,\n    className: \"form-control\",\n    onChange: handleAns,\n    placeholder: \"Eg rice,beans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Score\"), React.createElement(\"input\", {\n    type: \"number\",\n    value: score,\n    onChange: handleScore,\n    className: \"form-control\",\n    placeholder: \"Eg 10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn font-weight-light mt-3 w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: createQuestion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }) : \"Create Question\")))) : \"\")));\n};\n\nexport default NewExercises;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/components/new_exercise.js"],"names":["React","useState","useEffect","axios","Card","CardContent","Spinner","set","NewExercises","props","exUrl","page","setPage","spinner","setSpinner","extitle","setExTitle","exduration","setExDuration","exId","setExId","question","setQuestion","options","setOptions","ans","setAns","score","setScore","totalQ","setTotalQ","admin","setAdmin","JSON","parse","sessionStorage","getItem","id","handleOptions","e","target","value","handleAns","handleQuestion","handleScore","createQuestion","splitOptions","split","splitAns","questionData","excercise_id","correct_ans","post","then","res","console","log","data","length","catch","err","handleExTitle","handleExDuration","createExercise","exData","title","duration","service","admin_id","_id","refreshContentLog","alert","setExForm","setQuesForm","overflow","textAlign","height","background","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport { set } from 'mongoose';\n\n\n\nconst NewExercises = (props) => {\n\n    const exUrl = `http://localhost:5000/excercise/add`;\n\n    const [page, setPage] = useState(0)\n\n\n    const [spinner, setSpinner] = useState(false);\n\n    //Exercises\n    const [extitle, setExTitle] = useState('');\n    const [exduration, setExDuration] = useState('');\n\n    //questions\n    const [exId, setExId] = useState('');\n    const [question, setQuestion] = useState('');\n    const [options, setOptions] = useState([]);\n    const [ans, setAns] = useState([]);\n    const [score, setScore] = useState('');\n    const [totalQ, setTotalQ] = useState(0);\n\n    //admin createing this exercise\n    const [admin, setAdmin] = useState();\n\n\n    //get logged in Admin\n    useEffect(() => { \n        const admin = JSON.parse(sessionStorage.getItem(\"key\"));\n        setAdmin(admin.id)\n    }, []);\n\n\n    // question functions\n    const handleOptions = (e) => {\n\n        setOptions(e.target.value)\n    }\n    const handleAns = (e) => {\n        setAns(e.target.value)\n    }\n\n    const handleQuestion = (e) => {\n        setQuestion(e.target.value);\n    }\n    const handleScore = (e) => {\n        const value = e.target.value;\n\n        setScore(value);\n    }\n\n    const createQuestion = () => {\n\n        if (ans !== \"\" && options !== \"\" && score !== \"\" && question !== \"\") {\n            setSpinner(true);\n\n            const splitOptions = options.split(',');\n\n            const splitAns = ans.split(',');\n\n            const questionData = {\n                excercise_id: exId,\n                question: question,\n                options: splitOptions,\n                correct_ans: splitAns,\n                score: score\n            }\n\n            axios.post(`http://localhost:5000/question/add`, questionData)\n                .then(res => {\n                    console.log(res.data);\n                    setSpinner(false);\n                    setAns('');\n                    setQuestion('')\n                    setOptions('')\n                    setScore('')\n                    setExId(res.data.excercise_id);\n\n                    //get number of questions and display\n                    axios.post(`http://localhost:5000/question/${res.data.excercise_id}`)\n                    .then(res => setTotalQ(res.data.length))\n                    .catch(err => console.log(err))\n\n                })\n                .catch(err => console.log(err));\n\n            console.log(questionData);\n\n\n        }\n\n    }\n\n    //exercise functions\n    const handleExTitle = (e) => {\n        const value = e.target.value;\n\n        setExTitle(value);\n    }\n\n    const handleExDuration = (e) => {\n\n        const value = e.target.value;\n\n        setExDuration(value);\n    }\n\n\n    const createExercise = () => {\n\n        const exData = {\n            title: extitle,\n            duration: exduration,\n            service: props.service,\n            admin_id: admin\n        }\n\n        if (extitle == \"\") {\n            return\n\n        } else if (exduration == \"\") {\n            return\n\n        } else {\n\n            setSpinner(true);\n\n            axios.post(exUrl, exData)\n                .then(res => {\n                    setExId(res.data._id);\n                    setSpinner(false);\n                    setPage(2)\n                    props.refreshContentLog();\n                    console.log(res.data)\n                })\n                .catch(err => {\n                    alert('oops ' + err);\n                })\n        }\n\n        console.log(exData)\n\n    }\n\n    //page display logic\n    const setExForm = () => {\n        setPage(1)\n    }\n    const setQuesForm = () => {\n        setPage(2)\n    }\n\n    return (\n        <>\n            <Card className=\"col col-lg-6 col-sm-6\" style={{ overflow: 'scroll' }}>\n                <CardContent>\n                    <h6 style={{ textAlign: 'center' }}>{props.title}</h6>\n                    <hr />\n\n                    {\n                        (page == 0) ?\n                            <>\n                                <div style={{ height: '100px' }}></div>\n                                <button\n                                    className=\"btn font-weight-bold mt-3 py-2 w-100 border-0\"\n                                    style={{ background: '#21A5E7', color: 'white' }}\n                                    onClick={setExForm}\n                                >\n                                    Create Exercise\n                            </button>\n                            </>\n                            : (page == 1) ?\n                                <>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <label style={{ fontWeight: 'bold' }}>Exercise Title</label>\n                                            <input type=\"text\" name=\"title\" value={extitle} onChange={handleExTitle} placeholder=\"Exercise Title\" className=\"form-control\" required />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <label style={{ fontWeight: 'bold' }}>Exercise Duration</label>\n                                            <input type=\"number\" name=\"duration\" value={exduration} onChange={handleExDuration} placeholder=\"Time Allowed for this Exercise Eg 20\" className=\"form-control\" required />\n                                        </div>\n                                    </div>\n                                    <div className=\"row mt-3\">\n                                        <div className=\"col\">\n                                            <button\n                                                className=\"btn font-weight-light mt-3 w-100 border-0\"\n                                                style={{ background: '#21A5E7', color: 'white' }}\n                                                onClick={createExercise}\n                                            >\n                                                {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Create New Exercise\"}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </> :\n                                (page == 2)\n                                    ?\n                                    <>\n                                        <span style={{ fontWeight: 'bold' }}><u>Exercise: {extitle}</u></span><br />\n                                        <span style={{ fontWeight: 'bold' }}><u>Number of questions: {totalQ}</u></span>\n                                        <hr />\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Question</label>\n                                                <input type=\"text\" name=\"title\" value={question} onChange={handleQuestion} placeholder=\"Question\" className=\"form-control\" required />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Options</label>\n                                                <textarea cols=\"5\" rows=\"3\" value={options} onChange={handleOptions} className=\"form-control\" placeholder=\"Eg rice,beans,garri\"></textarea>\n                                            </div>\n                                        </div>\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Corrects Answer / Answers</label>\n                                                <textarea cols=\"5\" rows=\"3\" value={ans} className=\"form-control\" onChange={handleAns} placeholder=\"Eg rice,beans\"></textarea>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <label style={{ fontWeight: 'bold' }}>Score</label>\n                                                <input type=\"number\" value={score} onChange={handleScore} className=\"form-control\" placeholder=\"Eg 10\" />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mt-3\">\n                                            <div className=\"col\">\n                                                <button\n                                                    className=\"btn font-weight-light mt-3 w-100 border-0\"\n                                                    style={{ background: '#21A5E7', color: 'white' }}\n                                                    onClick={createQuestion}\n                                                >\n                                                    {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Create Question\"}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </>\n                                    : \"\"\n\n                    }\n\n                </CardContent>\n            </Card>\n\n        </>\n    );\n}\n\nexport default NewExercises;"]},"metadata":{},"sourceType":"module"}
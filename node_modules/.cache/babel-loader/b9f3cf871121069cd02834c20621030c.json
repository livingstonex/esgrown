{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/lm/lm.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LMlog from '../components/content_log';\nimport LMnewContent from './newcontent';\n\nconst LM = () => {\n  const title = \"LM Service Content Log\";\n  const contentTitle = \"Create New LM Content\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lmlog = _useState2[0],\n        setLmlog = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinner = _useState4[0],\n        setSpinner = _useState4[1];\n\n  const newContentUrl = `http://localhost:5000/servicecontentlm/add`;\n  useEffect(() => {\n    axios.get(`http://localhost:5000/servicecontentlm/`).then(res => {\n      if (res.data.length > 0) {\n        setLmlog(res.data);\n        setSpinner(false);\n      } else {\n        setSpinner(false);\n      }\n    }).catch(err => alert('oops ' + err));\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(LMlog, {\n    title: title,\n    data: lmlog,\n    spinner: spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(LMnewContent, {\n    url: newContentUrl,\n    title: contentTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n};\n\nexport default LM;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/lm/lm.js"],"names":["React","useEffect","useState","axios","LMlog","LMnewContent","LM","title","contentTitle","lmlog","setLmlog","spinner","setSpinner","newContentUrl","get","then","res","data","length","catch","err","alert"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AAIA,MAAMC,EAAE,GAAG,MAAM;AAGb,QAAMC,KAAK,GAAG,wBAAd;AACA,QAAMC,YAAY,GAAG,uBAArB;;AAJa,oBAKaN,QAAQ,CAAC,EAAD,CALrB;AAAA;AAAA,QAKNO,KALM;AAAA,QAKCC,QALD;;AAAA,qBAMiBR,QAAQ,CAAC,IAAD,CANzB;AAAA;AAAA,QAMNS,OANM;AAAA,QAMGC,UANH;;AAQb,QAAMC,aAAa,GAAI,4CAAvB;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AAEZE,IAAAA,KAAK,CAACW,GAAN,CAAW,yCAAX,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAkB,CAAtB,EAAyB;AACrBR,QAAAA,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAR;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAHD,MAGO;AACHA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KARL,EAQOO,KARP,CAQaC,GAAG,IAAIC,KAAK,CAAC,UAAUD,GAAX,CARzB;AASH,GAXQ,EAWN,EAXM,CAAT;AAaA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEb,KAAd;AAAqB,IAAA,IAAI,EAAEE,KAA3B;AAAkC,IAAA,OAAO,EAAEE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEE,aAAnB;AAAkC,IAAA,KAAK,EAAEL,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ;AAUH,CAnCD;;AAoCA,eAAeF,EAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport LMlog from '../components/content_log';\nimport LMnewContent from './newcontent';\n\n\n\nconst LM = () => {\n\n\n    const title = \"LM Service Content Log\";\n    const contentTitle = \"Create New LM Content\"\n    const [lmlog, setLmlog] = useState([]);\n    const [spinner, setSpinner] = useState(true);\n\n    const newContentUrl = `http://localhost:5000/servicecontentlm/add`;\n\n\n\n    useEffect(() => {\n\n        axios.get(`http://localhost:5000/servicecontentlm/`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    setLmlog(res.data);\n                    setSpinner(false)\n                } else {\n                    setSpinner(false)\n                }\n            }).catch(err => alert('oops ' + err))\n    }, [])\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <LMlog title={title} data={lmlog} spinner={spinner} />\n                    <LMnewContent url={newContentUrl} title={contentTitle} />\n                </div>\n            </div>\n        </>\n    );\n}\nexport default LM;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/staff/excercise_rankings.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function ExcerciseRankings({\n  page\n}) {\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n    setUser(user);\n    const id = user.id; //get all jobs\n\n    getJobs(id);\n  }, []); // States\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        jobs = _useState4[0],\n        setJobs = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        spinner = _useState6[0],\n        setSpinner = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        answers = _useState8[0],\n        setAnswers = _useState8[1];\n\n  const onChangeJob = e => {\n    const job_id = e.target.value;\n    getAnswersByJob(user.id, job_id);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-4 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      marginTop: '70px',\n      fontFamily: 'quicksand'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Rankings Page\")), React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control text-small\",\n    onChange: onChangeJob,\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"null\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Select the jobs to view Rankings\"), jobMap())), React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, spinner ? React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : \"\"))); // Get all jobs by company id\n\n  function getJobs(id) {\n    try {\n      axios.get(`http://localhost:5000/jobs/${id}`).then(res => {\n        if (res.data.length !== 0) {\n          setJobs(res.data[0].jobs);\n          console.log(res.data[0].jobs);\n        } else {\n          console.log(\"no data\");\n        }\n      }).catch(err => console.log(err));\n    } catch (error) {\n      console.log(error);\n    }\n  } // Rank Card Function\n\n\n  function rankCard() {\n    return React.createElement(\"div\", {\n      style: {\n        height: '50px',\n        width: '80%',\n        background: 'silver'\n      },\n      className: \"d-flex justify-content-around align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"John Okafor\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" 57% \", React.createElement(\"div\", {\n      className: \"btn btn-info btn-sm ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Induct\")));\n  } // Map jobs for selection\n\n\n  function jobMap() {\n    return jobs.map(item => React.createElement(\"option\", {\n      value: item.job_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, item.title));\n  } // Get all excercises that carry the Job id\n\n\n  function getAnswersByJob(corpid, jobid) {\n    try {\n      setSpinner(true);\n      axios.get(`http://localhost:5000/answer/${corpid}/${jobid}`).then(answers => {\n        setSpinner(false);\n        setAnswers(answers.data);\n      }).catch(err => console.log(err));\n    } catch (error) {}\n  }\n}","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/staff/excercise_rankings.js"],"names":["React","useState","useEffect","axios","ExcerciseRankings","page","user","JSON","parse","sessionStorage","getItem","setUser","id","getJobs","jobs","setJobs","spinner","setSpinner","answers","setAnswers","onChangeJob","e","job_id","target","value","getAnswersByJob","marginTop","fontFamily","width","jobMap","get","then","res","data","length","console","log","catch","err","error","rankCard","height","background","map","item","title","corpid","jobid"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport default function ExcerciseRankings({page}){\n    useEffect(()=>{\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        setUser(user)\n        const id = user.id;\n        //get all jobs\n        getJobs(id);\n    },[]);\n\n    // States\n    const [user, setUser] = useState();\n    const [jobs, setJobs] = useState([]);\n    const [spinner, setSpinner] = useState(false);\n    const [answers, setAnswers] = useState([]);\n\n    const onChangeJob = (e) => {\n        const job_id = e.target.value;\n        getAnswersByJob(user.id, job_id);\n    }\n    return(\n        <React.Fragment >\n            <div className=\"container\">\n                <div className=\"d-flex justify-content-center mt-4 mb-4\">\n                <h2 style={{marginTop:'70px', fontFamily:'quicksand'}}>Rankings Page</h2>\n                </div>\n                \n                <div className=\"d-flex justify-content-center\">\n                    <select className=\"form-control text-small\" onChange={onChangeJob} style={{width:'50%'}}>\n                        <option value=\"null\">Select the jobs to view Rankings</option>\n                        { jobMap() }\n                    </select>\n                </div>\n                <div className=\"d-flex justify-content-center mt-4\">\n                    {/* Render Ranks here */}\n                    { spinner ? <i className=\"fa fa-spinner fa-spin mt-5\"></i> : \"\"}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n    // Get all jobs by company id\n    function getJobs(id){\n        try {\n            axios.get(`http://localhost:5000/jobs/${id}`)\n                .then(res => {\n                    if (res.data.length !== 0) {\n                        setJobs(res.data[0].jobs);\n                        console.log(res.data[0].jobs)\n                    } else {\n                        console.log(\"no data\")\n                    }\n                })\n                .catch(err => console.log(err));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Rank Card Function\n    function rankCard(){\n        return <div style={{height:'50px', width:'80%', background:'silver', }} className=\"d-flex justify-content-around align-items-center\">\n                    <div>John Okafor</div>\n                    <div> 57% <div className=\"btn btn-info btn-sm ml-3\">Induct</div></div>\n               </div>\n    }\n\n    // Map jobs for selection\n    function jobMap(){\n        return jobs.map(item => (\n            <option value={item.job_id}>{item.title}</option>\n            ));\n    }\n\n    // Get all excercises that carry the Job id\n    function getAnswersByJob(corpid, jobid){\n        try {\n            setSpinner(true);\n            axios.get(`http://localhost:5000/answer/${corpid}/${jobid}`)\n                    .then(answers => { \n                        setSpinner(false);\n                        setAnswers(answers.data);\n                    })\n                    .catch(err => console.log(err));\n        } catch (error) {\n            \n        }\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}
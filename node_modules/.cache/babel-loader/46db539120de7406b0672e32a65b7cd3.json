{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';//First we will make a context\nexport var AuthContext=React.createContext();//Then Create a provider Component\nexport var AuthProvider=/*#__PURE__*/function(_Component){_inherits(AuthProvider,_Component);function AuthProvider(){var _getPrototypeOf2;var _this;_classCallCheck(this,AuthProvider);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(AuthProvider)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={isLogged:false};return _this;}_createClass(AuthProvider,[{key:\"render\",value:function render(){var _this2=this;// localStorage.setItem(\"key\", JSON.stringify(this.GlobalUser)); \n// console.log(JSON.parse(localStorage.getItem(\"key\")) );  \nvar logedinData=JSON.parse(sessionStorage.getItem(\"key\"));var corp_data=JSON.parse(sessionStorage.getItem(\"corp_key\"));return React.createElement(AuthContext.Provider,{value:{state:this.state,setUserAuthData:function setUserAuthData(isLogged){_this2.setState({isLogged:isLogged});},data:logedinData//c_data: corp_data\n}},this.props.children);}}]);return AuthProvider;}(Component);","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/AuthContext.js"],"names":["React","Component","AuthContext","createContext","AuthProvider","state","isLogged","logedinData","JSON","parse","sessionStorage","getItem","corp_data","setUserAuthData","setState","data","props","children"],"mappings":"+iBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAGF,KAAK,CAACG,aAAN,EAApB,CAEP;AACA,UAAaC,CAAAA,YAAb,uZACIC,KADJ,CACY,CACJC,QAAQ,CAAE,KADN,CADZ,+EAKY,iBAEJ;AACA;AACA,GAAMC,CAAAA,WAAW,CAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAApB,CACA,GAAMC,CAAAA,SAAS,CAAGJ,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAX,CAAlB,CACA,MACQ,qBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CACzBN,KAAK,CAAE,KAAKA,KADa,CAEzBQ,eAAe,CAAE,yBAACP,QAAD,CAAc,CAAC,MAAI,CAACQ,QAAL,CAAc,CAC1CR,QAAQ,CAAEA,QADgC,CAAd,EAGnC,CAL4B,CAM7BS,IAAI,CAAER,WACH;AAP0B,CAA7B,EASK,KAAKS,KAAL,CAAWC,QAThB,CADR,CAaH,CAxBL,0BAAkChB,SAAlC","sourcesContent":["import React, {Component} from 'react';\n\n//First we will make a context\nexport const AuthContext = React.createContext();\n\n//Then Create a provider Component\nexport class AuthProvider extends Component{\n    state = {\n        isLogged: false,\n    }\n    \n    render(){  \n\n        // localStorage.setItem(\"key\", JSON.stringify(this.GlobalUser)); \n        // console.log(JSON.parse(localStorage.getItem(\"key\")) );  \n        const logedinData = JSON.parse(sessionStorage.getItem(\"key\"));   \n        const corp_data = JSON.parse(sessionStorage.getItem(\"corp_key\"));                      \n        return(\n                <AuthContext.Provider value={{\n                    state: this.state,\n                    setUserAuthData: (isLogged) => {this.setState({\n                        isLogged: isLogged,\n                    })\n                },\n                data: logedinData,\n                   //c_data: corp_data\n                }}> \n                    {this.props.children}\n                </AuthContext.Provider>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
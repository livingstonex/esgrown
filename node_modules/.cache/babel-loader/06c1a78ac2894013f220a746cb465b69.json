{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/subscriptions/compt_mgt/lm-sub-form.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, Spinner } from 'react-bootstrap';\nimport PayStackButton from '../../../ind_dashboard_components/paystack/paystackpaymentbutton';\nimport StaffModal from '../components/all-staff';\nimport toast from '../../../../util/toast';\n\nconst LMSubForm = ({\n  show,\n  onHide,\n  closeModal\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        amount = _useState4[0],\n        setAmount = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        plan = _useState6[0],\n        setPlan = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        payModal = _useState8[0],\n        setPayModal = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        spinner = _useState10[0],\n        setSpinner = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        staff = _useState12[0],\n        setStaff = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        staffModal = _useState14[0],\n        setStaffModal = _useState14[1];\n\n  const _useState15 = useState(),\n        _useState16 = _slicedToArray(_useState15, 2),\n        total = _useState16[0],\n        setTotal = _useState16[1];\n\n  const _useState17 = useState(),\n        _useState18 = _slicedToArray(_useState17, 2),\n        subPeriod = _useState18[0],\n        setSubPeriod = _useState18[1];\n\n  const _useState19 = useState(true),\n        _useState20 = _slicedToArray(_useState19, 2),\n        Btn = _useState20[0],\n        setBtn = _useState20[1]; // const [state, setState] = useState({\n  //     companyName: '',\n  //     email: '',\n  //     doi: ''\n  // });\n\n\n  useEffect(() => {\n    const userr = JSON.parse(sessionStorage.getItem('key'));\n    setUser(userr);\n    axios.get(`http://localhost:5000/individuals/staff/${userr.id}`).then(res => {\n      const unsubscribedStaff = res.data.filter(staff => {\n        return staff.sub_status_compt_mgt === 'inactive' || staff.sub_status_compt_mgt === 'completed';\n      });\n      setStaff(unsubscribedStaff);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const onChangePlan = e => {\n    const plan = e.target.value.split('/');\n    setAmount(plan[1]);\n    setPlan(plan[0]);\n\n    if (Boolean(e.target.value)) {\n      setBtn(false);\n    } else {\n      setBtn(true);\n    }\n  };\n\n  const showStaff = () => {\n    setStaffModal(true);\n    closeModal();\n  }; //get total amount * number of staff and sub\n\n\n  const closeStaffModal = plantotal => {\n    setStaffModal(false);\n    setTotal(plantotal);\n    setPayModal(true);\n  }; //payment functions\n\n\n  const close = () => {\n    console.log(\"Payment closed\");\n    setPayModal(false);\n  };\n\n  const onSuccess = res => {\n    setPayModal(false);\n    const data = {\n      sub_status_compt_mgt: 'active'\n    };\n    console.log(staff); //update substatus of paid staff\n\n    staff.map(st => {\n      axios.post(`http://localhost:5000/individuals/update/substatus/${st._id}`, data).then(res => console.log(res.data)).catch(err => console.log(err));\n      axios.post(`http://localhost:5000/competence/management/add`, {\n        user_id: st._id,\n        company_id: user.id,\n        org_type: user.org_type,\n        sub_status: 'active',\n        user_name: st.fullname,\n        user_email: st.email,\n        start_date: Date.now(),\n        end_date: 86400 * plan + Date.now()\n      }).then(res => console.log(res.data)).catch(err => console.log(err));\n    });\n    toast(`${staff.length}  subscriptions successful`, 'success');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      fontSize: '18px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Corporate Subscription\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Select A Plan\"), React.createElement(\"select\", {\n    name: \"plan\",\n    className: \"form-control\",\n    onChange: onChangePlan,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Select a Plan\"), React.createElement(\"option\", {\n    value: \"90/280000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"3 Months Plan - 2800\"), React.createElement(\"option\", {\n    value: \"180/455000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"6 Months Plan - 4550\"), React.createElement(\"option\", {\n    value: \"365/797000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"1 Year Plan  - 7970 \"))))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn font-weight-light btn-primary mt-3 py-2 w-100 border-0\",\n    disabled: Btn,\n    onClick: showStaff,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }) : \"Proceed\"))))), React.createElement(PayStackButton, {\n    show: payModal,\n    onHide: () => setPayModal(false),\n    close: close,\n    callback: onSuccess,\n    email: user ? user.email : \"\",\n    amount: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(StaffModal, {\n    show: staffModal,\n    onHide: () => setStaffModal(!staffModal),\n    amount: amount,\n    closeStaffModal: closeStaffModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }));\n};\n\nexport default LMSubForm;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/subscriptions/compt_mgt/lm-sub-form.js"],"names":["React","useState","useEffect","axios","Modal","Spinner","PayStackButton","StaffModal","toast","LMSubForm","show","onHide","closeModal","user","setUser","amount","setAmount","plan","setPlan","payModal","setPayModal","spinner","setSpinner","staff","setStaff","staffModal","setStaffModal","total","setTotal","subPeriod","setSubPeriod","Btn","setBtn","userr","JSON","parse","sessionStorage","getItem","get","id","then","res","unsubscribedStaff","data","filter","sub_status_compt_mgt","catch","err","console","log","onChangePlan","e","target","value","split","Boolean","showStaff","closeStaffModal","plantotal","close","onSuccess","map","st","post","_id","user_id","company_id","org_type","sub_status","user_name","fullname","user_email","email","start_date","Date","now","end_date","length","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, Spinner } from 'react-bootstrap';\nimport PayStackButton from '../../../ind_dashboard_components/paystack/paystackpaymentbutton';\nimport StaffModal from '../components/all-staff';\nimport toast from '../../../../util/toast';\n\n\n\n\n\nconst LMSubForm = ({ show, onHide, closeModal }) => {\n\n    const [user, setUser] = useState();\n    const [amount, setAmount] = useState();\n    const [plan, setPlan] = useState();\n    const [payModal, setPayModal] = useState(false);\n    const [spinner, setSpinner] = useState(false)\n    const [staff, setStaff] = useState([]);\n    const [staffModal, setStaffModal] = useState(false)\n    const [total, setTotal] = useState();\n    const [subPeriod, setSubPeriod] = useState();\n    const [Btn, setBtn] = useState(true);\n\n\n    // const [state, setState] = useState({\n    //     companyName: '',\n    //     email: '',\n    //     doi: ''\n    // });\n\n    useEffect(() => {\n        const userr = JSON.parse(sessionStorage.getItem('key'));\n        setUser(userr)\n\n\n        axios.get(`http://localhost:5000/individuals/staff/${userr.id}`)\n            .then(res => {\n                const unsubscribedStaff = res.data.filter(staff => {\n                    return staff.sub_status_compt_mgt === 'inactive' || staff.sub_status_compt_mgt === 'completed';\n                })\n                setStaff(unsubscribedStaff);\n            }).catch(err => console.log(err));\n\n    }, []);\n\n\n    const onChangePlan = (e) => {\n        const plan = e.target.value.split('/');\n        setAmount(plan[1]);\n        setPlan(plan[0]);\n        if (Boolean(e.target.value)) {\n            setBtn(false)\n        } else {\n            setBtn(true)\n\n        }\n\n\n    }\n\n    const showStaff = () => {\n        setStaffModal(true);\n        closeModal();\n    }\n\n    //get total amount * number of staff and sub\n    const closeStaffModal = (plantotal) => {\n        setStaffModal(false);\n        setTotal(plantotal);\n        setPayModal(true);\n\n    }\n\n\n    //payment functions\n    const close = () => {\n        console.log(\"Payment closed\");\n        setPayModal(false)\n    }\n\n    const onSuccess = (res) => {\n        setPayModal(false);\n\n\n\n        const data = {\n            sub_status_compt_mgt: 'active',\n        }\n\n        console.log(staff)\n\n        //update substatus of paid staff\n        staff.map(st => {\n            axios.post(`http://localhost:5000/individuals/update/substatus/${st._id}`, data)\n                .then(res => console.log(res.data))\n                .catch(err => console.log(err));\n\n            axios.post(`http://localhost:5000/competence/management/add`, {\n                user_id: st._id,\n                company_id: user.id,\n                org_type: user.org_type,\n                sub_status: 'active',\n                user_name: st.fullname,\n                user_email: st.email,\n                start_date: Date.now(),\n                end_date: (86400 * plan) + Date.now()\n\n            }).then(res => console.log(res.data))\n                .catch(err => console.log(err))\n        })\n\n        toast(`${staff.length}  subscriptions successful`, 'success');\n    }\n\n\n\n\n    return (\n        <>\n            <Modal show={show} onHide={onHide} centered>\n                <Modal.Header>\n                    <span style={{ fontSize: '18px' }}>Corporate Subscription</span>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        {/* <div className=\"row mt-3\">\n                            <div className=\"col\">\n                                <label style={{ fontWeight: 'bold' }}> Company Name</label>\n                                <input type=\"text\" name=\"companyName\" value={state.companyName} onChange={handleChange} placeholder=\"Company Name\" className=\"form-control\" required />\n                            </div>\n                        </div>\n\n                        <div className=\"row mt-3\">\n                            <div className=\"col\">\n                                <label style={{ fontWeight: 'bold' }}> Official Email</label>\n                                <input type=\"email\" name=\"email\" value={state.email} onChange={handleChange} placeholder=\"Official Email\" className=\"form-control\" required />\n                            </div>\n                        </div>\n\n                        <div className=\"row mt-3\">\n                            <div className=\"col\">\n                                <label style={{ fontWeight: 'bold' }}>Date of Incorporation</label>\n                                <input type=\"date\" name=\"doi\" value={state.doi} onChange={handleChange} placeholder=\"Date of Incorporation\" className=\"form-control\" required />\n                            </div>\n                        </div> */}\n\n                        <div className=\"row mt-3\">\n                            <div className=\"col\">\n                                <label style={{ fontWeight: 'bold' }}>Select A Plan</label>\n                                <select name=\"plan\" className=\"form-control\" onChange={onChangePlan} required>\n                                    <option value=\"\">Select a Plan</option>\n                                    <option value=\"90/280000\">3 Months Plan - 2800</option>\n                                    <option value=\"180/455000\">6 Months Plan - 4550</option>\n                                    <option value=\"365/797000\">1 Year Plan  - 7970 </option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <button\n                                type=\"submit\"\n                                className=\"btn font-weight-light btn-primary mt-3 py-2 w-100 border-0\"\n                                disabled={Btn}\n                                onClick={showStaff}\n\n                            >\n                                {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Proceed\"}\n                            </button>\n                        </div>\n                    </div>\n\n                </Modal.Body>\n\n            </Modal>\n            <PayStackButton\n                show={payModal}\n                onHide={() => setPayModal(false)}\n                close={close}\n                callback={onSuccess}\n                email={user ? user.email : \"\"}\n                amount={total}\n            />\n\n            <StaffModal\n                show={staffModal}\n                onHide={() => setStaffModal(!staffModal)}\n                amount={amount}\n                closeStaffModal={closeStaffModal}\n            />\n        </>\n    );\n}\nexport default LMSubForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/quiz.js\";\nimport React, { useState } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst Quiz = props => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeStep = _useState2[0],\n        setActiveStep = _useState2[1];\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const question = props.question,\n        handelUserAns = props.handelUserAns,\n        submitAns = props.submitAns,\n        countDown = props.countDown;\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    style: {\n      fontSize: '18px',\n      fontWeight: 'bolder'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Number of Questions: \", question.length), React.createElement(Stepper, {\n    activeStep: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, question.map(q => React.createElement(Step, {\n    key: q.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(StepContent, {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, q.question), React.createElement(StepContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"hidden\",\n    value: q.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, q.answer.map(a => {\n    let ans;\n\n    if (q.correct_ans.length > 1) {\n      ans = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: a,\n        onChange: handelUserAns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), a);\n    } else {\n      ans = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"ans\",\n        value: a,\n        onChange: handelUserAns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \" \", a);\n    }\n\n    return ans;\n  })), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: \"\",\n    id: activeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, activeStep === question.length - 1 ? 'Finish' : 'Next'))))))), activeStep === question.length && React.createElement(Paper, {\n    square: true,\n    elevation: 0,\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"All steps completed - you 're finished\"), React.createElement(Button, {\n    className: \"\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: submitAns,\n    id: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"submit Ans\")), React.createElement(\"span\", {\n    style: {\n      fontSize: '18px',\n      color: '#E68824'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, countDown, \" Seconds left\"));\n};\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/quiz.js"],"names":["React","useState","Stepper","Step","StepContent","Button","Paper","Typography","Quiz","props","activeStep","setActiveStep","handleNext","prevActiveStep","question","handelUserAns","submitAns","countDown","fontSize","fontWeight","length","map","q","answer","a","ans","correct_ans","color"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst Quiz = (props) => {\n\nconst [activeStep, setActiveStep] = useState(0);\n\n\n   const handleNext = () => {\n       setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const { question, handelUserAns, submitAns, countDown } = props;\n    return (\n        <>\n            <span style={{fontSize:'18px',fontWeight:'bolder'}}>Number of Questions: {question.length}</span>\n            <Stepper activeStep={activeStep}>\n                {question.map((q) => (\n                    <Step key={q.question}>\n                        <StepContent style={{ fontSize: '20px' }}>{q.question}</StepContent>\n                        <StepContent>\n                            <input type=\"hidden\" value={q.question} />\n                            <Typography>\n                                {q.answer.map((a) => {\n                                    let ans;\n                                    if (q.correct_ans.length > 1) {\n                                        ans = <div>\n                                            <input type=\"checkbox\" value={a} onChange={handelUserAns} />{a}\n                                        </div>\n                                    } else {\n                                        ans = <div>\n                                            <input type=\"radio\" name=\"ans\" value={a} onChange={handelUserAns} /> {a}\n                                        </div>;\n                                    }\n\n                                    return ans;\n                                })}</Typography>\n                            <div className=\"\">\n                                <div>\n\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className=\"\"\n                                        id={activeStep}\n                                    >\n                                        {activeStep === question.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {activeStep === question.length && (\n                <Paper square elevation={0} className=\"\">\n                    <Typography>All steps completed - you &apos;re finished</Typography>\n\n                    <Button\n                        className=\"\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={submitAns}\n                        id=\"submit\"\n                    >\n                        submit Ans\n                    </Button>\n                </Paper>\n            )}\n            <span style={{ fontSize: '18px', color: '#E68824' }}>{countDown} Seconds left</span>\n        </>\n    );\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}
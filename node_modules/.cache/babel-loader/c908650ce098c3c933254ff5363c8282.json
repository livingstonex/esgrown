{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/corporate_login.js\";\nimport React, { Component } from \"react\";\nimport { AuthContext } from \"../AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport { Button, OverlayTrigger, Form, Container, Row, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport toast from '../util/toast';\nexport default class CorporateLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onSubmit(e) {}\n\n  render() {\n    const formStyle = {\n      'border': '1px solid skyblue',\n      'border-radius': '5px',\n      'margin-top': '60px'\n    };\n    return React.createElement(AuthContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, context => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: formStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      style: {\n        'fontWeight': 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign In to your Corporate Account\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email address:\"), React.createElement(Form.Control, {\n      type: \"email\",\n      required: true,\n      placeholder: \"Enter email\",\n      onChange: this.onChangeEmail,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"We'll never share your email with anyone else.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(Form.Control, {\n      type: \"password\",\n      required: true,\n      placeholder: \"Password\",\n      onChange: this.onChangePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: e => {\n        e.preventDefault();\n        const Corporate_User = {\n          email: this.state.email,\n          password: this.state.password\n        }; //Make a post to the api route for login\n\n        axios.post('http://localhost:5000/corporates/login_corporate_email', Corporate_User).then(res => {\n          //console.log(res.data[0].password);\n          if (res.data.length > 0) {\n            const cid = res.data[0]._id;\n            const cuser_name = res.data[0].org_name;\n            const cuser_email = res.data[0].email;\n            const cuser_phone = res.data[0].phone;\n            const cuser_doi = res.data[0].doi;\n            const cuser_country = res.data[0].country;\n            const cuser_state = res.data[0].state;\n            const cuser_status = res.data[0].status;\n            const org_type = res.data[0].org_type;\n            console.log(res.data[0]);\n            console.log(Corporate_User.password);\n            const corp_user_data = {\n              email: res.data[0].email,\n              hash_password: res.data[0].password,\n              normal_password: Corporate_User.password\n            };\n            axios.post('http://localhost:5000/corporates/login_corporate', corp_user_data).then(res => {\n              console.log(res.data);\n\n              if (res.data == 1) {\n                // alert(\"Corporate Login Successfull\");\n                toast(\"Corporate Login Successfull\", 'success'); //uPDATE CONTEXT AUTH DATA HERE AND NAVIGATE TO THE DASHBOARD\n\n                context.setUserAuthData(true);\n                const Global_CorpUser = {\n                  isLogged: true,\n                  id: cid,\n                  email: cuser_email,\n                  name: cuser_name,\n                  phone: cuser_phone,\n                  dos: cuser_doi,\n                  country: cuser_country,\n                  state: cuser_state,\n                  status: cuser_status,\n                  org_type: org_type\n                };\n                sessionStorage.setItem(\"key\", JSON.stringify(Global_CorpUser));\n                console.log(JSON.parse(sessionStorage.getItem(\"key\")));\n                window.location = \"/frontier\";\n              } else {\n                // alert(\"Password wrong, please try again\");\n                toast(\"Password wrong, please try again\", 'error');\n              }\n            }).catch(error => toast(`Error is: \"  ${error}`, 'error'));\n          } else {\n            // alert(\"Your email address is not correct\");\n            toast(\"Your email address is not incorrect\", 'warn');\n          }\n        }).catch(error => toast(`Error is:  ${error}`, 'error')); //Reset the textfields to show blank by emptying the state\n\n        this.setState({\n          email: '',\n          password: ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Forgot password? \", React.createElement(Link, {\n      to: \"/forgotPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      className: \"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/corporate_login.js"],"names":["React","Component","AuthContext","Link","Button","OverlayTrigger","Form","Container","Row","Col","axios","toast","CorporateLogin","constructor","props","onChangeEmail","bind","onChangePassword","onSubmit","state","email","password","e","setState","target","value","render","formStyle","context","preventDefault","Corporate_User","post","then","res","data","length","cid","_id","cuser_name","org_name","cuser_email","cuser_phone","phone","cuser_doi","doi","cuser_country","country","cuser_state","cuser_status","status","org_type","console","log","corp_user_data","hash_password","normal_password","setUserAuthData","Global_CorpUser","isLogged","id","name","dos","sessionStorage","setItem","JSON","stringify","parse","getItem","window","location","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { AuthContext } from \"../AuthContext\";\nimport {Link} from \"react-router-dom\";\nimport {Button, OverlayTrigger, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport toast from '../util/toast';\n\n\nexport default class CorporateLogin extends Component{\n    constructor(props){\n        super(props);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            email:'',\n            password:''\n        }\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onSubmit(e){\n        \n    }\n\n    \n    render(){\n        const formStyle = {\n            'border':'1px solid skyblue',\n            'border-radius':'5px',\n            'margin-top':'60px'\n        };\n        return (\n            <AuthContext.Consumer>\n                {\n                    (context) => (\n\n                <div>\n                    <Row>\n                        <Col className=\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\" ></Col>\n                        <Col>\n                            <Container style={formStyle}>\n                                    <br/>\n                                        <label style={{'fontWeight':'bold'}}>Sign In to your Corporate Account</label>\n                                        <Form>\n                                            <Form.Group controlId=\"formBasicEmail\">\n                                                <Form.Label>Email address:</Form.Label>\n                                                <Form.Control type=\"email\" required placeholder=\"Enter email\"  onChange={this.onChangeEmail} value={this.state.email}/>\n                                                <Form.Text className=\"text-muted\">\n                                                We'll never share your email with anyone else.\n                                                </Form.Text>\n                                            </Form.Group>\n                                            <Form.Group controlId=\"formBasicPassword\">\n                                                <Form.Label>Password:</Form.Label>\n                                                <Form.Control type=\"password\" required placeholder=\"Password\" onChange={this.onChangePassword} value={this.state.password} />\n                                            </Form.Group>\n                                            <Button variant=\"primary\" type=\"submit\" onClick={(e) => {\n                                                e.preventDefault();\n\n                                                const Corporate_User = {\n                                                    email: this.state.email,\n                                                    password: this.state.password\n                                                }\n\n                                        //Make a post to the api route for login\n                                        axios.post('http://localhost:5000/corporates/login_corporate_email', Corporate_User)\n                                            .then(res => {\n                                                //console.log(res.data[0].password);\n                                                if (res.data.length > 0) {\n                                                    const cid = res.data[0]._id;\n                                                    const cuser_name = res.data[0].org_name;\n                                                    const cuser_email = res.data[0].email;\n                                                    const cuser_phone = res.data[0].phone;\n                                                    const cuser_doi = res.data[0].doi;\n                                                    const cuser_country = res.data[0].country;\n                                                    const cuser_state = res.data[0].state;\n                                                    const cuser_status = res.data[0].status;\n                                                    const org_type = res.data[0].org_type\n\n                                                    console.log(res.data[0]);\n                                                    console.log(Corporate_User.password);\n                                                    const corp_user_data = {\n                                                        email: res.data[0].email,\n                                                        hash_password: res.data[0].password,\n                                                        normal_password: Corporate_User.password\n                                                    }\n                                                    axios.post('http://localhost:5000/corporates/login_corporate', corp_user_data)\n                                                        .then(res => {\n                                                            console.log(res.data);\n                                                            if (res.data == 1) {\n                                                                // alert(\"Corporate Login Successfull\");\n                                                                toast(\"Corporate Login Successfull\",'success')\n                                                                //uPDATE CONTEXT AUTH DATA HERE AND NAVIGATE TO THE DASHBOARD\n                                                                context.setUserAuthData(true);\n\n                                                                \n                                                                const Global_CorpUser = {\n                                                                    isLogged: true,\n                                                                    id: cid,\n                                                                    email: cuser_email,\n                                                                    name: cuser_name,\n                                                                    phone: cuser_phone,\n                                                                    dos: cuser_doi,\n                                                                    country: cuser_country,\n                                                                    state: cuser_state,\n                                                                    status: cuser_status,\n                                                                    org_type: org_type\n\n                                                                }\n\n                                                                sessionStorage.setItem(\"key\", JSON.stringify(Global_CorpUser));\n                                                                console.log(JSON.parse(sessionStorage.getItem(\"key\")));\n\n                                                                window.location = \"/frontier\";\n                                                            } else {\n                                                                // alert(\"Password wrong, please try again\");\n                                                                toast(\"Password wrong, please try again\",'error')\n                                                            }\n                                                        })\n                                                        .catch(error => toast(`Error is: \"  ${error}`, 'error'));\n                                                } else {\n                                                    // alert(\"Your email address is not correct\");\n                                                    toast(\"Your email address is not incorrect\",'warn')\n                                                }\n                                            })\n                                            .catch(error => toast(`Error is:  ${error}`, 'error'));\n                                                \n\n                                        //Reset the textfields to show blank by emptying the state\n                                        this.setState({\n                                            email: '',\n                                            password: ''\n                                        });\n                                        \n                                            }}>\n                                                Login\n                                                </Button>\n                                                <br/>\n                                            \n                                            <label>Forgot password? <Link to=\"/forgotPassword\">Reset</Link></label>\n                                            <br/>\n                                        </Form>\n                                        <br/>\n                                    </Container>\n                                </Col>\n                        <Col className=\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\" ></Col>\n                    </Row>\n                    </div>\n                )\n            }\n            </AuthContext.Consumer>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/rm/rm.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RMexercisesLog from '../components/exercise_log';\nimport RMexercisesNewContent from '../components/new_exercise';\n\nconst RMexercises = () => {\n  const title = \"RM Exercises Log\";\n  const NewContentTitle = \"Create new RM Exercises and Questions\";\n  const service = \"RM\";\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        ex = _useState2[0],\n        setEx = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        spinner = _useState4[0],\n        setSpinner = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n    setUser(user); //get exercises using corp id\n\n    axios.get(`http://localhost:5000/excercise/${user.id}`).then(res => {\n      if (res.data.length > 0) {\n        // const rmEx = res.data.filter((ex) => {\n        //     return ex.service == \"RM\"\n        // });\n        setEx(res.data);\n        setSpinner(false);\n      }\n\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(ex);\n\n  const refreshContentLog = () => {\n    //get exercises then using exercise id\n    axios.get(`http://localhost:5000/excercise/${user.id}`).then(res => {\n      if (res.data.length > 0) {\n        const rmEx = res.data.filter(ex => {\n          return ex.service == \"RM\";\n        });\n        setEx(res.data);\n        setSpinner(false);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(RMexercisesLog, {\n    title: title,\n    ex: ex,\n    spinner: spinner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(RMexercisesNewContent, {\n    service: service,\n    title: NewContentTitle,\n    refreshContentLog: refreshContentLog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nexport default RMexercises;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/exercises/rm/rm.js"],"names":["React","useEffect","useState","axios","RMexercisesLog","RMexercisesNewContent","RMexercises","title","NewContentTitle","service","ex","setEx","spinner","setSpinner","user","setUser","JSON","parse","sessionStorage","getItem","get","id","then","res","data","length","console","log","catch","err","refreshContentLog","rmEx","filter"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAMC,KAAK,GAAG,kBAAd;AACA,QAAMC,eAAe,GAAG,uCAAxB;AACA,QAAMC,OAAO,GAAG,IAAhB;;AAJsB,oBAMFP,QAAQ,CAAC,EAAD,CANN;AAAA;AAAA,QAMfQ,EANe;AAAA,QAMXC,KANW;;AAAA,qBAOQT,QAAQ,CAAC,IAAD,CAPhB;AAAA;AAAA,QAOfU,OAPe;AAAA,QAONC,UAPM;;AAAA,qBAQEX,QAAQ,CAAC,EAAD,CARV;AAAA;AAAA,QAQfY,IARe;AAAA,QAQTC,OARS;;AAUtBd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAAb;AACAJ,IAAAA,OAAO,CAACD,IAAD,CAAP,CAFY,CAGZ;;AACAX,IAAAA,KAAK,CAACiB,GAAN,CAAW,mCAAkCN,IAAI,CAACO,EAAG,EAArD,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAkB,CAAtB,EAAyB;AACrB;AACA;AACA;AACAd,QAAAA,KAAK,CAACY,GAAG,CAACC,IAAL,CAAL;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDa,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB;AACH,KAVL,EAWKI,KAXL,CAWWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAXlB;AAaH,GAjBQ,EAiBP,EAjBO,CAAT;AAmBAH,EAAAA,OAAO,CAACC,GAAR,CAAYjB,EAAZ;;AAEA,QAAMoB,iBAAiB,GAAG,MAAM;AAE5B;AACA3B,IAAAA,KAAK,CAACiB,GAAN,CAAW,mCAAkCN,IAAI,CAACO,EAAG,EAArD,EACKC,IADL,CACUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,GAAkB,CAAtB,EAAyB;AACrB,cAAMM,IAAI,GAAGR,GAAG,CAACC,IAAJ,CAASQ,MAAT,CAAiBtB,EAAD,IAAQ;AACjC,iBAAOA,EAAE,CAACD,OAAH,IAAc,IAArB;AACH,SAFY,CAAb;AAGAE,QAAAA,KAAK,CAACY,GAAG,CAACC,IAAL,CAAL;AACAX,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KATL,EAUKe,KAVL,CAUWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAVlB;AAYH,GAfD;;AAgBA,SACI,0CACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEtB,KAAvB;AAA8B,IAAA,EAAE,EAAEG,EAAlC;AAAsC,IAAA,OAAO,EAAEE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAEH,OAAhC;AAAyC,IAAA,KAAK,EAAED,eAAhD;AAAiE,IAAA,iBAAiB,EAAEsB,iBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,CADJ;AAUH,CAzDD;;AA0DA,eAAexB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RMexercisesLog from '../components/exercise_log';\nimport RMexercisesNewContent from '../components/new_exercise';\n\n\nconst RMexercises = () => {\n\n    const title = \"RM Exercises Log\";\n    const NewContentTitle = \"Create new RM Exercises and Questions\";\n    const service = \"RM\";\n\n    const [ex, setEx] = useState([]);\n    const [spinner, setSpinner] = useState(true);\n    const [user, setUser] = useState('');\n\n    useEffect(() => {\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        setUser(user)\n        //get exercises using corp id\n        axios.get(`http://localhost:5000/excercise/${user.id}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    // const rmEx = res.data.filter((ex) => {\n                    //     return ex.service == \"RM\"\n                    // });\n                    setEx(res.data);\n                    setSpinner(false);\n                }\n                console.log(res.data)\n            })\n            .catch(err => console.log(err));\n\n    },[])\n\n    console.log(ex)\n\n    const refreshContentLog = () => {\n\n        //get exercises then using exercise id\n        axios.get(`http://localhost:5000/excercise/${user.id}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    const rmEx = res.data.filter((ex) => {\n                        return ex.service == \"RM\"\n                    });\n                    setEx(res.data);\n                    setSpinner(false);\n                }\n            })\n            .catch(err => console.log(err));\n    \n    }\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <RMexercisesLog title={title} ex={ex} spinner={spinner} />\n                    <RMexercisesNewContent service={service} title={NewContentTitle} refreshContentLog={refreshContentLog} />\n                </div>\n        </div>\n        </>\n    );\n}\nexport default RMexercises;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/eas/eas_sub_page/eas_sub_page.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport axios from 'axios';\n\nclass EasUpdateForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      levelOfEducation: '',\n      intendedStudy: '',\n      sub_status: false,\n      user_id: '',\n      message: '',\n      LOE: true,\n      FIS: true\n    };\n\n    this.handleUpdate = props => {\n      const _this$state = this.state,\n            levelOfEducation = _this$state.levelOfEducation,\n            intendedStudy = _this$state.intendedStudy;\n      const id = this.state.user_id;\n      const data = {\n        levelofeducation: levelOfEducation,\n        field_of_intended_study: intendedStudy\n      }; //make axios request to update db\n\n      axios.post(`http://localhost:5000/subscriptioneas/update/${id}`, data).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: 'Subscription details updated successful'\n          });\n        }\n      }).catch(err => console.log(err.message));\n    };\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  //get values to be updated\n  componentDidMount() {\n    const userData = JSON.parse(sessionStorage.getItem('key'));\n    this.setState({\n      user_id: userData.id\n    });\n    axios.get(`http://localhost:5000/subscriptioneas/${userData.id}`).then(res => this.setState({\n      levelOfEducation: res.data[0].levelofeducation,\n      intendedStudy: res.data[0].field_of_intended_study,\n      sub_status: res.data[0].sub_status\n    })).catch(err => err.message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          toggle = _this$props.toggle;\n    const sub_statusColor = this.state.sub_status === 'active' ? '#97ba0d' : '#e68723';\n    const buttonText = this.state.sub_status === 'active' ? 'PAID' : 'PAY';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: isOpen,\n      toggle: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        font: 'verdana',\n        fontSize: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Education Advisory Services Subscription\")), React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginLeft: 300,\n        marginTop: -45,\n        paddingRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        float: 'right',\n        backgroundColor: sub_statusColor,\n        color: 'white',\n        border: sub_statusColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, buttonText))), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"levelOfEducation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Level Of Education\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"levelOfEducation\",\n      value: this.state.levelOfEducation,\n      onChange: this.changeHandler,\n      disabled: this.state.LOE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Level of Education\"), React.createElement(\"option\", {\n      value: \"degree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Degree\"), React.createElement(\"option\", {\n      value: \"masters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Masters\"), React.createElement(\"option\", {\n      value: \"phd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Ph.D\")), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: 'lightgrey',\n        border: 'none'\n      },\n      onClick: () => this.setState({\n        LOE: !this.state.LOE\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"edit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"intendedStudy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Field Of Intended Study\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"intendedStudy\",\n      value: this.state.intendedStudy,\n      onChange: this.changeHandler,\n      disabled: this.state.FIS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        background: 'lightgrey',\n        border: 'none'\n      },\n      onClick: () => this.setState({\n        FIS: !this.state.FIS\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"edit\"))))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.message === 'Subscription details updated successful' ? React.createElement(\"span\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.message) : React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, this.state.message), ' ', '', React.createElement(Button, {\n      style: {\n        background: '#1c8496',\n        border: '#1c8496',\n        color: 'white'\n      },\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Update\"))));\n  }\n\n}\n\nexport default EasUpdateForm;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/eas/eas_sub_page/eas_sub_page.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","InputGroup","InputGroupAddon","InputGroupText","axios","EasUpdateForm","state","levelOfEducation","intendedStudy","sub_status","user_id","message","LOE","FIS","handleUpdate","props","id","data","levelofeducation","field_of_intended_study","post","then","response","status","setState","catch","err","console","log","changeHandler","event","name","target","value","componentDidMount","userData","JSON","parse","sessionStorage","getItem","get","res","render","isOpen","toggle","sub_statusColor","buttonText","float","font","fontSize","marginLeft","marginTop","paddingRight","backgroundColor","color","border","background"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Form, FormGroup,\n    Label, Input,\n    Modal, ModalHeader,\n    ModalBody, ModalFooter,\n    InputGroup, InputGroupAddon,\n    InputGroupText,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass EasUpdateForm extends Component {\n\n    state = {\n        levelOfEducation: '',\n        intendedStudy: '',\n        sub_status: false,\n        user_id: '',\n        message: '',\n        LOE: true,\n        FIS: true\n    }\n\n\n    handleUpdate = (props) => {\n\n        const { levelOfEducation, intendedStudy } = this.state;\n\n        const id = this.state.user_id;\n\n\n        const data = {\n            levelofeducation: levelOfEducation,\n            field_of_intended_study: intendedStudy\n        }\n\n\n        //make axios request to update db\n        axios.post(`http://localhost:5000/subscriptioneas/update/${id}`, data)\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({ message: 'Subscription details updated successful' })\n                }\n            })\n            .catch(err => console.log(err.message))\n\n\n    }\n\n\n    //get values to be updated\n    componentDidMount() {\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n\n        this.setState({ user_id: userData.id });\n\n\n        axios.get(`http://localhost:5000/subscriptioneas/${userData.id}`)\n            .then(res => this.setState({\n                levelOfEducation: res.data[0].levelofeducation,\n                intendedStudy: res.data[0].field_of_intended_study,\n                sub_status: res.data[0].sub_status\n\n            }))\n\n            .catch(err => err.message)\n\n    }\n\n\n\n    changeHandler = event => {\n\n        const name = event.target.name;\n\n        const value = event.target.value;\n\n        this.setState({ [name]: value });\n    }\n\n\n    render() {\n        const { isOpen, toggle } = this.props;\n\n        const sub_statusColor = this.state.sub_status === 'active' ? '#97ba0d':'#e68723'  ;\n\n        const buttonText = this.state.sub_status === 'active' ? 'PAID' : 'PAY';\n\n\n        return (\n\n            <div>\n                <Modal isOpen={isOpen} toggle={toggle} centered>\n                    <ModalHeader>\n                        <div style={{ float: 'left' }}><p style={{ font: 'verdana', fontSize: 18 }}>Education Advisory Services Subscription</p></div>\n                        <div style={{ float: 'right', marginLeft: 300, marginTop: -45, paddingRight: 0 }}><Button style={{ float: 'right', backgroundColor: sub_statusColor, color: 'white', border: sub_statusColor }}>{buttonText}</Button></div>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            {/* <FormGroup>\n                                <Label for=\"levelOfEducation\">Level Of Education</Label>\n                                <Input type=\"text\"\n                                    name=\"levelOfEducation\"\n                                    value={this.state.levelOfEducation}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup> */}\n                            <Label for=\"levelOfEducation\">Level Of Education</Label>\n                            <InputGroup>\n                                <Input type=\"select\"\n                                    name=\"levelOfEducation\"\n                                    value={this.state.levelOfEducation}\n                                    onChange={this.changeHandler}\n                                    disabled={this.state.LOE}\n                                >\n                                    <option>Level of Education</option>\n                                    <option value=\"degree\">Degree</option>\n                                    <option value=\"masters\">Masters</option>\n                                    <option value=\"phd\">Ph.D</option>\n                                </Input>\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button style={{ background: 'lightgrey', border: 'none' }} onClick={() => this.setState({ LOE: !this.state.LOE })}>edit</Button>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            <br />\n                            <Label for=\"intendedStudy\">Field Of Intended Study</Label>\n                            <InputGroup>\n                                <Input type=\"text\"\n                                    name=\"intendedStudy\"\n                                    value={this.state.intendedStudy}\n                                    onChange={this.changeHandler}\n                                    disabled={this.state.FIS}\n                                />\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button style={{ background: 'lightgrey', border: 'none' }} onClick={() => this.setState({ FIS: !this.state.FIS })}>edit</Button>\n                                </InputGroupAddon>\n                            </InputGroup>\n\n                            {/* <FormGroup>\n                                <Label for=\"intendedStudy\">Field Of Intended Study</Label>\n                                <Input type=\"text\"\n                                    name=\"intendedStudy\"\n                                    value={this.state.intendedStudy}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup> */}\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        {this.state.message === 'Subscription details updated successful' ? <span style={{ color: 'green' }}>{this.state.message}</span> : <span style={{ color: 'red' }}>{this.state.message}</span>}\n                        {' '}{''}\n                        <Button style={{ background: '#1c8496', border:'#1c8496', color: 'white' }} onClick={this.handleUpdate}>Update</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n\n    }\n}\n\n\nexport default EasUpdateForm;\n"]},"metadata":{},"sourceType":"module"}
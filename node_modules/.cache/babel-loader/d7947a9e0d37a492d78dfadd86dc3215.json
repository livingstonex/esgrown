{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/rm/rm_sub_page/rm_sub_page.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport JobsModal from '../jobsmodal';\nimport axios from 'axios';\n\nclass RmUpdateForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      highestlevelOfEducation: '',\n      intendedStudy: '',\n      sub_status: false,\n      user_id: '',\n      message: '',\n      jobsModal: false\n    };\n\n    this.handleUpdate = () => {\n      const data = {\n        highest_level_of_education: this.state.highestlevelOfEducation,\n        field_of_training: this.state.intendedStudy\n      }; //make axios request and update\n\n      axios.post(`http://localhost:5000/subscriptionrm/update/${this.state.user_id}`, data).then(response => {\n        if (response.status == 200) {\n          this.setState({\n            message: 'Subscription details updated successful'\n          });\n        }\n      }).catch(err => this.setState({\n        message: 'Update failed. Please try again'\n      }));\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        jobsModal: false\n      });\n    };\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  //make axios call to api and get data to be edited and store in state\n  // : : \n  componentDidMount() {\n    const userData = JSON.parse(sessionStorage.getItem('key'));\n    this.setState({\n      user_id: userData.id\n    });\n\n    if (userData.sub_status_rm == 'active') {\n      this.setState({\n        sub_status: 'active'\n      });\n    }\n\n    console.log(userData); // axios.get(`http://localhost:5000/subscriptionrm/${userData.id}`)\n    //     .then(response => this.setState({\n    //         highestlevelOfEducation: response.data[0].highest_level_of_education,\n    //         intendedStudy: response.data[0].field_of_training,\n    //         sub_status: response.data[0].sub_status\n    //     }))\n    //     .catch(err => console.log(err))\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          toggle = _this$props.toggle;\n    const sub_statusColor = this.state.sub_status === 'active' ? '#97ba0d' : '#e68723';\n    const buttonText = this.state.sub_status === 'active' ? 'PAID' : 'PAY';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: isOpen,\n      toggle: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        font: 'verdana',\n        fontSize: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Recruitment Management Subscription\")), React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginLeft: 300,\n        marginTop: -45,\n        paddingRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        float: 'right',\n        backgroundColor: sub_statusColor,\n        color: 'white',\n        border: sub_statusColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, buttonText))), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"highestlevelOfEducation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Highest Level Of Education\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"highestlevelOfEducation\",\n      value: this.state.highestlevelOfEducation,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"intendedStudy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Field Of Training\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"intendedStudy\",\n      value: this.state.intendedStudy,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.state.message === 'Subscription details updated successful' ? React.createElement(\"span\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.message) : React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.message), ' ', '', React.createElement(Button, {\n      className: \"btn btn-sm btn-info\",\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Update\"), this.state.sub_status == 'active' ? React.createElement(\"button\", {\n      className: \"btn btn-sm btn-info\",\n      style: {\n        background: '#21a5e7',\n        border: '#21a5e7'\n      },\n      onClick: () => this.setState({\n        jobsModal: !this.state.jobsModal\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add Job \") : \"\")), React.createElement(JobsModal, {\n      onHide: () => this.setState({\n        jobsModal: false\n      }),\n      show: this.state.jobsModal,\n      closeModal: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default RmUpdateForm;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/rm/rm_sub_page/rm_sub_page.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","JobsModal","axios","RmUpdateForm","state","highestlevelOfEducation","intendedStudy","sub_status","user_id","message","jobsModal","handleUpdate","data","highest_level_of_education","field_of_training","post","then","response","status","setState","catch","err","closeModal","changeHandler","event","name","target","value","componentDidMount","userData","JSON","parse","sessionStorage","getItem","id","sub_status_rm","console","log","render","props","isOpen","toggle","sub_statusColor","buttonText","float","font","fontSize","marginLeft","marginTop","paddingRight","backgroundColor","color","border","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,WAAvD,EAAoEC,SAApE,EAA+EC,WAA/E,QAAkG,YAAlG;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCa,KAFiC,GAEzB;AACJC,MAAAA,uBAAuB,EAAE,EADrB;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,UAAU,EAAE,KAHR;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,OAAO,EAAE,EALL;AAMJC,MAAAA,SAAS,EAAE;AANP,KAFyB;;AAAA,SAYjCC,YAZiC,GAYlB,MAAM;AAEjB,YAAMC,IAAI,GAAG;AACTC,QAAAA,0BAA0B,EAAE,KAAKT,KAAL,CAAWC,uBAD9B;AAETS,QAAAA,iBAAiB,EAAE,KAAKV,KAAL,CAAWE;AAFrB,OAAb,CAFiB,CAOjB;;AACAJ,MAAAA,KAAK,CAACa,IAAN,CAAY,+CAA8C,KAAKX,KAAL,CAAWI,OAAQ,EAA7E,EAAgFI,IAAhF,EACKI,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxB,eAAKC,QAAL,CAAc;AAAEV,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH;AACJ,OALL,EAMKW,KANL,CAMWC,GAAG,IAAI,KAAKF,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd,CANlB;AAQH,KA5BgC;;AAAA,SAqDjCa,UArDiC,GAqDpB,MAAM;AACf,WAAKH,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACH,KAvDgC;;AAAA,SA2DjCa,aA3DiC,GA2DjBC,KAAK,IAAI;AAErB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;AAEA,WAAKR,QAAL,CAAc;AAAE,SAACM,IAAD,GAAQE;AAAV,OAAd;AACH,KAlEgC;AAAA;;AA8BjC;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAAjB;AAEA,SAAKd,QAAL,CAAc;AAAEX,MAAAA,OAAO,EAAEqB,QAAQ,CAACK;AAApB,KAAd;;AAEA,QAAIL,QAAQ,CAACM,aAAT,IAA0B,QAA9B,EAAwC;AACpC,WAAKhB,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH;;AAED6B,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EATgB,CAWhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAkBDS,EAAAA,MAAM,GAAG;AAAA,wBAEsB,KAAKC,KAF3B;AAAA,UAEGC,MAFH,eAEGA,MAFH;AAAA,UAEWC,MAFX,eAEWA,MAFX;AAIL,UAAMC,eAAe,GAAG,KAAKtC,KAAL,CAAWG,UAAX,KAA0B,QAA1B,GAAqC,SAArC,GAAiD,SAAzE;AAEA,UAAMoC,UAAU,GAAG,KAAKvC,KAAL,CAAWG,UAAX,KAA0B,QAA1B,GAAqC,MAArC,GAA8C,KAAjE;AAEA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEiC,MAAf;AAAuB,MAAA,MAAM,EAAEC,MAA/B;AAAuC,MAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAA/B,CADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,UAAU,EAAE,GAA9B;AAAmCC,QAAAA,SAAS,EAAE,CAAC,EAA/C;AAAmDC,QAAAA,YAAY,EAAE;AAAjE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkF,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE,OAAT;AAAkBM,QAAAA,eAAe,EAAER,eAAnC;AAAoDS,QAAAA,KAAK,EAAE,OAA3D;AAAoEC,QAAAA,MAAM,EAAEV;AAA5E,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+GC,UAA/G,CAAlF,CAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,IAAI,EAAC,yBADT;AAEI,MAAA,KAAK,EAAE,KAAKvC,KAAL,CAAWC,uBAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKkB,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,aAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKiB,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,CADJ,CALJ,EA0BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKnB,KAAL,CAAWK,OAAX,KAAuB,yCAAvB,GAAmE;AAAM,MAAA,KAAK,EAAE;AAAE0C,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAK/C,KAAL,CAAWK,OAA7C,CAAnE,GAAkI;AAAM,MAAA,KAAK,EAAE;AAAE0C,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAK/C,KAAL,CAAWK,OAA3C,CADvI,EAEK,GAFL,EAEU,EAFV,EAGI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAE,KAAKE,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKQ,KAAKP,KAAL,CAAWG,UAAX,IAAyB,QAAzB,GACA;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,KAAK,EAAE;AAAE8C,QAAAA,UAAU,EAAE,SAAd;AAAyBD,QAAAA,MAAM,EAAE;AAAjC,OAA/C;AAA6F,MAAA,OAAO,EAAE,MAAM,KAAKjC,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAzB,OAAd,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAEM,EAPd,CA1BJ,CADJ,EAuCI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,MAAM,KAAKS,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd,CAAzB;AAA8D,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM,SAA/E;AAA0F,MAAA,UAAU,EAAE,MAAM,KAAKY,UAAL,EAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCJ,CAFJ;AA4CH;;AAzHgC;;AA2HrC,eAAenB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport JobsModal from '../jobsmodal';\n\n\nimport axios from 'axios';\n\nclass RmUpdateForm extends Component {\n\n    state = {\n        highestlevelOfEducation: '',\n        intendedStudy: '',\n        sub_status: false,\n        user_id: '',\n        message: '',\n        jobsModal: false,\n    }\n\n\n    handleUpdate = () => {\n\n        const data = {\n            highest_level_of_education: this.state.highestlevelOfEducation,\n            field_of_training: this.state.intendedStudy,\n        };\n\n        //make axios request and update\n        axios.post(`http://localhost:5000/subscriptionrm/update/${this.state.user_id}`, data)\n            .then(response => {\n                if (response.status == 200) {\n                    this.setState({ message: 'Subscription details updated successful' })\n                }\n            })\n            .catch(err => this.setState({ message: 'Update failed. Please try again' }))\n\n    }\n\n    //make axios call to api and get data to be edited and store in state\n    // : : \n    componentDidMount() {\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n\n        this.setState({ user_id: userData.id });\n\n        if (userData.sub_status_rm == 'active') {\n            this.setState({sub_status: 'active'})\n        }\n\n        console.log(userData);\n\n        // axios.get(`http://localhost:5000/subscriptionrm/${userData.id}`)\n        //     .then(response => this.setState({\n        //         highestlevelOfEducation: response.data[0].highest_level_of_education,\n        //         intendedStudy: response.data[0].field_of_training,\n        //         sub_status: response.data[0].sub_status\n        //     }))\n        //     .catch(err => console.log(err))\n\n    }\n\n    closeModal = () => {\n        this.setState({jobsModal: false})\n    }\n\n\n\n    changeHandler = event => {\n\n        const name = event.target.name;\n\n        const value = event.target.value;\n\n        this.setState({ [name]: value });\n    }\n\n\n    render() {\n\n        const { isOpen, toggle } = this.props;\n\n        const sub_statusColor = this.state.sub_status === 'active' ? '#97ba0d' : '#e68723';\n\n        const buttonText = this.state.sub_status === 'active' ? 'PAID' : 'PAY';\n\n        return (\n\n            <div>\n                <Modal isOpen={isOpen} toggle={toggle} centered>\n                    <ModalHeader>\n                        <div style={{ float: 'left' }}><p style={{ font: 'verdana', fontSize: 18 }}>Recruitment Management Subscription</p></div>\n                        <div style={{ float: 'right', marginLeft: 300, marginTop: -45, paddingRight: 0 }}><Button style={{ float: 'right', backgroundColor: sub_statusColor, color: 'white', border: sub_statusColor }}>{buttonText}</Button></div>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"highestlevelOfEducation\">Highest Level Of Education</Label>\n                                <Input type=\"text\"\n                                    name=\"highestlevelOfEducation\"\n                                    value={this.state.highestlevelOfEducation}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"intendedStudy\">Field Of Training</Label>\n                                <Input type=\"text\"\n                                    name=\"intendedStudy\"\n                                    value={this.state.intendedStudy}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        {this.state.message === 'Subscription details updated successful' ? <span style={{ color: 'green' }}>{this.state.message}</span> : <span style={{ color: 'red' }}>{this.state.message}</span>}\n                        {' '}{''}\n                        <Button className=\"btn btn-sm btn-info\" onClick={this.handleUpdate}>Update</Button>\n                        {\n                            this.state.sub_status == 'active' ?\n                            <button className=\"btn btn-sm btn-info\" style={{ background: '#21a5e7', border: '#21a5e7' }} onClick={() => this.setState({ jobsModal: !this.state.jobsModal })}>Add Job </button>\n                                : \"\"\n                        }\n                        \n                    </ModalFooter>\n                </Modal>\n                <JobsModal onHide={() => this.setState({ jobsModal: false })} show={this.state.jobsModal} closeModal={() => this.closeModal()} />\n            </div >\n        )\n    }\n}\nexport default RmUpdateForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Stepper from'@material-ui/core/Stepper';import Step from'@material-ui/core/Step';import StepContent from'@material-ui/core/StepContent';import Button from'@material-ui/core/Button';import Paper from'@material-ui/core/Paper';import Typography from'@material-ui/core/Typography';import TimerComponent from'./timer';import{Card}from'react-bootstrap';var Quiz=function Quiz(_ref){var question=_ref.question,handelUserAns=_ref.handelUserAns,submitAns=_ref.submitAns,duration=_ref.duration,setPage=_ref.setPage,maxScore=_ref.maxScore;useEffect(function(){maxScore(question);},[maxScore,question]);var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeStep=_useState2[0],setActiveStep=_useState2[1];var handleNext=function handleNext(){setActiveStep(function(prevActiveStep){return prevActiveStep+1;});};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"container text-center\"},React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\"},React.createElement(Card,{style:{marginLeft:'50%'}},React.createElement(Card.Body,null,React.createElement(Typography,{gutterBottom:true,variant:\"\",component:\"h5\"},\"Number of Questions: \",question?question.length:\"\"),React.createElement(Typography,{gutterBottom:true,variant:\"\",component:\"h6\"},React.createElement(TimerComponent,{duration:duration,setPage:setPage}))))),React.createElement(\"br\",null)),React.createElement(\"div\",{className:\"container\",style:{background:'#53A6E7',width:'100%'}},React.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:{background:'red',width:'100%'}},React.createElement(Card,{style:{width:'100%'}},React.createElement(Card.Body,null,React.createElement(Stepper,{activeStep:activeStep},question?question.map(function(q){return React.createElement(Step,{key:q.question},React.createElement(StepContent,{style:{fontSize:'20px'}},q.question),React.createElement(StepContent,null,React.createElement(\"input\",{type:\"hidden\",value:q.question}),React.createElement(Typography,null,q.options.map(function(a){var questionOptions;if(q.correct_ans.length>1){questionOptions=React.createElement(\"div\",null,React.createElement(\"input\",{type:\"checkbox\",value:a,\"data-score\":q.score,onChange:handelUserAns}),\" \",a);}else{questionOptions=React.createElement(\"div\",null,React.createElement(\"input\",{type:\"radio\",name:\"ans\",value:a,\"data-score\":q.score,\"data-ans\":q.correct_ans[0],onChange:handelUserAns}),\" \",a);}return questionOptions;})),React.createElement(\"div\",{className:\"\"},React.createElement(\"div\",null,React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleNext,className:\"\",id:activeStep},activeStep===(question?question.length-1:\"\")?React.createElement(\"span\",{onClick:function onClick(){return submitAns();}},\"Finish\"):'Next')))));}):\"\"),activeStep===question?question.length&&React.createElement(Paper,{square:true,elevation:0,className:\"\"},React.createElement(Typography,null,\"All steps completed - you 're finished\"),React.createElement(Button,{className:\"\",color:\"primary\",variant:\"contained\",onClick:submitAns,id:\"submit\"},\"submit Ans\")):\"\"))))));};export default Quiz;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/ind_dashboard_components/exercises/quiz.js"],"names":["React","useState","useEffect","Stepper","Step","StepContent","Button","Paper","Typography","TimerComponent","Card","Quiz","question","handelUserAns","submitAns","duration","setPage","maxScore","activeStep","setActiveStep","handleNext","prevActiveStep","marginLeft","length","background","width","map","q","fontSize","options","a","questionOptions","correct_ans","score"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport TimerComponent from './timer';\nimport { Card } from 'react-bootstrap';\n\n\nconst Quiz = ({ question, handelUserAns, submitAns, duration, setPage, maxScore }) => {\n\n    useEffect(() => {\n        maxScore(question)\n\n    }, [maxScore,question])\n\n    const [activeStep, setActiveStep] = useState(0);\n\n\n\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n\n    };\n\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"container text-center\">\n                    <div className=\"d-flex justify-content-center align-items-center\">\n                        <Card style={{ marginLeft: '50%' }}>\n                            <Card.Body>\n                                {/* <span style={{ fontSize: '18px', fontWeight: 'bolder' }}>Number of Questions: {question ? question.length : \"\"}  */}\n                                <Typography gutterBottom variant=\"\" component=\"h5\">\n                                    Number of Questions: {question ? question.length : \"\"}\n                                    {/* </span> */}\n                                </Typography>\n                                <Typography gutterBottom variant=\"\" component=\"h6\">\n                                    <TimerComponent duration={duration} setPage={setPage} />\n                                </Typography>\n                            </Card.Body>\n                        </Card>\n                    </div><br />\n                </div>\n                <div className=\"container\" style={{ background: '#53A6E7', width: '100%' }}>\n                    <div className=\"d-flex justify-content-center align-items-center\" style={{ background: 'red', width: '100%' }}>\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                <Stepper activeStep={activeStep}>\n                                    {question ? question.map((q) => {\n                                        return <Step key={q.question}>\n                                            <StepContent style={{ fontSize: '20px' }}>{q.question}</StepContent>\n                                            <StepContent>\n                                                <input type=\"hidden\" value={q.question} />\n                                                <Typography>\n                                                    {q.options.map(a => {\n                                                        let questionOptions;\n                                                        if (q.correct_ans.length > 1) {\n                                                            questionOptions = <div>\n                                                                <input type=\"checkbox\" value={a} data-score={q.score} onChange={handelUserAns} /> {a}\n                                                            </div>\n                                                        } else {\n                                                            questionOptions = <div>\n                                                                <input type=\"radio\" name=\"ans\" value={a} data-score={q.score} data-ans={q.correct_ans[0]} onChange={handelUserAns} /> {a}\n                                                            </div>;\n                                                        }\n\n                                                        return questionOptions;\n                                                    })}</Typography>\n                                                <div className=\"\">\n                                                    <div>\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"primary\"\n                                                            onClick={handleNext}\n                                                            className=\"\"\n                                                            id={activeStep}\n                                                        >\n                                                            {activeStep === (question ? question.length - 1 : \"\") ? <span onClick={() => submitAns()}>Finish</span> : 'Next'}\n                                                        </Button>\n                                                    </div>\n                                                </div>\n                                            </StepContent>\n                                        </Step>\n                                    }\n  \n                                    ) : \"\"}\n                                </Stepper>\n                                {activeStep === question ? question.length && (\n                                    <Paper square elevation={0} className=\"\">\n                                        <Typography>All steps completed - you &apos;re finished</Typography>\n\n                                        <Button\n                                            className=\"\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={submitAns}\n                                            id=\"submit\"\n                                        >\n                                            submit Ans\n                                        </Button>\n                                    </Paper>\n                                ) : \"\"}\n                            </Card.Body>\n                        </Card>\n                        {/* <span style={{ fontSize: '18px', color: '#E68824' }}>{countDown} Seconds left</span> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{AuthContext}from\"../AuthContext\";import{Link}from\"react-router-dom\";import{Button,OverlayTrigger,Form,Container,Row,Col}from\"react-bootstrap\";import axios from\"axios\";import toast from'../util/toast';var CorporateLogin=/*#__PURE__*/function(_Component){_inherits(CorporateLogin,_Component);function CorporateLogin(props){var _this;_classCallCheck(this,CorporateLogin);_this=_possibleConstructorReturn(this,_getPrototypeOf(CorporateLogin).call(this,props));_this.onChangeEmail=_this.onChangeEmail.bind(_assertThisInitialized(_this));_this.onChangePassword=_this.onChangePassword.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.state={email:'',password:''};return _this;}_createClass(CorporateLogin,[{key:\"onChangeEmail\",value:function onChangeEmail(e){this.setState({email:e.target.value});}},{key:\"onChangePassword\",value:function onChangePassword(e){this.setState({password:e.target.value});}},{key:\"onSubmit\",value:function onSubmit(e){}},{key:\"render\",value:function render(){var _this2=this;var formStyle={'border':'1px solid skyblue','border-radius':'5px','margin-top':'60px'};return React.createElement(AuthContext.Consumer,null,function(context){return React.createElement(\"div\",null,React.createElement(Row,null,React.createElement(Col,{className:\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\"}),React.createElement(Col,null,React.createElement(Container,{style:formStyle},React.createElement(\"br\",null),React.createElement(\"label\",{style:{'fontWeight':'bold'}},\"Sign In to your Corporate Account\"),React.createElement(Form,null,React.createElement(Form.Group,{controlId:\"formBasicEmail\"},React.createElement(Form.Label,null,\"Email address:\"),React.createElement(Form.Control,{type:\"email\",required:true,placeholder:\"Enter email\",onChange:_this2.onChangeEmail,value:_this2.state.email}),React.createElement(Form.Text,{className:\"text-muted\"},\"We'll never share your email with anyone else.\")),React.createElement(Form.Group,{controlId:\"formBasicPassword\"},React.createElement(Form.Label,null,\"Password:\"),React.createElement(Form.Control,{type:\"password\",required:true,placeholder:\"Password\",onChange:_this2.onChangePassword,value:_this2.state.password})),React.createElement(Button,{variant:\"primary\",type:\"submit\",onClick:function onClick(e){e.preventDefault();var Corporate_User={email:_this2.state.email,password:_this2.state.password};//Make a post to the api route for login\naxios.post('http://localhost:5000/corporates/login_corporate_email',Corporate_User).then(function(res){//console.log(res.data[0].password);\nif(res.data.length>0){var cid=res.data[0]._id;var cuser_name=res.data[0].org_name;var cuser_email=res.data[0].email;var cuser_phone=res.data[0].phone;var cuser_doi=res.data[0].doi;var cuser_country=res.data[0].country;var cuser_state=res.data[0].state;var cuser_status=res.data[0].status;var org_type=res.data[0].org_type;console.log(res.data[0]);console.log(Corporate_User.password);var corp_user_data={email:res.data[0].email,hash_password:res.data[0].password,normal_password:Corporate_User.password};axios.post('http://localhost:5000/corporates/login_corporate',corp_user_data).then(function(res){console.log(res.data);if(res.data==1){// alert(\"Corporate Login Successfull\");\ntoast(\"Corporate Login Successfull\",'success');//uPDATE CONTEXT AUTH DATA HERE AND NAVIGATE TO THE DASHBOARD\ncontext.setUserAuthData(true);var Global_CorpUser={isLogged:true,id:cid,email:cuser_email,name:cuser_name,phone:cuser_phone,dos:cuser_doi,country:cuser_country,state:cuser_state,status:cuser_status,org_type:org_type};sessionStorage.setItem(\"key\",JSON.stringify(Global_CorpUser));console.log(JSON.parse(sessionStorage.getItem(\"key\")));window.location=\"/frontier\";}else{// alert(\"Password wrong, please try again\");\ntoast(\"Password wrong, please try again\",'error');}}).catch(function(error){return toast(\"Error is: \\\"  \".concat(error),'error');});}else{// alert(\"Your email address is not correct\");\ntoast(\"Your email address is not incorrect\",'warn');}}).catch(function(error){return toast(\"Error is:  \".concat(error),'error');});//Reset the textfields to show blank by emptying the state\n_this2.setState({email:'',password:''});}},\"Login\"),React.createElement(\"br\",null),React.createElement(\"label\",null,\"Forgot password? \",React.createElement(Link,{to:\"/forgotPassword\"},\"Reset\")),React.createElement(\"br\",null)),React.createElement(\"br\",null))),React.createElement(Col,{className:\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\"})));});}}]);return CorporateLogin;}(Component);export{CorporateLogin as default};","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/corporate_login.js"],"names":["React","Component","AuthContext","Link","Button","OverlayTrigger","Form","Container","Row","Col","axios","toast","CorporateLogin","props","onChangeEmail","bind","onChangePassword","onSubmit","state","email","password","e","setState","target","value","formStyle","context","preventDefault","Corporate_User","post","then","res","data","length","cid","_id","cuser_name","org_name","cuser_email","cuser_phone","phone","cuser_doi","doi","cuser_country","country","cuser_state","cuser_status","status","org_type","console","log","corp_user_data","hash_password","normal_password","setUserAuthData","Global_CorpUser","isLogged","id","name","dos","sessionStorage","setItem","JSON","stringify","parse","getItem","window","location","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { AuthContext } from \"../AuthContext\";\nimport {Link} from \"react-router-dom\";\nimport {Button, OverlayTrigger, Form, Container, Row, Col} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport toast from '../util/toast';\n\n\nexport default class CorporateLogin extends Component{\n    constructor(props){\n        super(props);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            email:'',\n            password:''\n        }\n    }\n\n    onChangeEmail(e){\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e){\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    onSubmit(e){\n        \n    }\n\n    \n    render(){\n        const formStyle = {\n            'border':'1px solid skyblue',\n            'border-radius':'5px',\n            'margin-top':'60px'\n        };\n        return (\n            <AuthContext.Consumer>\n                {\n                    (context) => (\n\n                <div>\n                    <Row>\n                        <Col className=\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\" ></Col>\n                        <Col>\n                            <Container style={formStyle}>\n                                    <br/>\n                                        <label style={{'fontWeight':'bold'}}>Sign In to your Corporate Account</label>\n                                        <Form>\n                                            <Form.Group controlId=\"formBasicEmail\">\n                                                <Form.Label>Email address:</Form.Label>\n                                                <Form.Control type=\"email\" required placeholder=\"Enter email\"  onChange={this.onChangeEmail} value={this.state.email}/>\n                                                <Form.Text className=\"text-muted\">\n                                                We'll never share your email with anyone else.\n                                                </Form.Text>\n                                            </Form.Group>\n                                            <Form.Group controlId=\"formBasicPassword\">\n                                                <Form.Label>Password:</Form.Label>\n                                                <Form.Control type=\"password\" required placeholder=\"Password\" onChange={this.onChangePassword} value={this.state.password} />\n                                            </Form.Group>\n                                            <Button variant=\"primary\" type=\"submit\" onClick={(e) => {\n                                                e.preventDefault();\n\n                                                const Corporate_User = {\n                                                    email: this.state.email,\n                                                    password: this.state.password\n                                                }\n\n                                        //Make a post to the api route for login\n                                        axios.post('http://localhost:5000/corporates/login_corporate_email', Corporate_User)\n                                            .then(res => {\n                                                //console.log(res.data[0].password);\n                                                if (res.data.length > 0) {\n                                                    const cid = res.data[0]._id;\n                                                    const cuser_name = res.data[0].org_name;\n                                                    const cuser_email = res.data[0].email;\n                                                    const cuser_phone = res.data[0].phone;\n                                                    const cuser_doi = res.data[0].doi;\n                                                    const cuser_country = res.data[0].country;\n                                                    const cuser_state = res.data[0].state;\n                                                    const cuser_status = res.data[0].status;\n                                                    const org_type = res.data[0].org_type\n\n                                                    console.log(res.data[0]);\n                                                    console.log(Corporate_User.password);\n                                                    const corp_user_data = {\n                                                        email: res.data[0].email,\n                                                        hash_password: res.data[0].password,\n                                                        normal_password: Corporate_User.password\n                                                    }\n                                                    axios.post('http://localhost:5000/corporates/login_corporate', corp_user_data)\n                                                        .then(res => {\n                                                            console.log(res.data);\n                                                            if (res.data == 1) {\n                                                                // alert(\"Corporate Login Successfull\");\n                                                                toast(\"Corporate Login Successfull\",'success')\n                                                                //uPDATE CONTEXT AUTH DATA HERE AND NAVIGATE TO THE DASHBOARD\n                                                                context.setUserAuthData(true);\n\n                                                                \n                                                                const Global_CorpUser = {\n                                                                    isLogged: true,\n                                                                    id: cid,\n                                                                    email: cuser_email,\n                                                                    name: cuser_name,\n                                                                    phone: cuser_phone,\n                                                                    dos: cuser_doi,\n                                                                    country: cuser_country,\n                                                                    state: cuser_state,\n                                                                    status: cuser_status,\n                                                                    org_type: org_type\n\n                                                                }\n\n                                                                sessionStorage.setItem(\"key\", JSON.stringify(Global_CorpUser));\n                                                                console.log(JSON.parse(sessionStorage.getItem(\"key\")));\n\n                                                                window.location = \"/frontier\";\n                                                            } else {\n                                                                // alert(\"Password wrong, please try again\");\n                                                                toast(\"Password wrong, please try again\",'error')\n                                                            }\n                                                        })\n                                                        .catch(error => toast(`Error is: \"  ${error}`, 'error'));\n                                                } else {\n                                                    // alert(\"Your email address is not correct\");\n                                                    toast(\"Your email address is not incorrect\",'warn')\n                                                }\n                                            })\n                                            .catch(error => toast(`Error is:  ${error}`, 'error'));\n                                                \n\n                                        //Reset the textfields to show blank by emptying the state\n                                        this.setState({\n                                            email: '',\n                                            password: ''\n                                        });\n                                        \n                                            }}>\n                                                Login\n                                                </Button>\n                                                <br/>\n                                            \n                                            <label>Forgot password? <Link to=\"/forgotPassword\">Reset</Link></label>\n                                            <br/>\n                                        </Form>\n                                        <br/>\n                                    </Container>\n                                </Col>\n                        <Col className=\"col-xl-4 col-lg-4 col-md-3 col-sm-2 col-1\" ></Col>\n                    </Row>\n                    </div>\n                )\n            }\n            </AuthContext.Consumer>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
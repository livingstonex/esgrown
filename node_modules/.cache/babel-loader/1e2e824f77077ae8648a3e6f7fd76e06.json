{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from'axios';import{Card,CardActionArea,Typography,CardContent,CardActions}from'@material-ui/core';import{Spinner}from'react-bootstrap';import QuestionComponentRM from'./questionscomponent';import QuestionComponentLM from'./questionscomponent';import toast from'../../../util/toast';var Exercises=function Exercises(_ref){var setRmExercisePage=_ref.setRmExercisePage;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),spinner=_useState2[0],setSpinner=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),RMExercise=_useState4[0],setRMExercise=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),RMSubStatus=_useState6[0],setRMSubStatus=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),LMExercise=_useState8[0],setLMExercise=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),LMSubStatus=_useState10[0],setLMSubStatus=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),questions=_useState12[0],setQuestions=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),displayQuestions=_useState14[0],setDisplayQuestions=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),duration=_useState16[0],setDuration=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),exerciseId=_useState18[0],setExerciseId=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),currentService=_useState20[0],setCurrentService=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),qspinner=_useState22[0],setQSpinner=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),user=_useState24[0],setUser=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),corpExerciseOwner=_useState26[0],setCorpExerciseOwner=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),exId=_useState28[0],setExId=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),disabled=_useState30[0],setDisabled=_useState30[1];//get all exercises and filter for rm and lm\nuseEffect(function(){var user=JSON.parse(sessionStorage.getItem('key'));if(user.sub_status_rm==='active'&&user.jobs.length!=0){user.jobs.map(function(item){axios.get(\"http://localhost:5000/excercise/rm/\".concat(item.job_id)).then(function(res){if(res.data.length!==0){setExId(res.data);}}).catch(function(err){return console.log(err);});});}// //rm exercises\n// axios.get(`http://localhost:5000/excercise/rm/`)\n//     .then(res => {\n//         console.log(res.data)\n//         // const rm = res.data.filter((r) => {\n//         //     return r.service === \"RM\"\n//         // })\n//         // const lm = res.data.filter(l => {\n//         //     return l.service === 'LM'\n//         // })\n//         // setRMExercise(rm)\n//         // setLMExercise(lm)\n//         // setSpinner(false)\n//         // setCorpExerciseOwner(res.data.corp_id);\n//         // setJobID(res.data.job_id)\n//     })\n//     .catch(err => console.log(err));\n//lm exercise\naxios.get(\"http://localhost:5000/excercise\").then(function(res){var lm=res.data.filter(function(r){return r.service===\"LM\";});setLMExercise(lm);setSpinner(false);}).catch(function(err){return console.log(err);});},[]);// console.log(corpExerciseOwner);\n//check service the user is subscribed to \nuseEffect(function(){//lm sub status\nvar userData=JSON.parse(sessionStorage.getItem('key'));setUser(userData);setLMSubStatus(userData.sub_status_lm);setRMSubStatus(userData.sub_status_rm);},[]);var getQuestions=function getQuestions(e){var id=e.target.id;setExerciseId(id);setCurrentService(e.target.getAttribute('data-service'));setDuration(e.target.getAttribute('data-duration'));setDisplayQuestions(true);};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col col-lg-12 col-sm-6\"},React.createElement(\"br\",null),React.createElement(Card,{className:\"\"},React.createElement(CardContent,null,React.createElement(Typography,{gutterBottom:true,variant:\"\",component:\"h5\"},\"Recruitment Management - \",\"\",\" \",user&&user.sub_status_rm==='active'?React.createElement(\"span\",{style:{color:'green'}},RMSubStatus):React.createElement(\"span\",{style:{color:'red'}},RMSubStatus),React.createElement(\"hr\",null)),React.createElement(\"div\",{className:\"d-flex justify-content-around\"},mapJobs())),React.createElement(CardActions,{style:{background:'#e9ecef'}},React.createElement(\"small\",null,\"Note: You are only allowed to take a test only once\")))),React.createElement(\"div\",{className:\"col col-lg-12 col-sm-6\"},React.createElement(\"br\",null),React.createElement(Card,{className:\"\"},React.createElement(CardContent,null,React.createElement(Typography,{gutterBottom:true,variant:\"\",component:\"h5\"},\"Leadership Management - \",\"\",\" \",user&&user.sub_status_lm=='active'?React.createElement(\"span\",{style:{color:'green'}},LMSubStatus):React.createElement(\"span\",{style:{color:'red'}},LMSubStatus),React.createElement(\"hr\",null)),spinner?React.createElement(Spinner,{animation:\"grow\"}):LMSubStatus===\"active\"?LMExercise.map(function(r){return React.createElement(\"ul\",null,React.createElement(\"li\",{className:\"ui floating message\",\"data-service\":\"LM\",\"data-duration\":r.duration,onClick:getQuestions,id:r._id,style:{cursor:'pointer',fontSize:'18px',fontStyle:'italic'}},r.title,React.createElement(\"br\",null),React.createElement(\"small\",null,\"Duration: \",r.duration,\" minutes\")));}):LMExercise.map(function(r){return React.createElement(\"ul\",null,React.createElement(\"li\",{id:r._id,style:{cursor:'pointer'}},r.title));})),React.createElement(CardActions,{style:{background:'#e9ecef'}},React.createElement(\"small\",null,\"Note: You are only allowed to take a test only once\")))),displayQuestions&&currentService=='LM'?React.createElement(\"div\",{style:{marginBottom:'200px',marginTop:'50px'}},React.createElement(QuestionComponentLM,{duration:duration,exerciseId:exerciseId,service:currentService,corpExerciseOwner:corpExerciseOwner})):'')));function mapJobs(){return exId.map(function(item){return React.createElement(Card,{className:\"mt-5\",style:{width:'35%'}},React.createElement(CardActionArea,null,React.createElement(CardContent,null,React.createElement(Typography,{gutterBottom:true,variant:\"\",component:\"p\"},item.title),React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\"},React.createElement(\"div\",{className:\"btn btn-info bt-sm\",onClick:function onClick(){return setRmExercisePage(item);},disabled:{}},\"Take Exercise \")))),React.createElement(CardActions,null));});}};export default Exercises;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/ind_dashboard_components/exercises/exercise.js"],"names":["React","useState","useEffect","axios","Card","CardActionArea","Typography","CardContent","CardActions","Spinner","QuestionComponentRM","QuestionComponentLM","toast","Exercises","setRmExercisePage","spinner","setSpinner","RMExercise","setRMExercise","RMSubStatus","setRMSubStatus","LMExercise","setLMExercise","LMSubStatus","setLMSubStatus","questions","setQuestions","displayQuestions","setDisplayQuestions","duration","setDuration","exerciseId","setExerciseId","currentService","setCurrentService","qspinner","setQSpinner","user","setUser","corpExerciseOwner","setCorpExerciseOwner","exId","setExId","disabled","setDisabled","JSON","parse","sessionStorage","getItem","sub_status_rm","jobs","length","map","item","get","job_id","then","res","data","catch","err","console","log","lm","filter","r","service","userData","sub_status_lm","getQuestions","e","id","target","getAttribute","color","mapJobs","background","_id","cursor","fontSize","fontStyle","title","marginBottom","marginTop","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardActionArea, Typography, CardContent, CardActions } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport QuestionComponentRM from './questionscomponent';\nimport QuestionComponentLM from './questionscomponent';\nimport toast  from '../../../util/toast';\n\n\n\n\n\n\nconst Exercises = ({ setRmExercisePage }) => {\n\n\n\n    const [spinner, setSpinner] = useState(true)\n\n    const [RMExercise, setRMExercise] = useState([]);\n    const [RMSubStatus, setRMSubStatus] = useState('');\n\n    const [LMExercise, setLMExercise] = useState([]);\n    const [LMSubStatus, setLMSubStatus] = useState('');\n\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState(false)\n\n    const [duration, setDuration] = useState('');\n    const [exerciseId, setExerciseId] = useState('');\n    const [currentService, setCurrentService] = useState('')\n    const [qspinner, setQSpinner] = useState(true);\n    const [user, setUser] = useState();\n    const [corpExerciseOwner, setCorpExerciseOwner] = useState();\n    const [exId, setExId] = useState([])\n    const [disabled, setDisabled] = useState(false)\n\n\n\n\n    //get all exercises and filter for rm and lm\n    useEffect(() => {\n\n        const user = JSON.parse(sessionStorage.getItem('key'));\n\n        if (user.sub_status_rm === 'active' && user.jobs.length != 0) {\n\n            user.jobs.map(item => {\n                axios.get(`http://localhost:5000/excercise/rm/${item.job_id}`)\n                    .then(res => {\n                        if (res.data.length !== 0) {\n                            setExId(res.data)\n                        }\n                    }).catch(err => console.log(err))\n            });\n\n\n\n        }\n\n        \n\n\n        // //rm exercises\n        // axios.get(`http://localhost:5000/excercise/rm/`)\n        //     .then(res => {\n        //         console.log(res.data)\n\n        //         // const rm = res.data.filter((r) => {\n        //         //     return r.service === \"RM\"\n        //         // })\n\n        //         // const lm = res.data.filter(l => {\n        //         //     return l.service === 'LM'\n        //         // })\n\n        //         // setRMExercise(rm)\n        //         // setLMExercise(lm)\n        //         // setSpinner(false)\n        //         // setCorpExerciseOwner(res.data.corp_id);\n        //         // setJobID(res.data.job_id)\n        //     })\n        //     .catch(err => console.log(err));\n\n\n        //lm exercise\n        axios.get(`http://localhost:5000/excercise`)\n            .then(res => {\n\n                const lm = res.data.filter((r) => {\n                    return r.service === \"LM\"\n                })\n                setLMExercise(lm)\n                setSpinner(false)\n            })\n            .catch(err => console.log(err))\n\n\n\n    }, []);\n    // console.log(corpExerciseOwner);\n\n    //check service the user is subscribed to \n    useEffect(() => {\n\n        //lm sub status\n        const userData = JSON.parse(sessionStorage.getItem('key'))\n        setUser(userData);\n\n        setLMSubStatus(userData.sub_status_lm);\n\n        setRMSubStatus(userData.sub_status_rm);\n\n\n    }, [])\n\n    const getQuestions = (e) => {\n\n        const id = e.target.id;\n\n        setExerciseId(id)\n        setCurrentService(e.target.getAttribute('data-service'));\n        setDuration(e.target.getAttribute('data-duration'));\n        setDisplayQuestions(true)\n\n    }\n \n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col col-lg-12 col-sm-6\">\n                        <br />\n                        <Card className=\"\">\n\n                            <CardContent>\n                                <Typography gutterBottom variant=\"\" component=\"h5\">\n                                    Recruitment Management - {\"\"} {user && user.sub_status_rm === 'active' ? <span style={{ color: 'green' }}>{RMSubStatus}</span> : <span style={{ color: 'red' }}>{RMSubStatus}</span>}\n                                    <hr />\n                                </Typography>\n                                {/* map through jobs and display cards  */}\n                                <div className=\"d-flex justify-content-around\">\n                                    { mapJobs() }\n                                </div>\n                            </CardContent>\n\n\n                            <CardActions style={{ background: '#e9ecef' }}>\n                                <small>Note: You are only allowed to take a test only once</small>\n                            </CardActions>\n                        </Card>\n                    </div>\n                    {/* {displayQuestions && currentService == 'RM' ?\n                        <div style={{ marginBottom: '200px', marginTop: '50px' }}>\n                            <QuestionComponentRM duration={duration} exerciseId={exerciseId} service={currentService} corpExerciseOwner={corpExerciseOwner} jobID={JobID} />\n                        </div>\n                        : ''} */}\n\n\n                    <div className=\"col col-lg-12 col-sm-6\">\n                        <br />\n                        <Card className=\"\">\n\n                            <CardContent>\n                                <Typography gutterBottom variant=\"\" component=\"h5\">\n                                    Leadership Management - {\"\"} {user && user.sub_status_lm == 'active' ? <span style={{ color: 'green' }}>{LMSubStatus}</span> : <span style={{ color: 'red' }}>{LMSubStatus}</span>}\n                                    <hr />\n                                </Typography>\n                                {spinner ? <Spinner animation=\"grow\" /> : LMSubStatus === \"active\" ? LMExercise.map(r => {\n                                    return (\n                                        <ul>\n                                            <li className={`ui floating message`} data-service=\"LM\" data-duration={r.duration} onClick={getQuestions} id={r._id} style={{ cursor: 'pointer', fontSize: '18px', fontStyle: 'italic' }}>{r.title}<br /><small>Duration: {r.duration} minutes</small></li>\n                                        </ul>\n                                    );\n                                }) : LMExercise.map(r => {\n                                    return (\n                                        <ul>\n                                            <li id={r._id} style={{ cursor: 'pointer' }}>{r.title}</li>\n                                        </ul>\n                                    );\n                                })}\n                            </CardContent>\n\n\n                            <CardActions style={{ background: '#e9ecef' }}>\n                                <small>Note: You are only allowed to take a test only once</small>\n                            </CardActions>\n                        </Card>\n                    </div>\n                    {displayQuestions && currentService == 'LM' ?\n                        <div style={{ marginBottom: '200px', marginTop: '50px' }}>\n                            <QuestionComponentLM duration={duration} exerciseId={exerciseId} service={currentService} corpExerciseOwner={corpExerciseOwner} />\n                        </div>\n                        : ''}\n\n                </div>\n            </div>\n\n        </>\n\n    );\n\n    function mapJobs() {\n        return exId.map(item => (\n                    <Card className=\"mt-5\" style={{ width: '35%' }}>\n                        <CardActionArea>\n                            <CardContent >\n                                <Typography gutterBottom variant=\"\" component=\"p\">\n                                    {item.title}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <div className=\"btn btn-info bt-sm\" onClick={() => setRmExercisePage(item)} disabled={{}} >Take Exercise </div>\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                        </CardActions>\n                    </Card>\n                ));\n    }\n\n\n\n}\nexport default Exercises;"]},"metadata":{},"sourceType":"module"}
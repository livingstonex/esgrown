{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/components/content_log.js\";\nimport React from 'react';\nimport { Spinner, Accordion, Button, Card } from 'react-bootstrap';\n\nconst Contentlog = props => {\n  const data = props.data;\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    style: {\n      padding: '5px',\n      height: '800px',\n      overflow: 'scroll',\n      marginRight: '20px'\n    },\n    className: \"col col-lg-5 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.title), props.spinner ? React.createElement(Spinner, {\n    animation: \"grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Accordion, {\n    defaultActiveKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, data.map(data => {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, data.title, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      style: {\n        fontSize: '13px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Published: \", data.is_published ? \"true\" : \"false\"))), React.createElement(Accordion.Collapse, {\n      eventKey: data._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, data.content, data.media ? data.media.split(';')[0].split(':')[1].split('/')[0] == \"image\" ? React.createElement(\"img\", {\n      src: data.media,\n      style: {\n        height: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : React.createElement(\"video\", {\n      src: data.media,\n      controls: true,\n      style: {\n        height: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : '')));\n  }))));\n};\n\nexport default Contentlog;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/admin/services/components/content_log.js"],"names":["React","Spinner","Accordion","Button","Card","Contentlog","props","data","padding","height","overflow","marginRight","textAlign","title","spinner","map","_id","fontSize","is_published","content","media","split"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAiD,iBAAjD;;AAKA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,QAElBC,IAFkB,GAETD,KAFS,CAElBC,IAFkB;AAI1B,SACI,0CACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,MAAM,EAAE,OAA1B;AAAmCC,MAAAA,QAAQ,EAAE,QAA7C;AAAuDC,MAAAA,WAAW,EAAE;AAApE,KAAb;AAA2F,IAAA,SAAS,EAAC,uBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCN,KAAK,CAACO,KAA3C,CADJ,EAEKP,KAAK,CAACQ,OAAN,GAAgB,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,GACG,oBAAC,SAAD;AAAW,IAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,IAAI,CAACQ,GAAL,CAASR,IAAI,IAAI;AACd,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEJ,MAAtB;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAA6C,MAAA,QAAQ,EAAEI,IAAI,CAACS,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACM,KADV,EACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,EACsB;AAAO,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgDV,IAAI,CAACW,YAAL,GAAoB,MAApB,GAA6B,OAA7E,CADtB,CADJ,CADJ,EAMI,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAEX,IAAI,CAACS,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,IAAI,CAACY,OADV,EAGQZ,IAAI,CAACa,KAAL,GAAab,IAAI,CAACa,KAAL,CAAWC,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,EAAyBA,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCA,KAAvC,CAA6C,GAA7C,EAAkD,CAAlD,KAAwD,OAAxD,GAAkE;AAAK,MAAA,GAAG,EAAEd,IAAI,CAACa,KAAf;AAAsB,MAAA,KAAK,EAAE;AAAEX,QAAAA,MAAM,EAAE;AAAV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlE,GAAyH;AAAO,MAAA,GAAG,EAAEF,IAAI,CAACa,KAAjB;AAAwB,MAAA,QAAQ,MAAhC;AAAiC,MAAA,KAAK,EAAE;AAACX,QAAAA,MAAM,EAAC;AAAR,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtI,GAA0M,EAHlN,CADJ,CANJ,CADJ;AAkBH,GAnBA,CADL,CAHR,CADJ,CADJ;AA8BH,CAlCD;;AAmCA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport { Spinner, Accordion, Button, Card } from 'react-bootstrap';\n\n\n\n\nconst Contentlog = (props) => {\n\n    const { data } = props\n\n    return (\n        <>\n            <Card style={{ padding: '5px', height: '800px', overflow: 'scroll', marginRight: '20px' }} className=\"col col-lg-5 col-sm-6\">\n                <h6 style={{ textAlign: 'center' }}>{props.title}</h6>\n                {props.spinner ? <Spinner animation=\"grow\" /> :\n                    <Accordion defaultActiveKey=\"0\">\n                        {data.map(data => {\n                            return (\n                                <Card>\n                                    <Card.Header>\n                                        <Accordion.Toggle as={Button} variant=\"link\" eventKey={data._id}>\n                                            {data.title}<br /><small style={{ fontSize: '13px' }}>Published: {data.is_published ? \"true\" : \"false\"}</small>\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={data._id}>\n                                        <Card.Body>\n                                            {data.content}\n                                            {\n                                                data.media ? data.media.split(';')[0].split(':')[1].split('/')[0] == \"image\" ? <img src={data.media} style={{ height: '100px' }} /> : <video src={data.media} controls style={{height:'100px'}}></video>: ''\n                                            }\n                                        </Card.Body>\n                                        \n                                    </Accordion.Collapse>\n                                </Card>\n                            )\n                        })}\n                    </Accordion>}\n            </Card>\n        </>\n    );\n}\nexport default Contentlog;\n"]},"metadata":{},"sourceType":"module"}
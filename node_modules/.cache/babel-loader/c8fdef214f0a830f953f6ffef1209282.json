{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Modal,Form,Button}from'react-bootstrap';import axios from'axios';import toast from'../../../../util/toast';var JobsModal=function JobsModal(_ref){var show=_ref.show,onHide=_ref.onHide,closeModal=_ref.closeModal;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),disabled=_useState4[0],setDisabled=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),jobID=_useState8[0],setJobID=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),deadline=_useState10[0],setDeadLine=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),loading=_useState12[0],setLoading=_useState12[1];useEffect(function(){//get user\nvar user=JSON.parse(sessionStorage.getItem('key'));setUser(user);console.log(user);//make api call to get all jobs and set in state\naxios.get(\"http://localhost:5000/jobs\").then(function(res){if(res.data.length>0){setData(res.data);}console.log(res.data);}).catch(function(err){return console.log(err);});//check to see if user has applied for max jobs allowed\naxios.get(\"http://localhost:5000/applications/check/\".concat(user.id)).then(function(res){if(res.data.jobs_applied_for.length>1){setDisabled(true);}console.log(res.data.jobs_applied_for);}).catch(function(err){return console.log(err);});},[]);var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),displayJobs=_useState14[0],setDisplayJobs=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),desc=_useState16[0],setDesc=_useState16[1];var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),companiesAppliedTo=_useState18[0],setCompaniesAppliedTo=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),jobTitle=_useState20[0],setJobTitle=_useState20[1];var toggleJobs=function toggleJobs(e){setCompaniesAppliedTo(e.target.value);data.map(function(job){if(job.company_name==e.target.value){setDisplayJobs(job.jobs);}});};var postToServer=function postToServer(){var postData={applicant_id:user.id,applicant_name:user.name,applicant_email:user.email,jobs_applied_for:{company:companiesAppliedTo,job_title:jobTitle,job_id:jobID,deadline:deadline}};try{setLoading(true);axios.post(\"http://localhost:5000/applications/add\",postData).then(function(res){setLoading(false);toast(res.data.msg,'info');closeModal();var user=JSON.parse(sessionStorage.getItem('key'));user.jobs=[{job_title:jobTitle,job_id:jobID}];sessionStorage.setItem('key',JSON.stringify(user));}).catch(function(err){setLoading(false);console.log(err);});}catch(e){console.log(e);}};var getDesc=function getDesc(e){// job.title / job.job_id / job.dead_line\nvar splitedValue=e.target.value.split('/');var title=splitedValue[0];var jobid=splitedValue[1];var deadline=splitedValue[2];setJobID(jobid);setDeadLine(deadline);setJobTitle(title);displayJobs.map(function(job){if(job.title==title){setDesc(job.desc);}});};return React.createElement(Modal,{show:show,onHide:onHide,centered:true,style:{}},React.createElement(Modal.Body,{style:{background:'#fafafa',height:'340px',width:'550px'}},React.createElement(\"h5\",null,\"Get A Job\"),React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"mb-3\",style:{}},React.createElement(Form.Control,{as:\"select\",onChange:toggleJobs,disabled:disabled},React.createElement(\"option\",null,\"where you would like to work\"),data.map(function(job){return React.createElement(\"option\",{name:job.company_name,value:job.company_name},job.company_name);}))),React.createElement(\"div\",{className:\"mb-3\"},React.createElement(Form.Control,{as:\"select\",onChange:getDesc,disabled:disabled},React.createElement(\"option\",null,\"what would you like to work as\"),displayJobs?displayJobs.map(function(job){return React.createElement(\"option\",{value:\"\".concat(job.title,\"/\").concat(job.job_id,\"/\").concat(job.dead_line)},job.title);}):\"\")),React.createElement(\"div\",{className:\"mb-3\"},React.createElement(Form.Control,{as:\"textarea\",rows:\"4\",value:desc?desc:\"\",disabled:disabled})),React.createElement(Button,{size:\"sm\",style:{background:'#21a5e7',border:'#21a5e7'},block:true,onClick:postToServer,disabled:loading},\"Apply \",loading?React.createElement(\"i\",{className:\"fa fa-spinner fa-spin\"}):\"\"))),React.createElement(Modal.Footer,{style:{background:'#dbdee0',width:'550px'}},React.createElement(\"small\",null,\"Note: you can only add a maximum of two jobs\")),React.createElement(Modal.Footer,{style:{background:'#dbdee0',width:'550px'}}));};export default JobsModal;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/ind_dashboard_components/subscription-pages/rm/jobsmodal.js"],"names":["React","useState","useEffect","Modal","Form","Button","axios","toast","JobsModal","show","onHide","closeModal","data","setData","disabled","setDisabled","user","setUser","jobID","setJobID","deadline","setDeadLine","loading","setLoading","JSON","parse","sessionStorage","getItem","console","log","get","then","res","length","catch","err","id","jobs_applied_for","displayJobs","setDisplayJobs","desc","setDesc","companiesAppliedTo","setCompaniesAppliedTo","jobTitle","setJobTitle","toggleJobs","e","target","value","map","job","company_name","jobs","postToServer","postData","applicant_id","applicant_name","name","applicant_email","email","company","job_title","job_id","post","msg","setItem","stringify","getDesc","splitedValue","split","title","jobid","background","height","width","dead_line","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport toast from '../../../../util/toast';\n\n\nconst JobsModal = ({ show, onHide, closeModal}) => {\n\n    const [data, setData] = useState([]);\n    const [disabled, setDisabled] = useState(false)\n    const [user, setUser] = useState();\n    const [jobID, setJobID] = useState('');\n    const [deadline, setDeadLine] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        //get user\n        const user = JSON.parse(sessionStorage.getItem('key'))\n        setUser(user)\n        console.log(user)\n\n        //make api call to get all jobs and set in state\n        axios.get(`http://localhost:5000/jobs`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    setData(res.data)\n                }\n                console.log(res.data)\n            })\n            .catch(err => console.log(err));\n\n\n        //check to see if user has applied for max jobs allowed\n        axios.get(`http://localhost:5000/applications/check/${user.id}`)\n            .then(res => {\n                if (res.data.jobs_applied_for.length > 1) {\n                    setDisabled(true)\n                }\n                console.log(res.data.jobs_applied_for);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n\n    const [displayJobs, setDisplayJobs] = useState('')\n    const [desc, setDesc] = useState('')\n\n    const [companiesAppliedTo, setCompaniesAppliedTo] = useState('')\n    const [jobTitle, setJobTitle] = useState('')\n\n\n    const toggleJobs = (e) => {\n\n        setCompaniesAppliedTo(e.target.value);\n\n        data.map((job) => {\n            if (job.company_name == e.target.value) {\n                setDisplayJobs(job.jobs)\n            }\n        }\n\n        )\n\n    }\n\n\n    const postToServer = () => {\n\n        const postData = {\n            applicant_id: user.id,\n            applicant_name: user.name,\n            applicant_email: user.email,\n            jobs_applied_for: {\n                company: companiesAppliedTo,\n                job_title: jobTitle,\n                job_id: jobID,\n                deadline: deadline\n            } ,\n            \n            \n        }\n\n        try {\n            setLoading(true)\n            axios.post(`http://localhost:5000/applications/add`, postData)\n                .then(res => {\n                    setLoading(false);\n                    toast(res.data.msg, 'info')\n                    closeModal();\n\n                    const user = JSON.parse(sessionStorage.getItem('key'));\n\n                    user.jobs = [{\n                        job_title: jobTitle,\n                        job_id: jobID\n                    }]\n\n                    sessionStorage.setItem('key', JSON.stringify(user));\n                })\n                .catch(err => {\n                    setLoading(false)\n                    console.log(err)\n                });\n            \n        } catch (e) {\n            console.log(e)\n        }\n\n        \n    }\n\n\n\n    const getDesc = (e) => {\n\n        // job.title / job.job_id / job.dead_line\n        const splitedValue = e.target.value.split('/');\n\n        const title = splitedValue[0];\n        const jobid = splitedValue[1];\n        const deadline = splitedValue[2];\n\n        setJobID(jobid);\n        setDeadLine(deadline);\n\n        setJobTitle(title);\n\n        displayJobs.map(job => {\n            if (job.title == title) {\n                setDesc(job.desc)\n            }\n        })\n    }\n\n\n    return (\n\n        <Modal show={show} onHide={onHide} centered style={{}}>\n\n            <Modal.Body style={{ background: '#fafafa', height: '340px', width: '550px' }}>\n                <h5>Get A Job</h5>\n                <div className=\"container\">\n                    <div className=\"mb-3\" style={{}}>\n                        <Form.Control as=\"select\" onChange={toggleJobs} disabled={disabled}>\n                            <option>where you would like to work</option>\n                            {data.map((job) => {\n                                return <option name={job.company_name} value={job.company_name}>{job.company_name}</option>\n                            })}\n\n                        </Form.Control>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Form.Control as=\"select\" onChange={getDesc} disabled={disabled}>\n                            <option>what would you like to work as</option>\n                            {displayJobs ? displayJobs.map((job) => {\n                                return <option value={`${job.title}/${job.job_id}/${job.dead_line}`}>{job.title}</option>\n                            }) : \"\"}\n                        </Form.Control>\n                    </div>\n\n\n                    <div className=\"mb-3\">\n                        <Form.Control as=\"textarea\" rows=\"4\"\n                            value={desc ? desc : \"\"}\n                            disabled={disabled}\n                        />\n                    </div>\n                    <Button size=\"sm\" style={{ background: '#21a5e7', border: '#21a5e7' }} block onClick={postToServer} disabled={loading}>\n                        Apply {loading ? <i className=\"fa fa-spinner fa-spin\"></i> : \"\"}\n                    </Button>\n                </div>\n            </Modal.Body>\n            <Modal.Footer style={{ background: '#dbdee0', width: '550px' }}>\n                <small>Note: you can only add a maximum of two jobs</small>\n            </Modal.Footer>\n            <Modal.Footer style={{ background: '#dbdee0', width: '550px' }}>\n                {/* {\n                    jobTitle.length > 0 ?\n                        <>\n                            Current Jobs: <br />\n                            {jobTitle.map(j => {\n                                return (\n                                    <>\n                                        <span style={{ textAlign: 'left' }}>{j}</span>\n                                    </>\n                                );\n                            })}\n                        </>\n                        : \"\"} */}\n            </Modal.Footer>\n        </Modal>\n    );\n}\nexport default JobsModal;\n"]},"metadata":{},"sourceType":"module"}
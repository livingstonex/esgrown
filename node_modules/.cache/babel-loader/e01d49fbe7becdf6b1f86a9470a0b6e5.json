{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/exercise.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardActionArea, Typography, CardContent, CardActions } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport QuestionComponentRM from './questionscomponent';\nimport QuestionComponentLM from './questionscomponent';\nimport toast from '../../../util/toast';\n\nconst Exercises = ({\n  setRmExercisePage\n}) => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        spinner = _useState2[0],\n        setSpinner = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        RMExercise = _useState4[0],\n        setRMExercise = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        RMSubStatus = _useState6[0],\n        setRMSubStatus = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        LMExercise = _useState8[0],\n        setLMExercise = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        LMSubStatus = _useState10[0],\n        setLMSubStatus = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        questions = _useState12[0],\n        setQuestions = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        displayQuestions = _useState14[0],\n        setDisplayQuestions = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        duration = _useState16[0],\n        setDuration = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        exerciseId = _useState18[0],\n        setExerciseId = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        currentService = _useState20[0],\n        setCurrentService = _useState20[1];\n\n  const _useState21 = useState(true),\n        _useState22 = _slicedToArray(_useState21, 2),\n        qspinner = _useState22[0],\n        setQSpinner = _useState22[1];\n\n  const _useState23 = useState(),\n        _useState24 = _slicedToArray(_useState23, 2),\n        user = _useState24[0],\n        setUser = _useState24[1];\n\n  const _useState25 = useState(),\n        _useState26 = _slicedToArray(_useState25, 2),\n        corpExerciseOwner = _useState26[0],\n        setCorpExerciseOwner = _useState26[1];\n\n  const _useState27 = useState([]),\n        _useState28 = _slicedToArray(_useState27, 2),\n        exId = _useState28[0],\n        setExId = _useState28[1];\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        disabled = _useState30[0],\n        setDisabled = _useState30[1]; //get all exercises and filter for rm and lm\n\n\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n\n    if (user.sub_status_rm === 'active' && user.jobs.length != 0) {\n      user.jobs.map(item => {\n        axios.get(`http://localhost:5000/excercise/rm/${item.job_id}`).then(res => {\n          if (res.data.length !== 0) {\n            setExId(res.data);\n          }\n        }).catch(err => console.log(err));\n      });\n    } // //rm exercises\n    // axios.get(`http://localhost:5000/excercise/rm/`)\n    //     .then(res => {\n    //         console.log(res.data)\n    //         // const rm = res.data.filter((r) => {\n    //         //     return r.service === \"RM\"\n    //         // })\n    //         // const lm = res.data.filter(l => {\n    //         //     return l.service === 'LM'\n    //         // })\n    //         // setRMExercise(rm)\n    //         // setLMExercise(lm)\n    //         // setSpinner(false)\n    //         // setCorpExerciseOwner(res.data.corp_id);\n    //         // setJobID(res.data.job_id)\n    //     })\n    //     .catch(err => console.log(err));\n    //lm exercise\n\n\n    axios.get(`http://localhost:5000/excercise`).then(res => {\n      const lm = res.data.filter(r => {\n        return r.service === \"LM\";\n      });\n      setLMExercise(lm);\n      setSpinner(false);\n    }).catch(err => console.log(err));\n  }, []); // console.log(corpExerciseOwner);\n  //check service the user is subscribed to \n\n  useEffect(() => {\n    //lm sub status\n    const userData = JSON.parse(sessionStorage.getItem('key'));\n    setUser(userData);\n    setLMSubStatus(userData.sub_status_lm);\n    setRMSubStatus(userData.sub_status_rm);\n  }, []);\n\n  const getQuestions = e => {\n    const id = e.target.id;\n    setExerciseId(id);\n    setCurrentService(e.target.getAttribute('data-service'));\n    setDuration(e.target.getAttribute('data-duration'));\n    setDisplayQuestions(true);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col col-lg-12 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Recruitment Management - \", \"\", \" \", user && user.sub_status_rm === 'active' ? React.createElement(\"span\", {\n    style: {\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, RMSubStatus) : React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, RMSubStatus), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, mapJobs())), React.createElement(CardActions, {\n    style: {\n      background: '#e9ecef'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Note: You are only allowed to take a test only once\")))), React.createElement(\"div\", {\n    className: \"col col-lg-12 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Leadership Management - \", \"\", \" \", user && user.sub_status_lm == 'active' ? React.createElement(\"span\", {\n    style: {\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, LMSubStatus) : React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, LMSubStatus), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  })), spinner ? React.createElement(Spinner, {\n    animation: \"grow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }) : LMSubStatus === \"active\" ? LMExercise.map(r => {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: `ui floating message`,\n      \"data-service\": \"LM\",\n      \"data-duration\": r.duration,\n      onClick: getQuestions,\n      id: r._id,\n      style: {\n        cursor: 'pointer',\n        fontSize: '18px',\n        fontStyle: 'italic'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, r.title, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Duration: \", r.duration, \" minutes\")));\n  }) : LMExercise.map(r => {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: r._id,\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, r.title));\n  })), React.createElement(CardActions, {\n    style: {\n      background: '#e9ecef'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Note: You are only allowed to take a test only once\")))), displayQuestions && currentService == 'LM' ? React.createElement(\"div\", {\n    style: {\n      marginBottom: '200px',\n      marginTop: '50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(QuestionComponentLM, {\n    duration: duration,\n    exerciseId: exerciseId,\n    service: currentService,\n    corpExerciseOwner: corpExerciseOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })) : '')));\n\n  function mapJobs() {\n    return exId.map(item => React.createElement(Card, {\n      className: \"mt-5\",\n      style: {\n        width: '35%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, item.title), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn btn-info bt-sm\",\n      onClick: () => setRmExercisePage(item),\n      disabled: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Take Exercise \")))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default Exercises;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/exercises/exercise.js"],"names":["React","useState","useEffect","axios","Card","CardActionArea","Typography","CardContent","CardActions","Spinner","QuestionComponentRM","QuestionComponentLM","toast","Exercises","setRmExercisePage","spinner","setSpinner","RMExercise","setRMExercise","RMSubStatus","setRMSubStatus","LMExercise","setLMExercise","LMSubStatus","setLMSubStatus","questions","setQuestions","displayQuestions","setDisplayQuestions","duration","setDuration","exerciseId","setExerciseId","currentService","setCurrentService","qspinner","setQSpinner","user","setUser","corpExerciseOwner","setCorpExerciseOwner","exId","setExId","disabled","setDisabled","JSON","parse","sessionStorage","getItem","sub_status_rm","jobs","length","map","item","get","job_id","then","res","data","catch","err","console","log","lm","filter","r","service","userData","sub_status_lm","getQuestions","e","id","target","getAttribute","color","mapJobs","background","_id","cursor","fontSize","fontStyle","title","marginBottom","marginTop","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, CardActionArea, Typography, CardContent, CardActions } from '@material-ui/core';\nimport { Spinner } from 'react-bootstrap';\nimport QuestionComponentRM from './questionscomponent';\nimport QuestionComponentLM from './questionscomponent';\nimport toast  from '../../../util/toast';\n\n\n\n\n\n\nconst Exercises = ({ setRmExercisePage }) => {\n\n\n\n    const [spinner, setSpinner] = useState(true)\n\n    const [RMExercise, setRMExercise] = useState([]);\n    const [RMSubStatus, setRMSubStatus] = useState('');\n\n    const [LMExercise, setLMExercise] = useState([]);\n    const [LMSubStatus, setLMSubStatus] = useState('');\n\n    const [questions, setQuestions] = useState([]);\n    const [displayQuestions, setDisplayQuestions] = useState(false)\n\n    const [duration, setDuration] = useState('');\n    const [exerciseId, setExerciseId] = useState('');\n    const [currentService, setCurrentService] = useState('')\n    const [qspinner, setQSpinner] = useState(true);\n    const [user, setUser] = useState();\n    const [corpExerciseOwner, setCorpExerciseOwner] = useState();\n    const [exId, setExId] = useState([])\n    const [disabled, setDisabled] = useState(false)\n\n\n\n\n    //get all exercises and filter for rm and lm\n    useEffect(() => {\n\n        const user = JSON.parse(sessionStorage.getItem('key'));\n\n        if (user.sub_status_rm === 'active' && user.jobs.length != 0) {\n\n            user.jobs.map(item => {\n                axios.get(`http://localhost:5000/excercise/rm/${item.job_id}`)\n                    .then(res => {\n                        if (res.data.length !== 0) {\n                            setExId(res.data)\n                        }\n                    }).catch(err => console.log(err))\n            });\n\n\n\n        }\n\n        \n\n\n        // //rm exercises\n        // axios.get(`http://localhost:5000/excercise/rm/`)\n        //     .then(res => {\n        //         console.log(res.data)\n\n        //         // const rm = res.data.filter((r) => {\n        //         //     return r.service === \"RM\"\n        //         // })\n\n        //         // const lm = res.data.filter(l => {\n        //         //     return l.service === 'LM'\n        //         // })\n\n        //         // setRMExercise(rm)\n        //         // setLMExercise(lm)\n        //         // setSpinner(false)\n        //         // setCorpExerciseOwner(res.data.corp_id);\n        //         // setJobID(res.data.job_id)\n        //     })\n        //     .catch(err => console.log(err));\n\n\n        //lm exercise\n        axios.get(`http://localhost:5000/excercise`)\n            .then(res => {\n\n                const lm = res.data.filter((r) => {\n                    return r.service === \"LM\"\n                })\n                setLMExercise(lm)\n                setSpinner(false)\n            })\n            .catch(err => console.log(err))\n\n\n\n    }, []);\n    // console.log(corpExerciseOwner);\n\n    //check service the user is subscribed to \n    useEffect(() => {\n\n        //lm sub status\n        const userData = JSON.parse(sessionStorage.getItem('key'))\n        setUser(userData);\n\n        setLMSubStatus(userData.sub_status_lm);\n\n        setRMSubStatus(userData.sub_status_rm);\n\n\n    }, [])\n\n    const getQuestions = (e) => {\n\n        const id = e.target.id;\n\n        setExerciseId(id)\n        setCurrentService(e.target.getAttribute('data-service'));\n        setDuration(e.target.getAttribute('data-duration'));\n        setDisplayQuestions(true)\n\n    }\n \n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col col-lg-12 col-sm-6\">\n                        <br />\n                        <Card className=\"\">\n\n                            <CardContent>\n                                <Typography gutterBottom variant=\"\" component=\"h5\">\n                                    Recruitment Management - {\"\"} {user && user.sub_status_rm === 'active' ? <span style={{ color: 'green' }}>{RMSubStatus}</span> : <span style={{ color: 'red' }}>{RMSubStatus}</span>}\n                                    <hr />\n                                </Typography>\n                                {/* map through jobs and display cards  */}\n                                <div className=\"d-flex justify-content-around\">\n                                    { mapJobs() }\n                                </div>\n                            </CardContent>\n\n\n                            <CardActions style={{ background: '#e9ecef' }}>\n                                <small>Note: You are only allowed to take a test only once</small>\n                            </CardActions>\n                        </Card>\n                    </div>\n                    {/* {displayQuestions && currentService == 'RM' ?\n                        <div style={{ marginBottom: '200px', marginTop: '50px' }}>\n                            <QuestionComponentRM duration={duration} exerciseId={exerciseId} service={currentService} corpExerciseOwner={corpExerciseOwner} jobID={JobID} />\n                        </div>\n                        : ''} */}\n\n\n                    <div className=\"col col-lg-12 col-sm-6\">\n                        <br />\n                        <Card className=\"\">\n\n                            <CardContent>\n                                <Typography gutterBottom variant=\"\" component=\"h5\">\n                                    Leadership Management - {\"\"} {user && user.sub_status_lm == 'active' ? <span style={{ color: 'green' }}>{LMSubStatus}</span> : <span style={{ color: 'red' }}>{LMSubStatus}</span>}\n                                    <hr />\n                                </Typography>\n                                {spinner ? <Spinner animation=\"grow\" /> : LMSubStatus === \"active\" ? LMExercise.map(r => {\n                                    return (\n                                        <ul>\n                                            <li className={`ui floating message`} data-service=\"LM\" data-duration={r.duration} onClick={getQuestions} id={r._id} style={{ cursor: 'pointer', fontSize: '18px', fontStyle: 'italic' }}>{r.title}<br /><small>Duration: {r.duration} minutes</small></li>\n                                        </ul>\n                                    );\n                                }) : LMExercise.map(r => {\n                                    return (\n                                        <ul>\n                                            <li id={r._id} style={{ cursor: 'pointer' }}>{r.title}</li>\n                                        </ul>\n                                    );\n                                })}\n                            </CardContent>\n\n\n                            <CardActions style={{ background: '#e9ecef' }}>\n                                <small>Note: You are only allowed to take a test only once</small>\n                            </CardActions>\n                        </Card>\n                    </div>\n                    {displayQuestions && currentService == 'LM' ?\n                        <div style={{ marginBottom: '200px', marginTop: '50px' }}>\n                            <QuestionComponentLM duration={duration} exerciseId={exerciseId} service={currentService} corpExerciseOwner={corpExerciseOwner} />\n                        </div>\n                        : ''}\n\n                </div>\n            </div>\n\n        </>\n\n    );\n\n    function mapJobs() {\n        return exId.map(item => (\n                    <Card className=\"mt-5\" style={{ width: '35%' }}>\n                        <CardActionArea>\n                            <CardContent >\n                                <Typography gutterBottom variant=\"\" component=\"p\">\n                                    {item.title}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <div className=\"btn btn-info bt-sm\" onClick={() => setRmExercisePage(item)} disabled={{}} >Take Exercise </div>\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                        </CardActions>\n                    </Card>\n                ));\n    }\n\n\n\n}\nexport default Exercises;"]},"metadata":{},"sourceType":"module"}
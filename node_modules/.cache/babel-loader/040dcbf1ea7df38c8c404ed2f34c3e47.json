{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/lm/lm_sub_page/lm_sub_page.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\n\nclass LmUpdateForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      highestlevelOfEducation: '',\n      natureOfBusiness: '',\n      sub_status: false,\n      user_id: '',\n      message: ''\n    };\n\n    this.handleUpdate = () => {\n      const data = {\n        nature_of_work_business: this.state.natureOfBusiness,\n        highest_level_of_education: this.state.highestlevelOfEducation\n      };\n      axios.post(`http://localhost:5000/subscriptionlm/update/${this.state.user_id}`, data).then(response => {\n        if (response.status === 200) {\n          this.setState({\n            message: 'Subscription details updated successful'\n          });\n        }\n      }).catch(err => this.setState({\n        message: 'Update failed. Please try again'\n      }));\n    };\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  //make axios call to api and get data to be edited and store in state\n  componentDidMount() {\n    const userData = JSON.parse(sessionStorage.getItem('key'));\n    this.setState({\n      user_id: userData.id\n    });\n    axios.get(`http://localhost:5000/subscriptionlm/${userData.id}`).then(response => this.setState({\n      highestlevelOfEducation: response.data[0].highest_level_of_education,\n      natureOfBusiness: response.data[0].nature_of_work_business\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          toggle = _this$props.toggle;\n    const sub_statusColor = this.state.sub_status === false ? '#ae2b26' : 'green';\n    const buttonText = this.state.sub_status === false ? 'PAY' : 'PAID';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: isOpen,\n      toggle: toggle,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        float: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        font: 'verdana',\n        fontSize: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Leadership Management Subscription\")), React.createElement(\"div\", {\n      style: {\n        float: 'right',\n        marginLeft: 300,\n        marginTop: -45,\n        paddingRight: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        float: 'right',\n        backgroundColor: sub_statusColor,\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, buttonText))), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"highestlevelOfEducation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Highest level Of Education\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"highestlevelOfEducation\",\n      value: this.state.highestlevelOfEducation,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"natureOfBusiness\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Nature Of Work Or Business\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"natureOfBusiness\",\n      value: this.state.natureOfBusiness,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.message === 'Subscription details updated successful' ? React.createElement(\"span\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.message) : React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.message), ' ', '', React.createElement(Button, {\n      style: {\n        background: '#1c8496',\n        color: 'white'\n      },\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Update\"), ' ')));\n  }\n\n}\n\nexport default LmUpdateForm;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/ind_dashboard_components/subscription-pages/lm/lm_sub_page/lm_sub_page.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","axios","LmUpdateForm","state","highestlevelOfEducation","natureOfBusiness","sub_status","user_id","message","handleUpdate","data","nature_of_work_business","highest_level_of_education","post","then","response","status","setState","catch","err","changeHandler","event","name","target","value","componentDidMount","userData","JSON","parse","sessionStorage","getItem","id","get","console","log","render","props","isOpen","toggle","sub_statusColor","buttonText","float","font","fontSize","marginLeft","marginTop","paddingRight","backgroundColor","color","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,WAAvD,EAAoEC,SAApE,EAA+EC,WAA/E,QAAkG,YAAlG;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCY,KAFiC,GAEzB;AACJC,MAAAA,uBAAuB,EAAE,EADrB;AAEJC,MAAAA,gBAAgB,EAAE,EAFd;AAGJC,MAAAA,UAAU,EAAE,KAHR;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,OAAO,EAAE;AALL,KAFyB;;AAAA,SAWjCC,YAXiC,GAWlB,MAAM;AAEjB,YAAMC,IAAI,GAAG;AACTC,QAAAA,uBAAuB,EAAE,KAAKR,KAAL,CAAWE,gBAD3B;AAETO,QAAAA,0BAA0B,EAAE,KAAKT,KAAL,CAAWC;AAF9B,OAAb;AAKAH,MAAAA,KAAK,CAACY,IAAN,CAAY,+CAA8C,KAAKV,KAAL,CAAWI,OAAQ,EAA7E,EAAgFG,IAAhF,EACKI,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,eAAKC,QAAL,CAAc;AACVT,YAAAA,OAAO,EAAE;AADC,WAAd;AAGH;AACJ,OAPL,EAQKU,KARL,CAQWC,GAAG,IAAI,KAAKF,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd,CARlB;AASH,KA3BgC;;AAAA,SA2CjCY,aA3CiC,GA2CjBC,KAAK,IAAI;AAErB,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AAEA,YAAME,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAA3B;AAEA,WAAKP,QAAL,CAAc;AAAE,SAACK,IAAD,GAAQE;AAAV,OAAd;AACH,KAlDgC;AAAA;;AA6BjC;AACAC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAAjB;AAEA,SAAKb,QAAL,CAAc;AAAEV,MAAAA,OAAO,EAAEmB,QAAQ,CAACK;AAApB,KAAd;AAEA9B,IAAAA,KAAK,CAAC+B,GAAN,CAAW,wCAAuCN,QAAQ,CAACK,EAAG,EAA9D,EACKjB,IADL,CACUC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAC5Bb,MAAAA,uBAAuB,EAAEW,QAAQ,CAACL,IAAT,CAAc,CAAd,EAAiBE,0BADd;AAE5BP,MAAAA,gBAAgB,EAAEU,QAAQ,CAACL,IAAT,CAAc,CAAd,EAAiBC;AAFP,KAAd,CADtB,EAKKO,KALL,CAKWC,GAAG,IAAIc,OAAO,CAACC,GAAR,CAAYf,GAAZ,CALlB;AAMH;;AAYDgB,EAAAA,MAAM,GAAG;AAAA,wBAEsB,KAAKC,KAF3B;AAAA,UAEGC,MAFH,eAEGA,MAFH;AAAA,UAEWC,MAFX,eAEWA,MAFX;AAIL,UAAMC,eAAe,GAAG,KAAKpC,KAAL,CAAWG,UAAX,KAA0B,KAA1B,GAAkC,SAAlC,GAA8C,OAAtE;AAEA,UAAMkC,UAAU,GAAG,KAAKrC,KAAL,CAAWG,UAAX,KAA0B,KAA1B,GAAkC,KAAlC,GAA0C,MAA7D;AAEA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE+B,MAAf;AAAuB,MAAA,MAAM,EAAEC,MAA/B;AAAuC,MAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAA/B,CADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE,OAAT;AAAkBG,QAAAA,UAAU,EAAE,GAA9B;AAAmCC,QAAAA,SAAS,EAAE,CAAC,EAA/C;AAAmDC,QAAAA,YAAY,EAAE;AAAjE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkF,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEL,QAAAA,KAAK,EAAE,OAAT;AAAkBM,QAAAA,eAAe,EAAER,eAAnC;AAAoDS,QAAAA,KAAK,EAAE;AAA3D,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsFR,UAAtF,CAAlF,CAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,IAAI,EAAC,yBADT;AAEI,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWC,uBAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKgB,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAUI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AACI,MAAA,IAAI,EAAC,kBADT;AAEI,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWE,gBAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKe,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,CADJ,CALJ,EA0BI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,KAAL,CAAWK,OAAX,KAAuB,yCAAvB,GAAmE;AAAM,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAK7C,KAAL,CAAWK,OAA7C,CAAnE,GAAkI;AAAM,MAAA,KAAK,EAAE;AAAEwC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAK7C,KAAL,CAAWK,OAA3C,CADvI,EAEK,GAFL,EAEU,EAFV,EAGI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEyC,QAAAA,UAAU,EAAE,SAAd;AAAyBD,QAAAA,KAAK,EAAE;AAAhC,OAAf;AAA0D,MAAA,OAAO,EAAE,KAAKvC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAG0G,GAH1G,CA1BJ,CADJ,CAFJ;AAsCH;;AAnGgC;;AAqGrC,eAAeP,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\n\nclass LmUpdateForm extends Component {\n\n    state = {\n        highestlevelOfEducation: '',\n        natureOfBusiness: '',\n        sub_status: false,\n        user_id: '',\n        message: ''\n    }\n\n\n    handleUpdate = () => {\n\n        const data = {\n            nature_of_work_business: this.state.natureOfBusiness,\n            highest_level_of_education: this.state.highestlevelOfEducation\n        }\n\n        axios.post(`http://localhost:5000/subscriptionlm/update/${this.state.user_id}`, data)\n            .then(response => {\n                if (response.status === 200) {\n                    this.setState({\n                        message: 'Subscription details updated successful'\n                    })\n                }\n            })\n            .catch(err => this.setState({ message: 'Update failed. Please try again' }))\n    }\n\n    //make axios call to api and get data to be edited and store in state\n    componentDidMount() {\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n\n        this.setState({ user_id: userData.id });\n\n        axios.get(`http://localhost:5000/subscriptionlm/${userData.id}`)\n            .then(response => this.setState({\n                highestlevelOfEducation: response.data[0].highest_level_of_education,\n                natureOfBusiness: response.data[0].nature_of_work_business\n            }))\n            .catch(err => console.log(err));\n    }\n\n    changeHandler = event => {\n\n        const name = event.target.name;\n\n        const value = event.target.value;\n\n        this.setState({ [name]: value });\n    }\n\n\n    render() {\n\n        const { isOpen, toggle } = this.props;\n\n        const sub_statusColor = this.state.sub_status === false ? '#ae2b26' : 'green';\n\n        const buttonText = this.state.sub_status === false ? 'PAY' : 'PAID'\n\n        return (\n\n            <div>\n                <Modal isOpen={isOpen} toggle={toggle} centered>\n                    <ModalHeader>\n                        <div style={{ float: 'left' }}><p style={{ font: 'verdana', fontSize: 18 }}>Leadership Management Subscription</p></div>\n                        <div style={{ float: 'right', marginLeft: 300, marginTop: -45, paddingRight: 0 }}><Button style={{ float: 'right', backgroundColor: sub_statusColor, color: 'white' }}>{buttonText}</Button></div>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"highestlevelOfEducation\">Highest level Of Education</Label>\n                                <Input type=\"text\"\n                                    name=\"highestlevelOfEducation\"\n                                    value={this.state.highestlevelOfEducation}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label for=\"natureOfBusiness\">Nature Of Work Or Business</Label>\n                                <Input type=\"text\"\n                                    name=\"natureOfBusiness\"\n                                    value={this.state.natureOfBusiness}\n                                    onChange={this.changeHandler}\n                                />\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        {this.state.message === 'Subscription details updated successful' ? <span style={{ color: 'green' }}>{this.state.message}</span> : <span style={{ color: 'red' }}>{this.state.message}</span>}\n                        {' '}{''}\n                        <Button style={{ background: '#1c8496', color: 'white' }} onClick={this.handleUpdate}>Update</Button>{' '}\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n\n    }\n}\nexport default LmUpdateForm;\n"]},"metadata":{},"sourceType":"module"}
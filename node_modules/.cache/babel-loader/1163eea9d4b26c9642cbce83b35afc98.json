{"ast":null,"code":"import _classCallCheck from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import axios from'axios';import{Spinner}from'react-bootstrap';import Quiz from'./quiz';import SubmitBtn from'./submitbtn';import StartBtn from'./startbtn';import{toast}from'react-toastify';var userAnswer=[];var QuestionsComponent=/*#__PURE__*/function(_Component){_inherits(QuestionsComponent,_Component);//userAnswer = [];\nfunction QuestionsComponent(props){var _this;_classCallCheck(this,QuestionsComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuestionsComponent).call(this,props));_this.setStart=function(){_this.setState({page:2});// this.startTimer()\n};_this.setPage=function(){_this.setState({page:3});};_this.maxScore=function(question){var getMaxScore=question.reduce(function(a,b){return a+b.score;},0);_this.setState({max_score:getMaxScore});};_this.handelUserAns=function(e){//check if user ans is correct ie user ans should be equal to question correct ans. if correct user score is equal to quetion.score else 0. add user score to the posted object\nif(e.target.type=='radio'){var q=e.target.parentNode.parentNode.parentNode.firstChild.value.toLowerCase();var a=e.target.value.toLowerCase();var score=parseInt(e.target.getAttribute('data-score'));var correctAns=e.target.getAttribute('data-ans').toLowerCase();var userScore;if(a===correctAns){userScore=score;}else{userScore=parseInt(0);}if(userAnswer.length>0){//prevent submission of the same question with different answers\nvar fnd=userAnswer.find(function(x){return x.question==q;});if(!fnd){userAnswer.push({question:q,ans:a,userScore:userScore});}else{userAnswer.splice(userAnswer.findIndex(function(item){return item.question===q;}),1);userAnswer.push({question:q,ans:a,userScore:userScore});}}else{userAnswer.push({question:q,ans:a,userScore:userScore});}}else{}_this.setState({userAns:userAnswer});};_this.submitAns=function(){//attache corp id along with ans\nvar userData=JSON.parse(sessionStorage.getItem('key'));var name=userData.name,email=userData.email;var _this$props$exercise=_this.props.exercise,_id=_this$props$exercise._id,service=_this$props$exercise.service,corp_id=_this$props$exercise.corp_id,job_id=_this$props$exercise.job_id,duration=_this$props$exercise.duration;//get user total score\nvar total=_this.state.userAns.reduce(function(a,b){return a+b.userScore;},0);var data={user_id:userData.id,corp_id:corp_id,excercise_id:_id,job_id:_this.props.exercise.job_id,service:service,name:name,email:email,total_scored:total,answers:_this.state.userAns,max_score:_this.state.max_score};// send to db\ntry{_this.setState({submitting:true});axios.post(\"http://localhost:5000/answer/add\",data).then(function(res){_this.setState({submitting:false});_this.setState({showScoreModal:true});}).catch(function(err){return console.log(err);});//\n}catch(error){}_this.setState({page:0});};_this.state={currentCount:_this.props.duration,activeStep:0,userAns:[],page:1,spinner:true,disabled:false,exTaken:false,userName:'',submitting:false,showScoreModal:false,max_score:0};return _this;}// timer() {\n//     this.setState({\n//         currentCount: this.state.currentCount - 1\n//     })\n//     if (this.state.currentCount < 1) {\n//         clearInterval(this.intervalId);\n//         this.setState({ page: 3 })\n//     }\n// }\n// startTimer() {\n//     this.setState({ currentCount: this.props.duration * 60 });\n//     setInterval(this.timer.bind(this), 1000);\n// }\n//check if user has taken this exercise b4\n_createClass(QuestionsComponent,[{key:\"checkIfUserHasTakenEx\",value:function checkIfUserHasTakenEx(user,exid){var _this2=this;axios.post(\"http://localhost:5000/answer/check\",{user_id:user,ex_id:exid}).then(function(res){if(res.data.length>0){_this2.setState({exTaken:true});toast('Our records show you have taken this exercise in the past','warn');}}).catch(function(err){return console.log(err);});}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;var user=JSON.parse(sessionStorage.getItem('key'));this.setState({userName:user.name});// this.intervalId = setInterval(this.timer.bind(this), 1000);\naxios.get(\"http://localhost:5000/question/\".concat(this.props.exercise._id)).then(function(res){console.log(res.data);if(res.data.length>0){_this3.setState({question:res.data,spinner:false});}if(res.data.length===0){_this3.setState({disabled:true});toast('sorry, no exercise yet!','info');}}).catch(function(err){return console.log(err);});if(this.state.spinner==false){this.setState({page:1});}this.checkIfUserHasTakenEx(user.id,this.props.exercise._id);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.intervalId);}},{key:\"render\",value:function render(){var _this$state=this.state,question=_this$state.question,spinner=_this$state.spinner;var duration=this.props.exercise.duration;console.log(this.state.max_score);return React.createElement(React.Fragment,null,this.state.page==1?React.createElement(StartBtn,{setStart:this.setStart,duration:this.props.duration,disabled:this.state.disabled,exTaken:this.state.exTaken}):this.state.page==2?React.createElement(Quiz,{question:question,submitAns:this.submitAns,handelUserAns:this.handelUserAns,duration:duration,setPage:this.setPage,maxScore:this.maxScore}):this.state.page==3?React.createElement(SubmitBtn,{submitAns:this.submitAns}):this.state.page==0?\"\":\"\");}}]);return QuestionsComponent;}(Component);export default QuestionsComponent;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/ind_dashboard_components/exercises/rmquestioncomponent.js"],"names":["React","Component","axios","Spinner","Quiz","SubmitBtn","StartBtn","toast","userAnswer","QuestionsComponent","props","setStart","setState","page","setPage","maxScore","question","getMaxScore","reduce","a","b","score","max_score","handelUserAns","e","target","type","q","parentNode","firstChild","value","toLowerCase","parseInt","getAttribute","correctAns","userScore","length","fnd","find","x","push","ans","splice","findIndex","item","userAns","submitAns","userData","JSON","parse","sessionStorage","getItem","name","email","exercise","_id","service","corp_id","job_id","duration","total","state","data","user_id","id","excercise_id","total_scored","answers","submitting","post","then","res","showScoreModal","catch","err","console","log","error","currentCount","activeStep","spinner","disabled","exTaken","userName","user","exid","ex_id","get","checkIfUserHasTakenEx","clearInterval","intervalId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Spinner } from 'react-bootstrap';\nimport Quiz from './quiz';\nimport SubmitBtn from './submitbtn';\nimport StartBtn from './startbtn';\nimport { toast } from 'react-toastify';\n\n\n\nlet userAnswer = [];\n\n\nclass QuestionsComponent extends Component {\n    //userAnswer = [];\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            currentCount: this.props.duration,\n            activeStep: 0,\n            userAns: [],\n            page: 1,\n            spinner: true,\n            disabled: false,\n            exTaken: false,\n            userName: '',\n            submitting: false,\n            showScoreModal: false,\n            max_score: 0\n\n        }\n\n    }\n\n\n\n    // timer() {\n    //     this.setState({\n    //         currentCount: this.state.currentCount - 1\n    //     })\n    //     if (this.state.currentCount < 1) {\n    //         clearInterval(this.intervalId);\n    //         this.setState({ page: 3 })\n    //     }\n    // }\n\n    // startTimer() {\n    //     this.setState({ currentCount: this.props.duration * 60 });\n    //     setInterval(this.timer.bind(this), 1000);\n    // }\n\n\n    //check if user has taken this exercise b4\n    checkIfUserHasTakenEx(user, exid) {\n        axios.post(`http://localhost:5000/answer/check`, {\n            user_id: user,\n            ex_id: exid\n        }).then(res => {\n            if (res.data.length > 0) {\n                this.setState({ exTaken: true });\n                toast('Our records show you have taken this exercise in the past', 'warn')\n            }\n        }).catch(err => console.log(err))\n    }\n\n\n    componentDidMount() {\n\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        this.setState({ userName: user.name })\n        // this.intervalId = setInterval(this.timer.bind(this), 1000);\n        axios.get(`http://localhost:5000/question/${this.props.exercise._id}`)\n            .then(res => {\n                console.log(res.data)\n                if (res.data.length > 0) {\n                    this.setState({\n                        question: res.data,\n                        spinner: false\n                    })\n                }\n                if (res.data.length === 0) {\n                    this.setState({ disabled: true });\n                    toast('sorry, no exercise yet!', 'info')\n                }\n            })\n            .catch(err => console.log(err));\n\n        if (this.state.spinner == false) {\n            this.setState({ page: 1 })\n        }\n\n        this.checkIfUserHasTakenEx(user.id, this.props.exercise._id)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n\n    setStart = () => {\n        this.setState({ page: 2 })\n        // this.startTimer()\n    }\n\n    setPage = () => {\n        this.setState({ page: 3 })\n    }\n\n    maxScore = (question) => {\n        const getMaxScore = question.reduce((a, b) => {\n            return a + b.score\n        }, 0)\n        this.setState({ max_score: getMaxScore })\n    }\n\n    handelUserAns = (e) => {\n        //check if user ans is correct ie user ans should be equal to question correct ans. if correct user score is equal to quetion.score else 0. add user score to the posted object\n        if (e.target.type == 'radio') {\n            const q = e.target.parentNode.parentNode.parentNode.firstChild.value.toLowerCase();\n            const a = e.target.value.toLowerCase();\n            const score = parseInt(e.target.getAttribute('data-score'));\n            const correctAns = e.target.getAttribute('data-ans').toLowerCase()\n            let userScore;\n\n            if (a === correctAns) {\n                userScore = score\n            } else {\n                userScore = parseInt(0);\n            }\n\n\n\n            if (userAnswer.length > 0) {\n                //prevent submission of the same question with different answers\n                const fnd = userAnswer.find(x => x.question == q);\n                if (!fnd) {\n                    userAnswer.push({\n                        question: q,\n                        ans: a,\n                        userScore\n                    })\n                } else {\n                    userAnswer.splice(userAnswer.findIndex(item => item.question === q), 1);\n\n                    userAnswer.push(\n                        {\n                            question: q,\n                            ans: a,\n                            userScore\n                        }\n                    )\n                }\n            } else {\n                userAnswer.push({\n                    question: q,\n                    ans: a,\n                    userScore\n\n                })\n\n            }\n        } else {\n\n        }\n\n        this.setState({ userAns: userAnswer });\n\n    }\n\n\n\n\n    submitAns = () => {\n        //attache corp id along with ans\n        const userData = JSON.parse(sessionStorage.getItem('key'));\n        const { name, email } = userData;\n\n        const { _id, service, corp_id, job_id, duration } = this.props.exercise;\n\n\n        //get user total score\n        const total = this.state.userAns.reduce((a, b) => {\n            return a + b.userScore ;\n        }, 0)\n\n\n        const data = {\n            user_id: userData.id,\n            corp_id: corp_id,\n            excercise_id: _id,\n            job_id: this.props.exercise.job_id,\n            service: service,\n            name: name,\n            email: email,\n            total_scored: total,\n            answers: this.state.userAns,\n            max_score: this.state.max_score\n\n        }\n\n        // send to db\n        try {\n            this.setState({submitting: true})\n            axios.post(`http://localhost:5000/answer/add`, data)\n                .then(res => {\n                    this.setState({ submitting: false })\n                    this.setState({ showScoreModal: true })\n\n                })\n                .catch(err => console.log(err))\n            //\n            \n        } catch (error) {\n            \n        }\n\n\n        this.setState({ page: 0 })\n\n    }\n\n    render() {\n\n        const { question, spinner } = this.state\n        const { duration } = this.props.exercise;\n\n        console.log(this.state.max_score)\n\n\n        return (\n            <>\n                {\n                    (this.state.page == 1) ? <StartBtn setStart={this.setStart} duration={this.props.duration} disabled={this.state.disabled} exTaken={this.state.exTaken} /> : (this.state.page == 2) ? <Quiz question={question} submitAns={this.submitAns} handelUserAns={this.handelUserAns} duration={duration} setPage={this.setPage} maxScore={this.maxScore}/> : (this.state.page == 3) ? <SubmitBtn submitAns={this.submitAns} /> : (this.state.page == 0) ? \"\" : \"\"\n                }\n            </>\n        );\n\n    }\n\n}\nexport default QuestionsComponent;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/mac/Desktop/projekte/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/job/components/create-job.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport md5 from 'md5';\nimport { Spinner, Modal } from 'react-bootstrap';\nimport { Card, CardContent } from '@material-ui/core';\n\nconst CteateJob = ({\n  show,\n  onHide,\n  closeModal\n}) => {\n  useEffect(() => {\n    const user = JSON.parse(sessionStorage.getItem('key'));\n    setUser(user);\n    const job = md5('khbj').substring(0, 10);\n    setJobID(job);\n  }, []);\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        jobID = _useState4[0],\n        setJobID = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        companyName = _useState6[0],\n        setCompanyName = _useState6[1];\n\n  const _useState7 = useState({\n    title: '',\n    email: '',\n    start_date: '',\n    dead_line: '',\n    erd: '',\n    desc: '',\n    job_id: jobID\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        jobsData = _useState8[0],\n        setJobsData = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        spinner = _useState10[0],\n        setSpinner = _useState10[1];\n\n  console.log(jobsData);\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    setJobsData(_objectSpread({}, jobsData, {\n      [name]: value\n    }));\n  };\n\n  const setCompany = e => {\n    setCompanyName(e.target.value);\n  }; //send data to server\n\n\n  const createJob = () => {\n    setSpinner(true);\n    const submitData = {\n      company_name: user.name,\n      jobs: jobsData,\n      company_id: user.id\n    }; //post job to server\n\n    axios.post(`http://localhost:5000/jobs/add`, submitData).then(res => {\n      console.log(res.data);\n\n      if (res.data) {\n        setSpinner(false);\n        closeModal();\n      }\n    }).catch(err => console.log(err));\n    setJobsData({\n      title: '',\n      email: '',\n      start_date: '',\n      dead_line: '',\n      erd: '',\n      desc: ''\n    });\n    setCompanyName('');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    style: {\n      marginTop: '60px',\n      marginBottom: '70px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Job Title\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: jobsData.title,\n    onChange: handleChange,\n    placeholder: \"Job Title\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: jobsData.email,\n    onChange: handleChange,\n    placeholder: \"Email to apply to\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"start_date\",\n    value: jobsData.startDate,\n    onChange: handleChange,\n    placeholder: \"when applications begin\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Dead Line\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"dead_line\",\n    value: jobsData.dead_line,\n    onChange: handleChange,\n    placeholder: \"Dead line\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Expected Resumption Date \"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"erd\",\n    value: jobsData.erd,\n    onChange: handleChange,\n    placeholder: \"ERD\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Job Description\"), React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"desc\",\n    rows: \"3\",\n    value: jobsData.desc,\n    onChange: handleChange,\n    placeholder: \"Job Description\",\n    className: \"form-control\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-2 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn w-100 border-0\",\n    style: {\n      background: '#21A5E7',\n      color: 'white'\n    },\n    onClick: createJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, spinner ? React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }) : \"Create Job\")))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n};\n\nexport default CteateJob;","map":{"version":3,"sources":["/Users/mac/Desktop/projekte/esgrown/src/components/corp_dashboard_components/job/components/create-job.js"],"names":["React","useState","useEffect","axios","md5","Spinner","Modal","Card","CardContent","CteateJob","show","onHide","closeModal","user","JSON","parse","sessionStorage","getItem","setUser","job","substring","setJobID","jobID","companyName","setCompanyName","title","email","start_date","dead_line","erd","desc","job_id","jobsData","setJobsData","spinner","setSpinner","console","log","handleChange","e","value","target","name","setCompany","createJob","submitData","company_name","jobs","company_id","id","post","then","res","data","catch","err","marginTop","marginBottom","fontWeight","startDate","background","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport md5 from 'md5';\nimport { Spinner, Modal } from 'react-bootstrap';\nimport { Card, CardContent } from '@material-ui/core';\n\n\n\n\n\nconst CteateJob = ({ show, onHide, closeModal }) => {\n\n    useEffect(() => {\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        setUser(user)\n        const job = md5('khbj').substring(0, 10);\n        setJobID(job);\n    },[])\n\n    const [user, setUser] = useState();\n    const [jobID, setJobID] = useState();\n    const [companyName, setCompanyName] = useState('');\n\n    const [jobsData, setJobsData] = useState({\n        title: '',\n        email: '',\n        start_date: '',\n        dead_line: '',\n        erd: '',\n        desc: '',\n        job_id: jobID\n    });\n\n    const [spinner, setSpinner] = useState(false);\n    console.log(jobsData)\n    \n\n\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n\n        setJobsData({ ...jobsData, [name]: value })\n    };\n\n\n    const setCompany = (e) => {\n        setCompanyName(e.target.value);\n    };\n\n\n    //send data to server\n    const createJob = () => {\n\n        setSpinner(true)\n\n        const submitData = {\n            company_name: user.name,\n            jobs: jobsData,\n            company_id: user.id\n        }\n\n        //post job to server\n        axios.post(`http://localhost:5000/jobs/add`, submitData)\n            .then(res => {\n                console.log(res.data)\n                if (res.data) {\n                    setSpinner(false);\n                    closeModal();\n                }\n                \n            })\n            .catch(err => console.log(err));\n\n        setJobsData({\n            title: '',\n            email: '',\n            start_date: '',\n            dead_line: '',\n            erd:'',\n            desc: ''\n\n        });\n        setCompanyName('')\n    }\n\n    return (\n        <>\n\n            <Modal show={show} onHide={onHide} centered style={{marginTop:'60px', marginBottom:'70px'}}>\n\n                <div className=\"container\">\n                    {/* <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <input type=\"hidden\" name=\"jobId\" value={jobsData.jobId} placeholder=\"Company Name\" className=\"form-control\" required />\n                        </div>\n                    </div> */}\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Job Title</label>\n                            <input type=\"text\" name=\"title\" value={jobsData.title} onChange={handleChange} placeholder=\"Job Title\" className=\"form-control\" required />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Email</label>\n                            <input type=\"email\" name=\"email\" value={jobsData.email} onChange={handleChange} placeholder=\"Email to apply to\" className=\"form-control\" required />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Start Date</label>\n                            <input type=\"date\" name=\"start_date\" value={jobsData.startDate} onChange={handleChange} placeholder=\"when applications begin\" className=\"form-control\" required />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Dead Line</label>\n                            <input type=\"date\" name=\"dead_line\" value={jobsData.dead_line} onChange={handleChange} placeholder=\"Dead line\" className=\"form-control\" required />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Expected Resumption Date </label>\n                            <input type=\"date\" name=\"erd\" value={jobsData.erd} onChange={handleChange} placeholder=\"ERD\" className=\"form-control\" required />\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3\">\n                        <div className=\"col\">\n                            <label style={{ fontWeight: 'bold' }}>Job Description</label>\n                            <textarea type=\"text\" name=\"desc\" rows=\"3\" value={jobsData.desc} onChange={handleChange} placeholder=\"Job Description\" className=\"form-control\" required ></textarea>\n                        </div>\n                    </div>\n                    <Modal.Footer>\n                        <div className=\"row mt-2 mb-4\">\n                            <div className=\"col\">\n                                <button\n                                    className=\"btn w-100 border-0\"\n                                    style={{ background: '#21A5E7', color: 'white' }}\n                                    onClick={createJob}\n                                >\n                                    {spinner ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\" /> : \"Create Job\"}\n                                </button>\n                            </div>\n                        </div>\n                    </Modal.Footer>\n                </div>\n            </Modal>\n            <br/>\n            <br/>\n        </>\n    );\n}\nexport default CteateJob;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/Users/mac/Desktop/esgrown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import axios from'axios';import RMexercisesLog from'../components/exercise_log';import RMexercisesNewContent from'../components/new_exercise';var RMexercises=function RMexercises(){var title=\"RM Exercises Log\";var NewContentTitle=\"Create new RM Exercises and Questions\";var service=\"RM\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),ex=_useState2[0],setEx=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),spinner=_useState4[0],setSpinner=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];useEffect(function(){var user=JSON.parse(sessionStorage.getItem('key'));setUser(user);//get exercises using corp id\naxios.get(\"http://localhost:5000/excercise/\".concat(user.id)).then(function(res){if(res.data.length>0){// const rmEx = res.data.filter((ex) => {\n//     return ex.service == \"RM\"\n// });\nsetEx(res.data);setSpinner(false);}console.log(res.data);}).catch(function(err){return console.log(err);});},[]);console.log(ex);var refreshContentLog=function refreshContentLog(){//get exercises then using exercise id\naxios.get(\"http://localhost:5000/excercise/\".concat(user.id)).then(function(res){if(res.data.length>0){var rmEx=res.data.filter(function(ex){return ex.service==\"RM\";});setEx(res.data);setSpinner(false);}}).catch(function(err){return console.log(err);});};return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(RMexercisesLog,{title:title,ex:ex,spinner:spinner}),React.createElement(RMexercisesNewContent,{service:service,title:NewContentTitle,refreshContentLog:refreshContentLog}))));};export default RMexercises;","map":{"version":3,"sources":["/Users/mac/Desktop/esgrown/src/components/admin/exercises/rm/rm.js"],"names":["React","useEffect","useState","axios","RMexercisesLog","RMexercisesNewContent","RMexercises","title","NewContentTitle","service","ex","setEx","spinner","setSpinner","user","setUser","JSON","parse","sessionStorage","getItem","get","id","then","res","data","length","console","log","catch","err","refreshContentLog","rmEx","filter"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,4BAAlC,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAEtB,GAAMC,CAAAA,KAAK,CAAG,kBAAd,CACA,GAAMC,CAAAA,eAAe,CAAG,uCAAxB,CACA,GAAMC,CAAAA,OAAO,CAAG,IAAhB,CAJsB,cAMFP,QAAQ,CAAC,EAAD,CANN,wCAMfQ,EANe,eAMXC,KANW,8BAOQT,QAAQ,CAAC,IAAD,CAPhB,yCAOfU,OAPe,eAONC,UAPM,8BAQEX,QAAQ,CAAC,EAAD,CARV,yCAQfY,IARe,eAQTC,OARS,eAUtBd,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,IAAI,CAAGE,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAX,CAAb,CACAJ,OAAO,CAACD,IAAD,CAAP,CACA;AACAX,KAAK,CAACiB,GAAN,2CAA6CN,IAAI,CAACO,EAAlD,GACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAkB,CAAtB,CAAyB,CACrB;AACA;AACA;AACAd,KAAK,CAACY,GAAG,CAACC,IAAL,CAAL,CACAX,UAAU,CAAC,KAAD,CAAV,CACH,CACDa,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAhB,EACH,CAVL,EAWKI,KAXL,CAWW,SAAAC,GAAG,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ,EAXd,EAaH,CAjBQ,CAiBP,EAjBO,CAAT,CAmBAH,OAAO,CAACC,GAAR,CAAYjB,EAAZ,EAEA,GAAMoB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAE5B;AACA3B,KAAK,CAACiB,GAAN,2CAA6CN,IAAI,CAACO,EAAlD,GACKC,IADL,CACU,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAkB,CAAtB,CAAyB,CACrB,GAAMM,CAAAA,IAAI,CAAGR,GAAG,CAACC,IAAJ,CAASQ,MAAT,CAAgB,SAACtB,EAAD,CAAQ,CACjC,MAAOA,CAAAA,EAAE,CAACD,OAAH,EAAc,IAArB,CACH,CAFY,CAAb,CAGAE,KAAK,CAACY,GAAG,CAACC,IAAL,CAAL,CACAX,UAAU,CAAC,KAAD,CAAV,CACH,CACJ,CATL,EAUKe,KAVL,CAUW,SAAAC,GAAG,QAAIH,CAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAJ,EAVd,EAYH,CAfD,CAgBA,MACI,yCACI,2BAAK,SAAS,CAAC,WAAf,EACI,2BAAK,SAAS,CAAC,KAAf,EACI,oBAAC,cAAD,EAAgB,KAAK,CAAEtB,KAAvB,CAA8B,EAAE,CAAEG,EAAlC,CAAsC,OAAO,CAAEE,OAA/C,EADJ,CAEI,oBAAC,qBAAD,EAAuB,OAAO,CAAEH,OAAhC,CAAyC,KAAK,CAAED,eAAhD,CAAiE,iBAAiB,CAAEsB,iBAApF,EAFJ,CADJ,CADJ,CADJ,CAUH,CAzDD,CA0DA,cAAexB,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport RMexercisesLog from '../components/exercise_log';\nimport RMexercisesNewContent from '../components/new_exercise';\n\n\nconst RMexercises = () => {\n\n    const title = \"RM Exercises Log\";\n    const NewContentTitle = \"Create new RM Exercises and Questions\";\n    const service = \"RM\";\n\n    const [ex, setEx] = useState([]);\n    const [spinner, setSpinner] = useState(true);\n    const [user, setUser] = useState('');\n\n    useEffect(() => {\n        const user = JSON.parse(sessionStorage.getItem('key'));\n        setUser(user)\n        //get exercises using corp id\n        axios.get(`http://localhost:5000/excercise/${user.id}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    // const rmEx = res.data.filter((ex) => {\n                    //     return ex.service == \"RM\"\n                    // });\n                    setEx(res.data);\n                    setSpinner(false);\n                }\n                console.log(res.data)\n            })\n            .catch(err => console.log(err));\n\n    },[])\n\n    console.log(ex)\n\n    const refreshContentLog = () => {\n\n        //get exercises then using exercise id\n        axios.get(`http://localhost:5000/excercise/${user.id}`)\n            .then(res => {\n                if (res.data.length > 0) {\n                    const rmEx = res.data.filter((ex) => {\n                        return ex.service == \"RM\"\n                    });\n                    setEx(res.data);\n                    setSpinner(false);\n                }\n            })\n            .catch(err => console.log(err));\n    \n    }\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <RMexercisesLog title={title} ex={ex} spinner={spinner} />\n                    <RMexercisesNewContent service={service} title={NewContentTitle} refreshContentLog={refreshContentLog} />\n                </div>\n        </div>\n        </>\n    );\n}\nexport default RMexercises;"]},"metadata":{},"sourceType":"module"}